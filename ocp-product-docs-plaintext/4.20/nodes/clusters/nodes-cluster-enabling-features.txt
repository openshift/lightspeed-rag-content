# Enabling features using feature gates


As an administrator, you can use feature gates to enable features that are not part of the default set of features.

# Understanding feature gates

You can use the FeatureGate custom resource (CR) to enable specific feature sets in your cluster. A feature set is a collection of {product-title} features that are not enabled by default.

You can activate the following feature set by using the FeatureGate CR:

* TechPreviewNoUpgrade. This feature set is a subset of the current Technology Preview features. This feature set allows you to enable these Technology Preview features on test clusters, where you can fully test them, while leaving the features disabled on production clusters.

[WARNING]
----
Enabling the TechPreviewNoUpgrade feature set on your cluster cannot be undone and prevents minor version updates. You should not enable this feature set on production clusters.
----

The following Technology Preview features are enabled by this feature set:
* AdditionalRoutingCapabilities
* AdminNetworkPolicy
* AlibabaPlatform
* automatedEtcdBackup
* AWSClusterHostedDNS
* AWSEFSDriverVolumeMetrics
* AzureWorkloadIdentity
* BareMetalLoadBalancer
* BootcNodeManagement
* BuildCSIVolumes
* ChunkSizeMiB
* CloudDualStackNodeIPs
* ClusterMonitoringConfig
* ConsolePluginContentSecurityPolicy
* CPMSMachineNamePrefix
* DisableKubeletCloudCredentialProviders
* DNSNameResolver
* DynamicResourceAllocation
* DyanmicServiceEndpointIBMCloud
* EtcdBackendQuota
* Example
* ExternalOIDC
* ExternalOIDCWithUIDAndExtraClaimMappings
* GatewayAPI
* GatewayAPIController
* gcpClusterHostedDNS
* GCPCustomAPIEndpoints
* GCPLabelsTags
* HardwareSpeed
* HighlyAvailableArbiter
* ImageStreamImportMode
* IngressControllerDynamicConfigurationManager
* IngressControllerLBSubnetsAWS
* InsightsConfig
* InsightsConfigAPI
* InsightsOnDemandDataGather
* InsightsRuntimeExtractor
* KMSEncryptionProvider
* KMSv1
* MachineAPIMigration
* MachineAPIProviderOpenStack
* MachineConfigNodes
* ManagedBootImages
* ManagedBootImagesAWS
* MaxUnavailableStatefulSet
* MetricsCollectionProfiles
* MinimumKubeletVersion
* MixedCPUsAllocation
* MultiArchInstallAWS
* MultiArchInstallGCP
* NetworkDiagnosticsConfig
* NetworkLiveMigration
* NetworkSegmentation
* NewOLM
* NewOLMCatalogdAPIV1Metas
* NewOLMOwnSingleNamespace
* NewOLMPreflightPermissionChecks
* NodeDisruptionPolicy
* NodeSwap
* NutanixMultiSubnets
* OnClusterBuild
* OpenShiftPodSecurityAdmission
* OVNObservability
* PersistentIPsForVirtualization
* PinnedImages
* PlatformOperators
* PrivateHostedZoneAWS
* ProcMountType
* RouteAdvertisements
* RouteExternalCertificate
* ServiceAccountTokenNodeBinding
* SetEIPForNLBIngressController
* SignatureStores
* SigstoreImageVerification
* TranslateStreamCloseWebsocketRequests
* UpgradeStatus
* UserNamespacesPodSecurityStandards
* UserNamespacesSupport
* ValidatingAdmissionPolicy
* VolumeAttributesClass
* VolumeGroupSnapshot
* VSphereConfigurableMaxAllowedBlockVolumesPerNode
* VSphereDriverConfiguration
* VSphereHostVMGroupZonal
* VSphereMultiDisk
* VSphereMultiNetworks
* VSphereMultiVCenters

For more information about the features activated by the TechPreviewNoUpgrade feature gate, see the following topics:

* Shared Resources CSI Driver and Build CSI Volumes in OpenShift Builds
* CSI inline ephemeral volumes
* Swap memory on nodes
* Managing machines with the Cluster API
* Disabling the Insights Operator gather operations
* Enabling the Insights Operator gather operations
* Running an Insights Operator gather operation
* Managing the default storage class
* Pod security admission enforcement.

# Enabling feature sets at installation

You can enable feature sets for all nodes in the cluster by editing the install-config.yaml file before you deploy the cluster.

* You have an install-config.yaml file.

1. Use the featureSet parameter to specify the name of the feature set you want to enable, such as TechPreviewNoUpgrade:

[WARNING]
----
Enabling the TechPreviewNoUpgrade feature set on your cluster cannot be undone and prevents minor version updates. You should not enable this feature set on production clusters.
----
Sample install-config.yaml file with an enabled feature set

```yaml
compute:
- hyperthreading: Enabled
  name: worker
  platform:
    aws:
      rootVolume:
        iops: 2000
        size: 500
        type: io1
      metadataService:
        authentication: Optional
      type: c5.4xlarge
      zones:
      - us-west-2c
  replicas: 3
featureSet: TechPreviewNoUpgrade
```

2. Save the file and reference it when using the installation program to deploy the cluster.

You can verify that the feature gates are enabled by looking at the kubelet.conf file on a node after the nodes return to the ready state.

1. From the Administrator perspective in the web console, navigate to Compute -> Nodes.
2. Select a node.
3. In the Node details page, click Terminal.
4. In the terminal window, change your root directory to /host:

```terminal
sh-4.2# chroot /host
```

5. View the kubelet.conf file:

```terminal
sh-4.2# cat /etc/kubernetes/kubelet.conf
```

Sample output

```terminal
# ...
featureGates:
  InsightsOperatorPullingSCA: true,
  LegacyNodeRoleBehavior: false
# ...
```


The features that are listed as true are enabled on your cluster.

[NOTE]
----
The features listed vary depending upon the {product-title} version.
----

# Enabling feature sets using the web console

You can use the {product-title} web console to enable feature sets for all of the nodes in a cluster by editing the FeatureGate custom resource (CR).

To enable feature sets:

1. In the {product-title} web console, switch to the Administration -> Custom Resource Definitions page.
2. On the Custom Resource Definitions page, click FeatureGate.
3. On the Custom Resource Definition Details page, click the Instances tab.
4. Click the cluster feature gate, then click the YAML tab.
5. Edit the cluster instance to add specific feature sets:

[WARNING]
----
Enabling the TechPreviewNoUpgrade feature set on your cluster cannot be undone and prevents minor version updates. You should not enable this feature set on production clusters.
----
Sample Feature Gate custom resource

```yaml
apiVersion: config.openshift.io/v1
kind: FeatureGate
metadata:
  name: cluster 1
# ...
spec:
  featureSet: TechPreviewNoUpgrade 2
```

The name of the FeatureGate CR must be cluster.
Add the feature set that you want to enable:
* TechPreviewNoUpgrade enables specific Technology Preview features.

After you save the changes, new machine configs are created, the machine config pools are updated, and scheduling on each node is disabled while the change is being applied.

You can verify that the feature gates are enabled by looking at the kubelet.conf file on a node after the nodes return to the ready state.

1. From the Administrator perspective in the web console, navigate to Compute -> Nodes.
2. Select a node.
3. In the Node details page, click Terminal.
4. In the terminal window, change your root directory to /host:

```terminal
sh-4.2# chroot /host
```

5. View the kubelet.conf file:

```terminal
sh-4.2# cat /etc/kubernetes/kubelet.conf
```

Sample output

```terminal
# ...
featureGates:
  InsightsOperatorPullingSCA: true,
  LegacyNodeRoleBehavior: false
# ...
```


The features that are listed as true are enabled on your cluster.

[NOTE]
----
The features listed vary depending upon the {product-title} version.
----

# Enabling feature sets using the CLI

You can use the OpenShift CLI (oc) to enable feature sets for all of the nodes in a cluster by editing the FeatureGate custom resource (CR).

* You have installed the OpenShift CLI (oc).

To enable feature sets:

1. Edit the FeatureGate CR named cluster:

```terminal
$ oc edit featuregate cluster
```


[WARNING]
----
Enabling the TechPreviewNoUpgrade feature set on your cluster cannot be undone and prevents minor version updates. You should not enable this feature set on production clusters.
----
Sample FeatureGate custom resource

```yaml
apiVersion: config.openshift.io/v1
kind: FeatureGate
metadata:
  name: cluster 1
# ...
spec:
  featureSet: TechPreviewNoUpgrade 2
```

The name of the FeatureGate CR must be cluster.
Add the feature set that you want to enable:
* TechPreviewNoUpgrade enables specific Technology Preview features.

After you save the changes, new machine configs are created, the machine config pools are updated, and scheduling on each node is disabled while the change is being applied.

You can verify that the feature gates are enabled by looking at the kubelet.conf file on a node after the nodes return to the ready state.

1. From the Administrator perspective in the web console, navigate to Compute -> Nodes.
2. Select a node.
3. In the Node details page, click Terminal.
4. In the terminal window, change your root directory to /host:

```terminal
sh-4.2# chroot /host
```

5. View the kubelet.conf file:

```terminal
sh-4.2# cat /etc/kubernetes/kubelet.conf
```

Sample output

```terminal
# ...
featureGates:
  InsightsOperatorPullingSCA: true,
  LegacyNodeRoleBehavior: false
# ...
```


The features that are listed as true are enabled on your cluster.

[NOTE]
----
The features listed vary depending upon the {product-title} version.
----