# Installing the External Secrets Operator for Red Hat OpenShift


The External Secrets Operator for Red Hat OpenShift is not installed on the {product-title} by default. Install the External Secrets Operator by using either the web console or the command-line interface (CLI).

[IMPORTANT]
----
The External Secrets Operator for Red Hat OpenShift is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.
For more information about the support scope of Red Hat Technology Preview features, see Technology Preview Features Support Scope.
----

# Limitations of External Secrets Operator for Red Hat OpenShift

The following are the limitations of External Secrets Operator for Red Hat OpenShift during the installation and uninstallation of the external-secrets application.

* Uninstalling the External Secrets Operator for Red Hat OpenShift does not delete the resources created for external-secrets application. you must clean up the resources manually.
* When you add cert-manager Operator configurations in externalsecrets.operator.openshift.io object after creation, delete the external-secrets-cert-controller deployment resource manually to prevent degradation of the external-secrets application.
* Enable the BitwardenSecretManagerProvider field in externalsecrets.operator.openshift.io object only when installed on OpenShift Cluster running on x86_64 and arm64 architectures .
* Ensure cert-manager Operator is installed and operational before deploying the External Secrets Operator for Red Hat OpenShift for seamless functioning. If you install the cert-manager Operator later, manually restart the external-secrets-operator pod to apply cert-manager configurations in externalsecrets.operator.openshift.io object.

# Installing the External Secrets Operator for Red Hat OpenShift by using the web console

You can use the web console to install the External Secrets Operator for Red Hat OpenShift.

* You have access to the cluster with cluster-admin privileges.
* You have access to the {product-title} web console.

1. Log in to the {product-title} web console.
2. Navigate to Operators -> OperatorHub.
3. Enter External Secrets Operator in the search box.
4. Select the External Secrets Operator for Red Hat OpenShift from the generated list and click Install.
5. On the Install Operator page:
1. Update the Update channel, if necessary. The channel defaults to tech-preview-v0.1, which installs the latest stable release of the External Secrets Operator.
2. Select the version from Version drop-down list.
3. Choose the Installed Namespace for the Operator.
* To use the default Operator namespace, select the Operator recommended Namespace option.
* To use the namespace that you created, select the Select a Namespace option, and then select the namespace from the drop-down list.
* If the default external-secrets-operator namespace does not exist, it is created for you by the Operator Lifecycle Manager (OLM).
4. Select an Update approval strategy.
* The Automatic strategy enables OLM to automatically update the Operator when a new version is available.
* The Manual strategy requires a user with appropriate credentials to approve the Operator update.
5. Click Install.

1. Navigate to Operators -> Installed Operators.
2. Verify that External Secrets Operator is listed with a Status of Succeeded in the external-secrets-operator namespace.

# Installing the External Secrets Operator for Red Hat OpenShift by using the CLI

You can use the command-line interface (CLI) to install the External Secrets Operator for Red Hat OpenShift.

* You have access to the cluster with cluster-admin privileges.

1. Create a new project named external-secrets-operator by running the following command:

```terminal
$ oc new-project external-secrets-operator
```

2. Create an OperatorGroup object by defining a YAML file with the following content:
Example operatorGroup.yaml file

```yaml
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: openshift-external-secrets-operator
  namespace: external-secrets-operator
spec:
  targetNamespaces: []
```

3. Create the OperatorGroup object by running the following command:

```terminal
$ oc create -f operatorGroup.yaml
```

4. Create a Subscription object by defining a YAML file with the following content:
Example subscription.yaml file

```yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: openshift-external-secrets-operator
  namespace: external-secrets-operator
spec:
  channel: tech-preview-v0.1
  name: openshift-external-secrets-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
  installPlanApproval: Automatic
```

5. Create the Subscription object by running the following command:

```terminal
$ oc create -f subscription.yaml
```


1. Verify that the OLM subscription is created by running the following command:

```terminal
$ oc get subscription -n external-secrets-operator
```

Example output

```terminal
NAME                                  PACKAGE                               SOURCE          CHANNEL
openshift-external-secrets-operator   openshift-external-secrets-operator   eso-010-index   tech-preview-v0.1
```

2. Verify whether the Operator is successfully installed by running the following command:

```terminal
$ oc get csv -n external-secrets-operator
```

Example output

```terminal
NAME                               DISPLAY                                           VERSION   REPLACES   PHASE
external-secrets-operator.v0.1.0   External Secrets Operator for Red Hat OpenShift   0.1.0                Succeeded
```

3. Verify that the status of the External Secrets Operator is Running by entering the following command:

```terminal
$ oc get pods -n external-secrets-operator
```

Example output

```terminal
NAME                                                            READY   STATUS    RESTARTS   AGE
external-secrets-operator-controller-manager-5699f4bc54-kbsmn   1/1     Running   0          25h
```


# Additional resources

* Adding Operators to a cluster

# Installing the External Secrets operand for Red Hat OpenShift by using the CLI

You can use the command-line interface (CLI) to install the External Secrets operand.

* You have access to the cluster with cluster-admin privileges.

1. Create a externalsecrets.openshift.operator.io object by defining a YAML file with the following content:
Example externalsecrets.yaml file

```yaml
apiVersion: operator.openshift.io/v1alpha1
kind: ExternalSecrets
metadata:
  labels:
    app.kubernetes.io/name: external-secrets-operator
  name: cluster
spec: {}
```


For more information on spec configuration, see "External Secrets Operator for Red Hat OpenShift APIs".
2. Create the externalsecrets.openshift.operator.io object by running the following command:

```terminal
$ oc create -f externalsecrets.yaml
```


1. Verify that the external-secrets pods are running by entering the following command:

```terminal
$ oc get pods -n external-secrets
```

Example output

```terminal
NAME                                                READY   STATUS    RESTARTS   AGE
external-secrets-75d47cb9c8-6p4n2                   1/1     Running   0          4h5m
external-secrets-cert-controller-676444b897-qb6ft   1/1     Running   0          4h5m
external-secrets-webhook-b566658ff-7m4d5            1/1     Running   0          4h5m
```

2. Verify that the external-secrets-operator deployment object reports a successful status by running the following command:

```terminal
$ oc get externalsecrets.operator.openshift.io cluster -n external-secrets-operator -o jsonpath='{.status.conditions}' | jq .
```

Example output

```terminal
[
  {
    "lastTransitionTime": "2025-06-17T14:57:04Z",
    "message": "",
    "observedGeneration": 1,
    "reason": "Ready",
    "status": "False",
    "type": "Degraded"
  },
  {
    "lastTransitionTime": "2025-06-17T14:57:04Z",
    "message": "reconciliation successful",
    "observedGeneration": 1,
    "reason": "Ready",
    "status": "True",
    "type": "Ready"
  }
]
```
