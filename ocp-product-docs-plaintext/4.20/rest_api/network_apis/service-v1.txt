# Service [v1]


Description:: 
Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.
Type:: object

# Specification



## .spec

Description:: 
ServiceSpec describes the attributes that a user creates on a service.
Type:: object



## .spec.ports

Description:: 
The list of ports that are exposed by this service. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
Type:: array

## .spec.ports[]

Description:: 
ServicePort contains information on service's port.
Type:: object
Required:: 
* port



## .spec.sessionAffinityConfig

Description:: 
SessionAffinityConfig represents the configurations of session affinity.
Type:: object



## .spec.sessionAffinityConfig.clientIP

Description:: 
ClientIPConfig represents the configurations of Client IP based session affinity.
Type:: object



## .status

Description:: 
ServiceStatus represents the current status of a service.
Type:: object



## .status.loadBalancer

Description:: 
LoadBalancerStatus represents the status of a load-balancer.
Type:: object



## .status.loadBalancer.ingress

Description:: 
Ingress is a list containing ingress points for the load-balancer. Traffic intended for the service should be sent to these ingress points.
Type:: array

## .status.loadBalancer.ingress[]

Description:: 
LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.
Type:: object



## .status.loadBalancer.ingress[].ports

Description:: 
Ports is a list of records of service ports If used, every port defined in the service should have an entry in it
Type:: array

## .status.loadBalancer.ingress[].ports[]

Description:: 
PortStatus represents the error condition of a service port
Type:: object
Required:: 
* port
* protocol



# API endpoints

The following API endpoints are available:

* /api/v1/services
* GET: list or watch objects of kind Service
* /api/v1/watch/services
* GET: watch individual changes to a list of Service. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.
* /api/v1/namespaces/{namespace}/services
* DELETE: delete collection of Service
* GET: list or watch objects of kind Service
* POST: create a Service
* /api/v1/watch/namespaces/{namespace}/services
* GET: watch individual changes to a list of Service. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.
* /api/v1/namespaces/{namespace}/services/{name}
* DELETE: delete a Service
* GET: read the specified Service
* PATCH: partially update the specified Service
* PUT: replace the specified Service
* /api/v1/watch/namespaces/{namespace}/services/{name}
* GET: watch changes to an object of kind Service. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead, filtered to a single item with the &#x27;fieldSelector&#x27; parameter.
* /api/v1/namespaces/{namespace}/services/{name}/status
* GET: read status of the specified Service
* PATCH: partially update status of the specified Service
* PUT: replace status of the specified Service

## /api/v1/services

HTTP method:: GET
Description:: list or watch objects of kind Service



## /api/v1/watch/services

HTTP method:: GET
Description:: watch individual changes to a list of Service. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.



## /api/v1/namespaces/{namespace}/services

HTTP method:: DELETE
Description:: delete collection of Service





HTTP method:: GET
Description:: list or watch objects of kind Service



HTTP method:: POST
Description:: create a Service







## /api/v1/watch/namespaces/{namespace}/services

HTTP method:: GET
Description:: watch individual changes to a list of Service. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.



## /api/v1/namespaces/{namespace}/services/{name}



HTTP method:: DELETE
Description:: delete a Service





HTTP method:: GET
Description:: read the specified Service



HTTP method:: PATCH
Description:: partially update the specified Service





HTTP method:: PUT
Description:: replace the specified Service







## /api/v1/watch/namespaces/{namespace}/services/{name}



HTTP method:: GET
Description:: watch changes to an object of kind Service. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead, filtered to a single item with the &#x27;fieldSelector&#x27; parameter.



## /api/v1/namespaces/{namespace}/services/{name}/status



HTTP method:: GET
Description:: read status of the specified Service



HTTP method:: PATCH
Description:: partially update status of the specified Service





HTTP method:: PUT
Description:: replace status of the specified Service





