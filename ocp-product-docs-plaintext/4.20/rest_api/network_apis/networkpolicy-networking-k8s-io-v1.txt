# NetworkPolicy [networking.k8s.io/v1]


Description:: 
NetworkPolicy describes what network traffic is allowed for a set of Pods
Type:: object

# Specification



## .spec

Description:: 
NetworkPolicySpec provides the specification of a NetworkPolicy
Type:: object
Required:: 
* podSelector



## .spec.egress

Description:: 
egress is a list of egress rules to be applied to the selected pods. Outgoing traffic is allowed if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic matches at least one egress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy limits all outgoing traffic (and serves solely to ensure that the pods it selects are isolated by default). This field is beta-level in 1.8
Type:: array

## .spec.egress[]

Description:: 
NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8
Type:: object



## .spec.egress[].ports

Description:: 
ports is a list of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
Type:: array

## .spec.egress[].ports[]

Description:: 
NetworkPolicyPort describes a port to allow traffic on
Type:: object



## .spec.egress[].to

Description:: 
to is a list of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
Type:: array

## .spec.egress[].to[]

Description:: 
NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of fields are allowed
Type:: object



## .spec.egress[].to[].ipBlock

Description:: 
IPBlock describes a particular CIDR (Ex. "192.168.1.0/24","2001:db8::/64") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.
Type:: object
Required:: 
* cidr



## .spec.ingress

Description:: 
ingress is a list of ingress rules to be applied to the selected pods. Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod (and cluster policy otherwise allows the traffic), OR if the traffic source is the pod's local node, OR if the traffic matches at least one ingress rule across all of the NetworkPolicy objects whose podSelector matches the pod. If this field is empty then this NetworkPolicy does not allow any traffic (and serves solely to ensure that the pods it selects are isolated by default)
Type:: array

## .spec.ingress[]

Description:: 
NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.
Type:: object



## .spec.ingress[].from

Description:: 
from is a list of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the from list.
Type:: array

## .spec.ingress[].from[]

Description:: 
NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of fields are allowed
Type:: object



## .spec.ingress[].from[].ipBlock

Description:: 
IPBlock describes a particular CIDR (Ex. "192.168.1.0/24","2001:db8::/64") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.
Type:: object
Required:: 
* cidr



## .spec.ingress[].ports

Description:: 
ports is a list of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
Type:: array

## .spec.ingress[].ports[]

Description:: 
NetworkPolicyPort describes a port to allow traffic on
Type:: object



# API endpoints

The following API endpoints are available:

* /apis/networking.k8s.io/v1/networkpolicies
* GET: list or watch objects of kind NetworkPolicy
* /apis/networking.k8s.io/v1/watch/networkpolicies
* GET: watch individual changes to a list of NetworkPolicy. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.
* /apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies
* DELETE: delete collection of NetworkPolicy
* GET: list or watch objects of kind NetworkPolicy
* POST: create a NetworkPolicy
* /apis/networking.k8s.io/v1/watch/namespaces/{namespace}/networkpolicies
* GET: watch individual changes to a list of NetworkPolicy. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.
* /apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies/{name}
* DELETE: delete a NetworkPolicy
* GET: read the specified NetworkPolicy
* PATCH: partially update the specified NetworkPolicy
* PUT: replace the specified NetworkPolicy
* /apis/networking.k8s.io/v1/watch/namespaces/{namespace}/networkpolicies/{name}
* GET: watch changes to an object of kind NetworkPolicy. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead, filtered to a single item with the &#x27;fieldSelector&#x27; parameter.

## /apis/networking.k8s.io/v1/networkpolicies

HTTP method:: GET
Description:: list or watch objects of kind NetworkPolicy



## /apis/networking.k8s.io/v1/watch/networkpolicies

HTTP method:: GET
Description:: watch individual changes to a list of NetworkPolicy. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.



## /apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies

HTTP method:: DELETE
Description:: delete collection of NetworkPolicy





HTTP method:: GET
Description:: list or watch objects of kind NetworkPolicy



HTTP method:: POST
Description:: create a NetworkPolicy







## /apis/networking.k8s.io/v1/watch/namespaces/{namespace}/networkpolicies

HTTP method:: GET
Description:: watch individual changes to a list of NetworkPolicy. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.



## /apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies/{name}



HTTP method:: DELETE
Description:: delete a NetworkPolicy





HTTP method:: GET
Description:: read the specified NetworkPolicy



HTTP method:: PATCH
Description:: partially update the specified NetworkPolicy





HTTP method:: PUT
Description:: replace the specified NetworkPolicy







## /apis/networking.k8s.io/v1/watch/namespaces/{namespace}/networkpolicies/{name}



HTTP method:: GET
Description:: watch changes to an object of kind NetworkPolicy. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead, filtered to a single item with the &#x27;fieldSelector&#x27; parameter.

