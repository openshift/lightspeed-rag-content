# EgressQoS [k8s.ovn.org/v1]


Description:: 
EgressQoS is a CRD that allows the user to define a DSCP value
for pods egress traffic on its namespace to specified CIDRs.
Traffic from these pods will be checked against each EgressQoSRule in
the namespace's EgressQoS, and if there is a match the traffic is marked
with the relevant DSCP value.
Type:: object

# Specification



## .spec

Description:: 
EgressQoSSpec defines the desired state of EgressQoS
Type:: object
Required:: 
* egress



## .spec.egress

Description:: 
a collection of Egress QoS rule objects
Type:: array

## .spec.egress[]

Description:: 

Type:: object
Required:: 
* dscp



## .spec.egress[].podSelector

Description:: 
PodSelector applies the QoS rule only to the pods in the namespace whose label
matches this definition. This field is optional, and in case it is not set
results in the rule being applied to all pods in the namespace.
Type:: object



## .spec.egress[].podSelector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.egress[].podSelector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .status

Description:: 
EgressQoSStatus defines the observed state of EgressQoS
Type:: object



## .status.conditions

Description:: 
An array of condition objects indicating details about status of EgressQoS object.
Type:: array

## .status.conditions[]

Description:: 
Condition contains details for one aspect of the current state of this API Resource.
---
This struct is intended for direct use as an array at the field path .status.conditions.  For example,
type FooStatus struct{
    // Represents the observations of a foo's current state.
    // Known .status.conditions.type are: "Available", "Progressing", and "Degraded"
    // +patchMergeKey=type
    // +patchStrategy=merge
    // +listType=map
    // +listMapKey=type
    Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"`
    // other fields
}
Type:: object
Required:: 
* lastTransitionTime
* message
* reason
* status
* type



# API endpoints

The following API endpoints are available:

* /apis/k8s.ovn.org/v1/egressqoses
* GET: list objects of kind EgressQoS
* /apis/k8s.ovn.org/v1/namespaces/{namespace}/egressqoses
* DELETE: delete collection of EgressQoS
* GET: list objects of kind EgressQoS
* POST: create an EgressQoS
* /apis/k8s.ovn.org/v1/namespaces/{namespace}/egressqoses/{name}
* DELETE: delete an EgressQoS
* GET: read the specified EgressQoS
* PATCH: partially update the specified EgressQoS
* PUT: replace the specified EgressQoS
* /apis/k8s.ovn.org/v1/namespaces/{namespace}/egressqoses/{name}/status
* GET: read status of the specified EgressQoS
* PATCH: partially update status of the specified EgressQoS
* PUT: replace status of the specified EgressQoS

## /apis/k8s.ovn.org/v1/egressqoses

HTTP method:: GET
Description:: list objects of kind EgressQoS



## /apis/k8s.ovn.org/v1/namespaces/{namespace}/egressqoses

HTTP method:: DELETE
Description:: delete collection of EgressQoS



HTTP method:: GET
Description:: list objects of kind EgressQoS



HTTP method:: POST
Description:: create an EgressQoS







## /apis/k8s.ovn.org/v1/namespaces/{namespace}/egressqoses/{name}



HTTP method:: DELETE
Description:: delete an EgressQoS





HTTP method:: GET
Description:: read the specified EgressQoS



HTTP method:: PATCH
Description:: partially update the specified EgressQoS





HTTP method:: PUT
Description:: replace the specified EgressQoS







## /apis/k8s.ovn.org/v1/namespaces/{namespace}/egressqoses/{name}/status



HTTP method:: GET
Description:: read status of the specified EgressQoS



HTTP method:: PATCH
Description:: partially update status of the specified EgressQoS





HTTP method:: PUT
Description:: replace status of the specified EgressQoS





