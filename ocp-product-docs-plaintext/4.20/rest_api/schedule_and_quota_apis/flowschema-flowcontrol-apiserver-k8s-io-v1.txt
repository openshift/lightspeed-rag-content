# FlowSchema [flowcontrol.apiserver.k8s.io/v1]


Description:: 
FlowSchema defines the schema of a group of flows. Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a "flow distinguisher".
Type:: object

# Specification



## .spec

Description:: 
FlowSchemaSpec describes how the FlowSchema's specification looks like.
Type:: object
Required:: 
* priorityLevelConfiguration



## .spec.distinguisherMethod

Description:: 
FlowDistinguisherMethod specifies the method of a flow distinguisher.
Type:: object
Required:: 
* type



## .spec.priorityLevelConfiguration

Description:: 
PriorityLevelConfigurationReference contains information that points to the "request-priority" being used.
Type:: object
Required:: 
* name



## .spec.rules

Description:: 
rules describes which requests will match this flow schema. This FlowSchema matches a request if and only if at least one member of rules matches the request. if it is an empty slice, there will be no requests matching the FlowSchema.
Type:: array

## .spec.rules[]

Description:: 
PolicyRulesWithSubjects prescribes a test that applies to a request to an apiserver. The test considers the subject making the request, the verb being requested, and the resource to be acted upon. This PolicyRulesWithSubjects matches a request if and only if both (a) at least one member of subjects matches the request and (b) at least one member of resourceRules or nonResourceRules matches the request.
Type:: object
Required:: 
* subjects



## .spec.rules[].nonResourceRules

Description:: 
nonResourceRules is a list of NonResourcePolicyRules that identify matching requests according to their verb and the target non-resource URL.
Type:: array

## .spec.rules[].nonResourceRules[]

Description:: 
NonResourcePolicyRule is a predicate that matches non-resource requests according to their verb and the target non-resource URL. A NonResourcePolicyRule matches a request if and only if both (a) at least one member of verbs matches the request and (b) at least one member of nonResourceURLs matches the request.
Type:: object
Required:: 
* verbs
* nonResourceURLs



## .spec.rules[].resourceRules

Description:: 
resourceRules is a slice of ResourcePolicyRules that identify matching requests according to their verb and the target resource. At least one of resourceRules and nonResourceRules has to be non-empty.
Type:: array

## .spec.rules[].resourceRules[]

Description:: 
ResourcePolicyRule is a predicate that matches some resource requests, testing the request's verb and the target resource. A ResourcePolicyRule matches a resource request if and only if: (a) at least one member of verbs matches the request, (b) at least one member of apiGroups matches the request, (c) at least one member of resources matches the request, and (d) either (d1) the request does not specify a namespace (i.e., Namespace=="") and clusterScope is true or (d2) the request specifies a namespace and least one member of namespaces matches the request's namespace.
Type:: object
Required:: 
* verbs
* apiGroups
* resources



## .spec.rules[].subjects

Description:: 
subjects is the list of normal user, serviceaccount, or group that this rule cares about. There must be at least one member in this slice. A slice that includes both the system:authenticated and system:unauthenticated user groups matches every request. Required.
Type:: array

## .spec.rules[].subjects[]

Description:: 
Subject matches the originator of a request, as identified by the request authentication system. There are three ways of matching an originator; by user, group, or service account.
Type:: object
Required:: 
* kind



## .spec.rules[].subjects[].group

Description:: 
GroupSubject holds detailed information for group-kind subject.
Type:: object
Required:: 
* name



## .spec.rules[].subjects[].serviceAccount

Description:: 
ServiceAccountSubject holds detailed information for service-account-kind subject.
Type:: object
Required:: 
* namespace
* name



## .spec.rules[].subjects[].user

Description:: 
UserSubject holds detailed information for user-kind subject.
Type:: object
Required:: 
* name



## .status

Description:: 
FlowSchemaStatus represents the current state of a FlowSchema.
Type:: object



## .status.conditions

Description:: 
conditions is a list of the current states of FlowSchema.
Type:: array

## .status.conditions[]

Description:: 
FlowSchemaCondition describes conditions for a FlowSchema.
Type:: object



# API endpoints

The following API endpoints are available:

* /apis/flowcontrol.apiserver.k8s.io/v1/flowschemas
* DELETE: delete collection of FlowSchema
* GET: list or watch objects of kind FlowSchema
* POST: create a FlowSchema
* /apis/flowcontrol.apiserver.k8s.io/v1/watch/flowschemas
* GET: watch individual changes to a list of FlowSchema. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.
* /apis/flowcontrol.apiserver.k8s.io/v1/flowschemas/{name}
* DELETE: delete a FlowSchema
* GET: read the specified FlowSchema
* PATCH: partially update the specified FlowSchema
* PUT: replace the specified FlowSchema
* /apis/flowcontrol.apiserver.k8s.io/v1/watch/flowschemas/{name}
* GET: watch changes to an object of kind FlowSchema. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead, filtered to a single item with the &#x27;fieldSelector&#x27; parameter.
* /apis/flowcontrol.apiserver.k8s.io/v1/flowschemas/{name}/status
* GET: read status of the specified FlowSchema
* PATCH: partially update status of the specified FlowSchema
* PUT: replace status of the specified FlowSchema

## /apis/flowcontrol.apiserver.k8s.io/v1/flowschemas

HTTP method:: DELETE
Description:: delete collection of FlowSchema





HTTP method:: GET
Description:: list or watch objects of kind FlowSchema



HTTP method:: POST
Description:: create a FlowSchema







## /apis/flowcontrol.apiserver.k8s.io/v1/watch/flowschemas

HTTP method:: GET
Description:: watch individual changes to a list of FlowSchema. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.



## /apis/flowcontrol.apiserver.k8s.io/v1/flowschemas/{name}



HTTP method:: DELETE
Description:: delete a FlowSchema





HTTP method:: GET
Description:: read the specified FlowSchema



HTTP method:: PATCH
Description:: partially update the specified FlowSchema





HTTP method:: PUT
Description:: replace the specified FlowSchema







## /apis/flowcontrol.apiserver.k8s.io/v1/watch/flowschemas/{name}



HTTP method:: GET
Description:: watch changes to an object of kind FlowSchema. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead, filtered to a single item with the &#x27;fieldSelector&#x27; parameter.



## /apis/flowcontrol.apiserver.k8s.io/v1/flowschemas/{name}/status



HTTP method:: GET
Description:: read status of the specified FlowSchema



HTTP method:: PATCH
Description:: partially update status of the specified FlowSchema





HTTP method:: PUT
Description:: replace status of the specified FlowSchema





