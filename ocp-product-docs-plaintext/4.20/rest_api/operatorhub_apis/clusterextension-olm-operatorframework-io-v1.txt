# ClusterExtension [olm.operatorframework.io/v1]


Description:: 
ClusterExtension is the Schema for the clusterextensions API
Type:: object

# Specification



## .spec

Description:: 
spec is an optional field that defines the desired state of the ClusterExtension.
Type:: object
Required:: 
* namespace
* serviceAccount
* source



## .spec.install

Description:: 
install is an optional field used to configure the installation options
for the ClusterExtension such as the pre-flight check configuration.
Type:: object



## .spec.install.preflight

Description:: 
preflight is an optional field that can be used to configure the checks that are
run before installation or upgrade of the content for the package specified in the packageName field.
When specified, it replaces the default preflight configuration for install/upgrade actions.
When not specified, the default configuration will be used.
Type:: object
Required:: 
* crdUpgradeSafety



## .spec.install.preflight.crdUpgradeSafety

Description:: 
crdUpgradeSafety is used to configure the CRD Upgrade Safety pre-flight
checks that run prior to upgrades of installed content.
The CRD Upgrade Safety pre-flight check safeguards from unintended
consequences of upgrading a CRD, such as data loss.
Type:: object
Required:: 
* enforcement



## .spec.serviceAccount

Description:: 
serviceAccount is a reference to a ServiceAccount used to perform all interactions
with the cluster that are required to manage the extension.
The ServiceAccount must be configured with the necessary permissions to perform these interactions.
The ServiceAccount must exist in the namespace referenced in the spec.
serviceAccount is required.
Type:: object
Required:: 
* name



## .spec.source

Description:: 
source is a required field which selects the installation source of content
for this ClusterExtension. Selection is performed by setting the sourceType.
Catalog is currently the only implemented sourceType, and setting the
sourcetype to "Catalog" requires the catalog field to also be defined.
Below is a minimal example of a source definition (in yaml):
source:
  sourceType: Catalog
  catalog:
    packageName: example-package
Type:: object
Required:: 
* sourceType



## .spec.source.catalog

Description:: 
catalog is used to configure how information is sourced from a catalog.
This field is required when sourceType is "Catalog", and forbidden otherwise.
Type:: object
Required:: 
* packageName



## .spec.source.catalog.selector

Description:: 
selector is an optional field that can be used
to filter the set of ClusterCatalogs used in the bundle
selection process.
When unspecified, all ClusterCatalogs will be used in
the bundle selection process.
Type:: object



## .spec.source.catalog.selector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.source.catalog.selector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .status

Description:: 
status is an optional field that defines the observed state of the ClusterExtension.
Type:: object



## .status.conditions

Description:: 
The set of condition types which apply to all spec.source variations are Installed and Progressing.
The Installed condition represents whether or not the bundle has been installed for this ClusterExtension.
When Installed is True and the Reason is Succeeded, the bundle has been successfully installed.
When Installed is False and the Reason is Failed, the bundle has failed to install.
The Progressing condition represents whether or not the ClusterExtension is advancing towards a new state.
When Progressing is True and the Reason is Succeeded, the ClusterExtension is making progress towards a new state.
When Progressing is True and the Reason is Retrying, the ClusterExtension has encountered an error that could be resolved on subsequent reconciliation attempts.
When Progressing is False and the Reason is Blocked, the ClusterExtension has encountered an error that requires manual intervention for recovery.
When the ClusterExtension is sourced from a catalog, if may also communicate a deprecation condition.
These are indications from a package owner to guide users away from a particular package, channel, or bundle.
BundleDeprecated is set if the requested bundle version is marked deprecated in the catalog.
ChannelDeprecated is set if the requested channel is marked deprecated in the catalog.
PackageDeprecated is set if the requested package is marked deprecated in the catalog.
Deprecated is a rollup condition that is present when any of the deprecated conditions are present.
Type:: array

## .status.conditions[]

Description:: 
Condition contains details for one aspect of the current state of this API Resource.
Type:: object
Required:: 
* lastTransitionTime
* message
* reason
* status
* type



## .status.install

Description:: 
install is a representation of the current installation status for this ClusterExtension.
Type:: object
Required:: 
* bundle



## .status.install.bundle

Description:: 
bundle is a required field which represents the identifying attributes of a bundle.
A "bundle" is a versioned set of content that represents the resources that
need to be applied to a cluster to install a package.
Type:: object
Required:: 
* name
* version



# API endpoints

The following API endpoints are available:

* /apis/olm.operatorframework.io/v1/clusterextensions
* DELETE: delete collection of ClusterExtension
* GET: list objects of kind ClusterExtension
* POST: create a ClusterExtension
* /apis/olm.operatorframework.io/v1/clusterextensions/{name}
* DELETE: delete a ClusterExtension
* GET: read the specified ClusterExtension
* PATCH: partially update the specified ClusterExtension
* PUT: replace the specified ClusterExtension
* /apis/olm.operatorframework.io/v1/clusterextensions/{name}/status
* GET: read status of the specified ClusterExtension
* PATCH: partially update status of the specified ClusterExtension
* PUT: replace status of the specified ClusterExtension

## /apis/olm.operatorframework.io/v1/clusterextensions

HTTP method:: DELETE
Description:: delete collection of ClusterExtension



HTTP method:: GET
Description:: list objects of kind ClusterExtension



HTTP method:: POST
Description:: create a ClusterExtension







## /apis/olm.operatorframework.io/v1/clusterextensions/{name}



HTTP method:: DELETE
Description:: delete a ClusterExtension





HTTP method:: GET
Description:: read the specified ClusterExtension



HTTP method:: PATCH
Description:: partially update the specified ClusterExtension





HTTP method:: PUT
Description:: replace the specified ClusterExtension







## /apis/olm.operatorframework.io/v1/clusterextensions/{name}/status



HTTP method:: GET
Description:: read status of the specified ClusterExtension



HTTP method:: PATCH
Description:: partially update status of the specified ClusterExtension





HTTP method:: PUT
Description:: replace status of the specified ClusterExtension





