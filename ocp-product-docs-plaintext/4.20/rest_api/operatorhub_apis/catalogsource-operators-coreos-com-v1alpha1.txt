# CatalogSource [operators.coreos.com/v1alpha1]


Description:: 
CatalogSource is a repository of CSVs, CRDs, and operator packages.
Type:: object
Required:: 
* metadata
* spec

# Specification



## .spec

Description:: 

Type:: object
Required:: 
* sourceType



## .spec.grpcPodConfig

Description:: 
GrpcPodConfig exposes different overrides for the pod spec of the CatalogSource Pod.
Only used when SourceType = SourceTypeGrpc and Image is set.
Type:: object



## .spec.grpcPodConfig.affinity

Description:: 
Affinity is the catalog source's pod's affinity.
Type:: object



## .spec.grpcPodConfig.affinity.nodeAffinity

Description:: 
Describes node affinity scheduling rules for the pod.
Type:: object



## .spec.grpcPodConfig.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution

Description:: 
The scheduler will prefer to schedule pods to nodes that satisfy
the affinity expressions specified by this field, but it may choose
a node that violates one or more of the expressions. The node that is
most preferred is the one with the greatest sum of weights, i.e.
for each node that meets all of the scheduling requirements (resource
request, requiredDuringScheduling affinity expressions, etc.),
compute a sum by iterating through the elements of this field and adding
"weight" to the sum if the node matches the corresponding matchExpressions; the
node(s) with the highest sum are the most preferred.
Type:: array

## .spec.grpcPodConfig.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[]

Description:: 
An empty preferred scheduling term matches all objects with implicit weight 0
(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
Type:: object
Required:: 
* preference
* weight



## .spec.grpcPodConfig.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[].preference

Description:: 
A node selector term, associated with the corresponding weight.
Type:: object



## .spec.grpcPodConfig.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[].preference.matchExpressions

Description:: 
A list of node selector requirements by node's labels.
Type:: array

## .spec.grpcPodConfig.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[].preference.matchExpressions[]

Description:: 
A node selector requirement is a selector that contains values, a key, and an operator
that relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.grpcPodConfig.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[].preference.matchFields

Description:: 
A list of node selector requirements by node's fields.
Type:: array

## .spec.grpcPodConfig.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution[].preference.matchFields[]

Description:: 
A node selector requirement is a selector that contains values, a key, and an operator
that relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.grpcPodConfig.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution

Description:: 
If the affinity requirements specified by this field are not met at
scheduling time, the pod will not be scheduled onto the node.
If the affinity requirements specified by this field cease to be met
at some point during pod execution (e.g. due to an update), the system
may or may not try to eventually evict the pod from its node.
Type:: object
Required:: 
* nodeSelectorTerms



## .spec.grpcPodConfig.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms

Description:: 
Required. A list of node selector terms. The terms are ORed.
Type:: array

## .spec.grpcPodConfig.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[]

Description:: 
A null or empty node selector term matches no objects. The requirements of
them are ANDed.
The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
Type:: object



## .spec.grpcPodConfig.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[].matchExpressions

Description:: 
A list of node selector requirements by node's labels.
Type:: array

## .spec.grpcPodConfig.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[].matchExpressions[]

Description:: 
A node selector requirement is a selector that contains values, a key, and an operator
that relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.grpcPodConfig.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[].matchFields

Description:: 
A list of node selector requirements by node's fields.
Type:: array

## .spec.grpcPodConfig.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[].matchFields[]

Description:: 
A node selector requirement is a selector that contains values, a key, and an operator
that relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.grpcPodConfig.affinity.podAffinity

Description:: 
Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
Type:: object



## .spec.grpcPodConfig.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution

Description:: 
The scheduler will prefer to schedule pods to nodes that satisfy
the affinity expressions specified by this field, but it may choose
a node that violates one or more of the expressions. The node that is
most preferred is the one with the greatest sum of weights, i.e.
for each node that meets all of the scheduling requirements (resource
request, requiredDuringScheduling affinity expressions, etc.),
compute a sum by iterating through the elements of this field and adding
"weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
node(s) with the highest sum are the most preferred.
Type:: array

## .spec.grpcPodConfig.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[]

Description:: 
The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
Type:: object
Required:: 
* podAffinityTerm
* weight



## .spec.grpcPodConfig.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm

Description:: 
Required. A pod affinity term, associated with the corresponding weight.
Type:: object
Required:: 
* topologyKey



## .spec.grpcPodConfig.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm.labelSelector

Description:: 
A label query over a set of resources, in this case pods.
If it's null, this PodAffinityTerm matches with no Pods.
Type:: object



## .spec.grpcPodConfig.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm.labelSelector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.grpcPodConfig.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm.labelSelector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.grpcPodConfig.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm.namespaceSelector

Description:: 
A label query over the set of namespaces that the term applies to.
The term is applied to the union of the namespaces selected by this field
and the ones listed in the namespaces field.
null selector and null or empty namespaces list means "this pod's namespace".
An empty selector ({}) matches all namespaces.
Type:: object



## .spec.grpcPodConfig.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm.namespaceSelector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.grpcPodConfig.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm.namespaceSelector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.grpcPodConfig.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution

Description:: 
If the affinity requirements specified by this field are not met at
scheduling time, the pod will not be scheduled onto the node.
If the affinity requirements specified by this field cease to be met
at some point during pod execution (e.g. due to a pod label update), the
system may or may not try to eventually evict the pod from its node.
When there are multiple elements, the lists of nodes corresponding to each
podAffinityTerm are intersected, i.e. all terms must be satisfied.
Type:: array

## .spec.grpcPodConfig.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[]

Description:: 
Defines a set of pods (namely those matching the labelSelector
relative to the given namespace(s)) that this pod should be
co-located (affinity) or not co-located (anti-affinity) with,
where co-located is defined as running on a node whose value of
the label with key <topologyKey> matches that of any node on which
a pod of the set of pods is running
Type:: object
Required:: 
* topologyKey



## .spec.grpcPodConfig.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[].labelSelector

Description:: 
A label query over a set of resources, in this case pods.
If it's null, this PodAffinityTerm matches with no Pods.
Type:: object



## .spec.grpcPodConfig.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[].labelSelector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.grpcPodConfig.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[].labelSelector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.grpcPodConfig.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[].namespaceSelector

Description:: 
A label query over the set of namespaces that the term applies to.
The term is applied to the union of the namespaces selected by this field
and the ones listed in the namespaces field.
null selector and null or empty namespaces list means "this pod's namespace".
An empty selector ({}) matches all namespaces.
Type:: object



## .spec.grpcPodConfig.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[].namespaceSelector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.grpcPodConfig.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution[].namespaceSelector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.grpcPodConfig.affinity.podAntiAffinity

Description:: 
Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
Type:: object



## .spec.grpcPodConfig.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution

Description:: 
The scheduler will prefer to schedule pods to nodes that satisfy
the anti-affinity expressions specified by this field, but it may choose
a node that violates one or more of the expressions. The node that is
most preferred is the one with the greatest sum of weights, i.e.
for each node that meets all of the scheduling requirements (resource
request, requiredDuringScheduling anti-affinity expressions, etc.),
compute a sum by iterating through the elements of this field and adding
"weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
node(s) with the highest sum are the most preferred.
Type:: array

## .spec.grpcPodConfig.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[]

Description:: 
The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
Type:: object
Required:: 
* podAffinityTerm
* weight



## .spec.grpcPodConfig.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm

Description:: 
Required. A pod affinity term, associated with the corresponding weight.
Type:: object
Required:: 
* topologyKey



## .spec.grpcPodConfig.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm.labelSelector

Description:: 
A label query over a set of resources, in this case pods.
If it's null, this PodAffinityTerm matches with no Pods.
Type:: object



## .spec.grpcPodConfig.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm.labelSelector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.grpcPodConfig.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm.labelSelector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.grpcPodConfig.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm.namespaceSelector

Description:: 
A label query over the set of namespaces that the term applies to.
The term is applied to the union of the namespaces selected by this field
and the ones listed in the namespaces field.
null selector and null or empty namespaces list means "this pod's namespace".
An empty selector ({}) matches all namespaces.
Type:: object



## .spec.grpcPodConfig.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm.namespaceSelector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.grpcPodConfig.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution[].podAffinityTerm.namespaceSelector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.grpcPodConfig.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution

Description:: 
If the anti-affinity requirements specified by this field are not met at
scheduling time, the pod will not be scheduled onto the node.
If the anti-affinity requirements specified by this field cease to be met
at some point during pod execution (e.g. due to a pod label update), the
system may or may not try to eventually evict the pod from its node.
When there are multiple elements, the lists of nodes corresponding to each
podAffinityTerm are intersected, i.e. all terms must be satisfied.
Type:: array

## .spec.grpcPodConfig.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[]

Description:: 
Defines a set of pods (namely those matching the labelSelector
relative to the given namespace(s)) that this pod should be
co-located (affinity) or not co-located (anti-affinity) with,
where co-located is defined as running on a node whose value of
the label with key <topologyKey> matches that of any node on which
a pod of the set of pods is running
Type:: object
Required:: 
* topologyKey



## .spec.grpcPodConfig.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[].labelSelector

Description:: 
A label query over a set of resources, in this case pods.
If it's null, this PodAffinityTerm matches with no Pods.
Type:: object



## .spec.grpcPodConfig.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[].labelSelector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.grpcPodConfig.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[].labelSelector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.grpcPodConfig.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[].namespaceSelector

Description:: 
A label query over the set of namespaces that the term applies to.
The term is applied to the union of the namespaces selected by this field
and the ones listed in the namespaces field.
null selector and null or empty namespaces list means "this pod's namespace".
An empty selector ({}) matches all namespaces.
Type:: object



## .spec.grpcPodConfig.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[].namespaceSelector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.grpcPodConfig.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[].namespaceSelector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.grpcPodConfig.extractContent

Description:: 
ExtractContent configures the gRPC catalog Pod to extract catalog metadata from the provided index image and
use a well-known version of the opm server to expose it. The catalog index image that this CatalogSource is
configured to use must be using the file-based catalogs in order to utilize this feature.
Type:: object
Required:: 
* catalogDir



## .spec.grpcPodConfig.tolerations

Description:: 
Tolerations are the catalog source's pod's tolerations.
Type:: array

## .spec.grpcPodConfig.tolerations[]

Description:: 
The pod this Toleration is attached to tolerates any taint that matches
the triple <key,value,effect> using the matching operator <operator>.
Type:: object



## .spec.icon

Description:: 

Type:: object
Required:: 
* base64data
* mediatype



## .spec.updateStrategy

Description:: 
UpdateStrategy defines how updated catalog source images can be discovered
Consists of an interval that defines polling duration and an embedded strategy type
Type:: object



## .spec.updateStrategy.registryPoll

Description:: 

Type:: object



## .status

Description:: 

Type:: object



## .status.conditions

Description:: 
Represents the state of a CatalogSource. Note that Message and Reason represent the original
status information, which may be migrated to be conditions based in the future. Any new features
introduced will use conditions.
Type:: array

## .status.conditions[]

Description:: 
Condition contains details for one aspect of the current state of this API Resource.
Type:: object
Required:: 
* lastTransitionTime
* message
* reason
* status
* type



## .status.configMapReference

Description:: 
ConfigMapReference (deprecated) is the reference to the ConfigMap containing the catalog source's configuration, when the catalog source is a ConfigMap
Type:: object
Required:: 
* name
* namespace



## .status.connectionState

Description:: 
ConnectionState represents the current state of the CatalogSource's connection to the registry
Type:: object
Required:: 
* lastObservedState



## .status.registryService

Description:: 
RegistryService represents the current state of the GRPC service used to serve the catalog
Type:: object



# API endpoints

The following API endpoints are available:

* /apis/operators.coreos.com/v1alpha1/catalogsources
* GET: list objects of kind CatalogSource
* /apis/operators.coreos.com/v1alpha1/namespaces/{namespace}/catalogsources
* DELETE: delete collection of CatalogSource
* GET: list objects of kind CatalogSource
* POST: create a CatalogSource
* /apis/operators.coreos.com/v1alpha1/namespaces/{namespace}/catalogsources/{name}
* DELETE: delete a CatalogSource
* GET: read the specified CatalogSource
* PATCH: partially update the specified CatalogSource
* PUT: replace the specified CatalogSource
* /apis/operators.coreos.com/v1alpha1/namespaces/{namespace}/catalogsources/{name}/status
* GET: read status of the specified CatalogSource
* PATCH: partially update status of the specified CatalogSource
* PUT: replace status of the specified CatalogSource

## /apis/operators.coreos.com/v1alpha1/catalogsources

HTTP method:: GET
Description:: list objects of kind CatalogSource



## /apis/operators.coreos.com/v1alpha1/namespaces/{namespace}/catalogsources

HTTP method:: DELETE
Description:: delete collection of CatalogSource



HTTP method:: GET
Description:: list objects of kind CatalogSource



HTTP method:: POST
Description:: create a CatalogSource







## /apis/operators.coreos.com/v1alpha1/namespaces/{namespace}/catalogsources/{name}



HTTP method:: DELETE
Description:: delete a CatalogSource





HTTP method:: GET
Description:: read the specified CatalogSource



HTTP method:: PATCH
Description:: partially update the specified CatalogSource





HTTP method:: PUT
Description:: replace the specified CatalogSource







## /apis/operators.coreos.com/v1alpha1/namespaces/{namespace}/catalogsources/{name}/status



HTTP method:: GET
Description:: read status of the specified CatalogSource



HTTP method:: PATCH
Description:: partially update status of the specified CatalogSource





HTTP method:: PUT
Description:: replace status of the specified CatalogSource





