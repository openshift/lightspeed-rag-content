# ImageContentSourcePolicy [operator.openshift.io/v1alpha1]


Description:: 
ImageContentSourcePolicy holds cluster-wide information about how to handle registry mirror rules.
When multiple policies are defined, the outcome of the behavior is defined on each field.
Compatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
spec holds user settable values for configuration
Type:: object



## .spec.repositoryDigestMirrors

Description:: 
repositoryDigestMirrors allows images referenced by image digests in pods to be
pulled from alternative mirrored repository locations. The image pull specification
provided to the pod will be compared to the source locations described in RepositoryDigestMirrors
and the image may be pulled down from any of the mirrors in the list instead of the
specified repository allowing administrators to choose a potentially faster mirror.
Only image pull specifications that have an image digest will have this behavior applied
to them - tags will continue to be pulled from the specified repository in the pull spec.
Each “source” repository is treated independently; configurations for different “source”
repositories don’t interact.
When multiple policies are defined for the same “source” repository, the sets of defined
mirrors will be merged together, preserving the relative order of the mirrors, if possible.
For example, if policy A has mirrors a, b, c and policy B has mirrors c, d, e, the
mirrors will be used in the order a, b, c, d, e.  If the orders of mirror entries conflict
(e.g. a, b vs. b, a) the configuration is not rejected but the resulting order is unspecified.
Type:: array

## .spec.repositoryDigestMirrors[]

Description:: 
RepositoryDigestMirrors holds cluster-wide information about how to handle mirros in the registries config.
Note: the mirrors only work when pulling the images that are referenced by their digests.
Type:: object
Required:: 
* source



# API endpoints

The following API endpoints are available:

* /apis/operator.openshift.io/v1alpha1/imagecontentsourcepolicies
* DELETE: delete collection of ImageContentSourcePolicy
* GET: list objects of kind ImageContentSourcePolicy
* POST: create an ImageContentSourcePolicy
* /apis/operator.openshift.io/v1alpha1/imagecontentsourcepolicies/{name}
* DELETE: delete an ImageContentSourcePolicy
* GET: read the specified ImageContentSourcePolicy
* PATCH: partially update the specified ImageContentSourcePolicy
* PUT: replace the specified ImageContentSourcePolicy
* /apis/operator.openshift.io/v1alpha1/imagecontentsourcepolicies/{name}/status
* GET: read status of the specified ImageContentSourcePolicy
* PATCH: partially update status of the specified ImageContentSourcePolicy
* PUT: replace status of the specified ImageContentSourcePolicy

## /apis/operator.openshift.io/v1alpha1/imagecontentsourcepolicies

HTTP method:: DELETE
Description:: delete collection of ImageContentSourcePolicy



HTTP method:: GET
Description:: list objects of kind ImageContentSourcePolicy



HTTP method:: POST
Description:: create an ImageContentSourcePolicy







## /apis/operator.openshift.io/v1alpha1/imagecontentsourcepolicies/{name}



HTTP method:: DELETE
Description:: delete an ImageContentSourcePolicy





HTTP method:: GET
Description:: read the specified ImageContentSourcePolicy



HTTP method:: PATCH
Description:: partially update the specified ImageContentSourcePolicy





HTTP method:: PUT
Description:: replace the specified ImageContentSourcePolicy







## /apis/operator.openshift.io/v1alpha1/imagecontentsourcepolicies/{name}/status



HTTP method:: GET
Description:: read status of the specified ImageContentSourcePolicy



HTTP method:: PATCH
Description:: partially update status of the specified ImageContentSourcePolicy





HTTP method:: PUT
Description:: replace status of the specified ImageContentSourcePolicy





