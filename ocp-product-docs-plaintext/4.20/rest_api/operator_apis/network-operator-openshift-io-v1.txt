# Network [operator.openshift.io/v1]


Description:: 
Network describes the cluster's desired network configuration. It is
consumed by the cluster-network-operator.
Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
Type:: object

# Specification



## .spec

Description:: 
NetworkSpec is the top-level network configuration object.
Type:: object



## .spec.additionalNetworks

Description:: 
additionalNetworks is a list of extra networks to make available to pods
when multiple networks are enabled.
Type:: array

## .spec.additionalNetworks[]

Description:: 
AdditionalNetworkDefinition configures an extra network that is available but not
created by default. Instead, pods must request them by name.
type must be specified, along with exactly one "Config" that matches the type.
Type:: object
Required:: 
* name



## .spec.additionalNetworks[].simpleMacvlanConfig

Description:: 
simpleMacvlanConfig configures the macvlan interface in case of type:NetworkTypeSimpleMacvlan
Type:: object



## .spec.additionalNetworks[].simpleMacvlanConfig.ipamConfig

Description:: 
ipamConfig configures IPAM module will be used for IP Address Management (IPAM).
Type:: object



## .spec.additionalNetworks[].simpleMacvlanConfig.ipamConfig.staticIPAMConfig

Description:: 
staticIPAMConfig configures the static IP address in case of type:IPAMTypeStatic
Type:: object



## .spec.additionalNetworks[].simpleMacvlanConfig.ipamConfig.staticIPAMConfig.addresses

Description:: 
addresses configures IP address for the interface
Type:: array

## .spec.additionalNetworks[].simpleMacvlanConfig.ipamConfig.staticIPAMConfig.addresses[]

Description:: 
StaticIPAMAddresses provides IP address and Gateway for static IPAM addresses
Type:: object



## .spec.additionalNetworks[].simpleMacvlanConfig.ipamConfig.staticIPAMConfig.dns

Description:: 
dns configures DNS for the interface
Type:: object



## .spec.additionalNetworks[].simpleMacvlanConfig.ipamConfig.staticIPAMConfig.routes

Description:: 
routes configures IP routes for the interface
Type:: array

## .spec.additionalNetworks[].simpleMacvlanConfig.ipamConfig.staticIPAMConfig.routes[]

Description:: 
StaticIPAMRoutes provides Destination/Gateway pairs for static IPAM routes
Type:: object



## .spec.additionalRoutingCapabilities

Description:: 
additionalRoutingCapabilities describes components and relevant
configuration providing additional routing capabilities. When set, it
enables such components and the usage of the routing capabilities they
provide for the machine network. Upstream operators, like MetalLB
operator, requiring these capabilities may rely on, or automatically set
this attribute. Network plugins may leverage advanced routing
capabilities acquired through the enablement of these components but may
require specific configuration on their side to do so; refer to their
respective documentation and configuration options.
Type:: object
Required:: 
* providers



## .spec.clusterNetwork

Description:: 
clusterNetwork is the IP address pool to use for pod IPs.
Some network providers support multiple ClusterNetworks.
Others only support one. This is equivalent to the cluster-cidr.
Type:: array

## .spec.clusterNetwork[]

Description:: 
ClusterNetworkEntry is a subnet from which to allocate PodIPs. A network of size
HostPrefix (in CIDR notation) will be allocated when nodes join the cluster. If
the HostPrefix field is not used by the plugin, it can be left unset.
Not all network providers support multiple ClusterNetworks
Type:: object



## .spec.defaultNetwork

Description:: 
defaultNetwork is the "default" network that all pods will receive
Type:: object



## .spec.defaultNetwork.openshiftSDNConfig

Description:: 
openshiftSDNConfig was previously used to configure the openshift-sdn plugin.
DEPRECATED: OpenShift SDN is no longer supported.
Type:: object



## .spec.defaultNetwork.ovnKubernetesConfig

Description:: 
ovnKubernetesConfig configures the ovn-kubernetes plugin.
Type:: object



## .spec.defaultNetwork.ovnKubernetesConfig.egressIPConfig

Description:: 
egressIPConfig holds the configuration for EgressIP options.
Type:: object



## .spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig

Description:: 
gatewayConfig holds the configuration for node gateway options.
Type:: object



## .spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipv4

Description:: 
ipv4 allows users to configure IP settings for IPv4 connections. When omitted, this means no opinion and the default
configuration is used. Check individual members fields within ipv4 for details of default values.
Type:: object



## .spec.defaultNetwork.ovnKubernetesConfig.gatewayConfig.ipv6

Description:: 
ipv6 allows users to configure IP settings for IPv6 connections. When omitted, this means no opinion and the default
configuration is used. Check individual members fields within ipv6 for details of default values.
Type:: object



## .spec.defaultNetwork.ovnKubernetesConfig.hybridOverlayConfig

Description:: 
hybridOverlayConfig configures an additional overlay network for peers that are
not using OVN.
Type:: object



## .spec.defaultNetwork.ovnKubernetesConfig.hybridOverlayConfig.hybridClusterNetwork

Description:: 
hybridClusterNetwork defines a network space given to nodes on an additional overlay network.
Type:: array

## .spec.defaultNetwork.ovnKubernetesConfig.hybridOverlayConfig.hybridClusterNetwork[]

Description:: 
ClusterNetworkEntry is a subnet from which to allocate PodIPs. A network of size
HostPrefix (in CIDR notation) will be allocated when nodes join the cluster. If
the HostPrefix field is not used by the plugin, it can be left unset.
Not all network providers support multiple ClusterNetworks
Type:: object



## .spec.defaultNetwork.ovnKubernetesConfig.ipsecConfig

Description:: 
ipsecConfig enables and configures IPsec for pods on the pod network within the
cluster.
Type:: object



## .spec.defaultNetwork.ovnKubernetesConfig.ipsecConfig.full

Description:: 
full defines configuration parameters for the IPsec Full mode.
This is permitted only when mode is configured with Full,
and forbidden otherwise.
Type:: object



## .spec.defaultNetwork.ovnKubernetesConfig.ipv4

Description:: 
ipv4 allows users to configure IP settings for IPv4 connections. When ommitted,
this means no opinions and the default configuration is used. Check individual
fields within ipv4 for details of default values.
Type:: object



## .spec.defaultNetwork.ovnKubernetesConfig.ipv6

Description:: 
ipv6 allows users to configure IP settings for IPv6 connections. When ommitted,
this means no opinions and the default configuration is used. Check individual
fields within ipv4 for details of default values.
Type:: object



## .spec.defaultNetwork.ovnKubernetesConfig.policyAuditConfig

Description:: 
policyAuditConfig is the configuration for network policy audit events. If unset,
reported defaults are used.
Type:: object



## .spec.exportNetworkFlows

Description:: 
exportNetworkFlows enables and configures the export of network flow metadata from the pod network
by using protocols NetFlow, SFlow or IPFIX. Currently only supported on OVN-Kubernetes plugin.
If unset, flows will not be exported to any collector.
Type:: object



## .spec.exportNetworkFlows.ipfix

Description:: 
ipfix defines IPFIX configuration.
Type:: object



## .spec.exportNetworkFlows.netFlow

Description:: 
netFlow defines the NetFlow configuration.
Type:: object



## .spec.exportNetworkFlows.sFlow

Description:: 
sFlow defines the SFlow configuration.
Type:: object



## .spec.kubeProxyConfig

Description:: 
kubeProxyConfig lets us configure desired proxy configuration, if
deployKubeProxy is true. If not specified, sensible defaults will be chosen by
OpenShift directly.
Type:: object



## .spec.kubeProxyConfig.proxyArguments

Description:: 
Any additional arguments to pass to the kubeproxy process
Type:: object

## .spec.migration

Description:: 
migration enables and configures cluster network migration, for network changes
that cannot be made instantly.
Type:: object



## .spec.migration.features

Description:: 
features was previously used to configure which network plugin features
would be migrated in a network type migration.
DEPRECATED: network type migration is no longer supported, and setting
this to a non-empty value will result in the network operator rejecting
the configuration.
Type:: object



## .spec.migration.mtu

Description:: 
mtu contains the MTU migration configuration. Set this to allow changing
the MTU values for the default network. If unset, the operation of
changing the MTU for the default network will be rejected.
Type:: object



## .spec.migration.mtu.machine

Description:: 
machine contains MTU migration configuration for the machine's uplink.
Needs to be migrated along with the default network MTU unless the
current uplink MTU already accommodates the default network MTU.
Type:: object



## .spec.migration.mtu.network

Description:: 
network contains information about MTU migration for the default network.
Migrations are only allowed to MTU values lower than the machine's uplink
MTU by the minimum appropriate offset.
Type:: object



## .status

Description:: 
NetworkStatus is detailed operator status, which is distilled
up to the Network clusteroperator object.
Type:: object



## .status.conditions

Description:: 
conditions is a list of conditions and their status
Type:: array

## .status.conditions[]

Description:: 
OperatorCondition is just the standard condition fields.
Type:: object
Required:: 
* lastTransitionTime
* status
* type



## .status.generations

Description:: 
generations are used to determine when an item needs to be reconciled or has changed in a way that needs a reaction.
Type:: array

## .status.generations[]

Description:: 
GenerationStatus keeps track of the generation for a given resource so that decisions about forced updates can be made.
Type:: object
Required:: 
* group
* name
* namespace
* resource



# API endpoints

The following API endpoints are available:

* /apis/operator.openshift.io/v1/networks
* DELETE: delete collection of Network
* GET: list objects of kind Network
* POST: create a Network
* /apis/operator.openshift.io/v1/networks/{name}
* DELETE: delete a Network
* GET: read the specified Network
* PATCH: partially update the specified Network
* PUT: replace the specified Network
* /apis/operator.openshift.io/v1/networks/{name}/status
* GET: read status of the specified Network
* PATCH: partially update status of the specified Network
* PUT: replace status of the specified Network

## /apis/operator.openshift.io/v1/networks

HTTP method:: DELETE
Description:: delete collection of Network



HTTP method:: GET
Description:: list objects of kind Network



HTTP method:: POST
Description:: create a Network







## /apis/operator.openshift.io/v1/networks/{name}



HTTP method:: DELETE
Description:: delete a Network





HTTP method:: GET
Description:: read the specified Network



HTTP method:: PATCH
Description:: partially update the specified Network





HTTP method:: PUT
Description:: replace the specified Network







## /apis/operator.openshift.io/v1/networks/{name}/status



HTTP method:: GET
Description:: read status of the specified Network



HTTP method:: PATCH
Description:: partially update status of the specified Network





HTTP method:: PUT
Description:: replace status of the specified Network





