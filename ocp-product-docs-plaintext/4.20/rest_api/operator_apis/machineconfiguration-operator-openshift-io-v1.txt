# MachineConfiguration [operator.openshift.io/v1]


Description:: 
MachineConfiguration provides information to configure an operator to manage Machine Configuration.
Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
spec is the specification of the desired behavior of the Machine Config Operator
Type:: object



## .spec.managedBootImages

Description:: 
managedBootImages allows configuration for the management of boot images for machine
resources within the cluster. This configuration allows users to select resources that should
be updated to the latest boot images during cluster upgrades, ensuring that new machines
always boot with the current cluster version's boot image. When omitted, this means no opinion
and the platform is left to choose a reasonable default, which is subject to change over time.
The default for each machine manager mode is All for GCP and AWS platforms, and None for all
other platforms.
Type:: object



## .spec.managedBootImages.machineManagers

Description:: 
machineManagers can be used to register machine management resources for boot image updates. The Machine Config Operator
will watch for changes to this list. Only one entry is permitted per type of machine management resource.
Type:: array

## .spec.managedBootImages.machineManagers[]

Description:: 
MachineManager describes a target machine resource that is registered for boot image updates. It stores identifying information
such as the resource type and the API Group of the resource. It also provides granular control via the selection field.
Type:: object
Required:: 
* apiGroup
* resource
* selection



## .spec.managedBootImages.machineManagers[].selection

Description:: 
selection allows granular control of the machine management resources that will be registered for boot image updates.
Type:: object
Required:: 
* mode



## .spec.managedBootImages.machineManagers[].selection.partial

Description:: 
partial provides label selector(s) that can be used to match machine management resources.
Only permitted when mode is set to "Partial".
Type:: object
Required:: 
* machineResourceSelector



## .spec.managedBootImages.machineManagers[].selection.partial.machineResourceSelector

Description:: 
machineResourceSelector is a label selector that can be used to select machine resources like MachineSets.
Type:: object



## .spec.managedBootImages.machineManagers[].selection.partial.machineResourceSelector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.managedBootImages.machineManagers[].selection.partial.machineResourceSelector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.nodeDisruptionPolicy

Description:: 
nodeDisruptionPolicy allows an admin to set granular node disruption actions for
MachineConfig-based updates, such as drains, service reloads, etc. Specifying this will allow
for less downtime when doing small configuration updates to the cluster. This configuration
has no effect on cluster upgrades which will still incur node disruption where required.
Type:: object



## .spec.nodeDisruptionPolicy.files

Description:: 
files is a list of MachineConfig file definitions and actions to take to changes on those paths
This list supports a maximum of 50 entries.
Type:: array

## .spec.nodeDisruptionPolicy.files[]

Description:: 
NodeDisruptionPolicySpecFile is a file entry and corresponding actions to take and is used in the NodeDisruptionPolicyConfig object
Type:: object
Required:: 
* actions
* path



## .spec.nodeDisruptionPolicy.files[].actions

Description:: 
actions represents the series of commands to be executed on changes to the file at
the corresponding file path. Actions will be applied in the order that
they are set in this list. If there are other incoming changes to other MachineConfig
entries in the same update that require a reboot, the reboot will supercede these actions.
Valid actions are Reboot, Drain, Reload, DaemonReload and None.
The Reboot action and the None action cannot be used in conjunction with any of the other actions.
This list supports a maximum of 10 entries.
Type:: array

## .spec.nodeDisruptionPolicy.files[].actions[]

Description:: 

Type:: object
Required:: 
* type



## .spec.nodeDisruptionPolicy.files[].actions[].reload

Description:: 
reload specifies the service to reload, only valid if type is reload
Type:: object
Required:: 
* serviceName



## .spec.nodeDisruptionPolicy.files[].actions[].restart

Description:: 
restart specifies the service to restart, only valid if type is restart
Type:: object
Required:: 
* serviceName



## .spec.nodeDisruptionPolicy.sshkey

Description:: 
sshkey maps to the ignition.sshkeys field in the MachineConfig object, definition an action for this
will apply to all sshkey changes in the cluster
Type:: object
Required:: 
* actions



## .spec.nodeDisruptionPolicy.sshkey.actions

Description:: 
actions represents the series of commands to be executed on changes to the file at
the corresponding file path. Actions will be applied in the order that
they are set in this list. If there are other incoming changes to other MachineConfig
entries in the same update that require a reboot, the reboot will supercede these actions.
Valid actions are Reboot, Drain, Reload, DaemonReload and None.
The Reboot action and the None action cannot be used in conjunction with any of the other actions.
This list supports a maximum of 10 entries.
Type:: array

## .spec.nodeDisruptionPolicy.sshkey.actions[]

Description:: 

Type:: object
Required:: 
* type



## .spec.nodeDisruptionPolicy.sshkey.actions[].reload

Description:: 
reload specifies the service to reload, only valid if type is reload
Type:: object
Required:: 
* serviceName



## .spec.nodeDisruptionPolicy.sshkey.actions[].restart

Description:: 
restart specifies the service to restart, only valid if type is restart
Type:: object
Required:: 
* serviceName



## .spec.nodeDisruptionPolicy.units

Description:: 
units is a list MachineConfig unit definitions and actions to take on changes to those services
This list supports a maximum of 50 entries.
Type:: array

## .spec.nodeDisruptionPolicy.units[]

Description:: 
NodeDisruptionPolicySpecUnit is a systemd unit name and corresponding actions to take and is used in the NodeDisruptionPolicyConfig object
Type:: object
Required:: 
* actions
* name



## .spec.nodeDisruptionPolicy.units[].actions

Description:: 
actions represents the series of commands to be executed on changes to the file at
the corresponding file path. Actions will be applied in the order that
they are set in this list. If there are other incoming changes to other MachineConfig
entries in the same update that require a reboot, the reboot will supercede these actions.
Valid actions are Reboot, Drain, Reload, DaemonReload and None.
The Reboot action and the None action cannot be used in conjunction with any of the other actions.
This list supports a maximum of 10 entries.
Type:: array

## .spec.nodeDisruptionPolicy.units[].actions[]

Description:: 

Type:: object
Required:: 
* type



## .spec.nodeDisruptionPolicy.units[].actions[].reload

Description:: 
reload specifies the service to reload, only valid if type is reload
Type:: object
Required:: 
* serviceName



## .spec.nodeDisruptionPolicy.units[].actions[].restart

Description:: 
restart specifies the service to restart, only valid if type is restart
Type:: object
Required:: 
* serviceName



## .status

Description:: 
status is the most recently observed status of the Machine Config Operator
Type:: object



## .status.conditions

Description:: 
conditions is a list of conditions and their status
Type:: array

## .status.conditions[]

Description:: 
Condition contains details for one aspect of the current state of this API Resource.
Type:: object
Required:: 
* lastTransitionTime
* message
* reason
* status
* type



## .status.managedBootImagesStatus

Description:: 
managedBootImagesStatus reflects what the latest cluster-validated boot image configuration is
and will be used by Machine Config Controller while performing boot image updates.
Type:: object



## .status.managedBootImagesStatus.machineManagers

Description:: 
machineManagers can be used to register machine management resources for boot image updates. The Machine Config Operator
will watch for changes to this list. Only one entry is permitted per type of machine management resource.
Type:: array

## .status.managedBootImagesStatus.machineManagers[]

Description:: 
MachineManager describes a target machine resource that is registered for boot image updates. It stores identifying information
such as the resource type and the API Group of the resource. It also provides granular control via the selection field.
Type:: object
Required:: 
* apiGroup
* resource
* selection



## .status.managedBootImagesStatus.machineManagers[].selection

Description:: 
selection allows granular control of the machine management resources that will be registered for boot image updates.
Type:: object
Required:: 
* mode



## .status.managedBootImagesStatus.machineManagers[].selection.partial

Description:: 
partial provides label selector(s) that can be used to match machine management resources.
Only permitted when mode is set to "Partial".
Type:: object
Required:: 
* machineResourceSelector



## .status.managedBootImagesStatus.machineManagers[].selection.partial.machineResourceSelector

Description:: 
machineResourceSelector is a label selector that can be used to select machine resources like MachineSets.
Type:: object



## .status.managedBootImagesStatus.machineManagers[].selection.partial.machineResourceSelector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .status.managedBootImagesStatus.machineManagers[].selection.partial.machineResourceSelector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .status.nodeDisruptionPolicyStatus

Description:: 
nodeDisruptionPolicyStatus status reflects what the latest cluster-validated policies are,
and will be used by the Machine Config Daemon during future node updates.
Type:: object



## .status.nodeDisruptionPolicyStatus.clusterPolicies

Description:: 
clusterPolicies is a merge of cluster default and user provided node disruption policies.
Type:: object



## .status.nodeDisruptionPolicyStatus.clusterPolicies.files

Description:: 
files is a list of MachineConfig file definitions and actions to take to changes on those paths
Type:: array

## .status.nodeDisruptionPolicyStatus.clusterPolicies.files[]

Description:: 
NodeDisruptionPolicyStatusFile is a file entry and corresponding actions to take and is used in the NodeDisruptionPolicyClusterStatus object
Type:: object
Required:: 
* actions
* path



## .status.nodeDisruptionPolicyStatus.clusterPolicies.files[].actions

Description:: 
actions represents the series of commands to be executed on changes to the file at
the corresponding file path. Actions will be applied in the order that
they are set in this list. If there are other incoming changes to other MachineConfig
entries in the same update that require a reboot, the reboot will supercede these actions.
Valid actions are Reboot, Drain, Reload, DaemonReload and None.
The Reboot action and the None action cannot be used in conjunction with any of the other actions.
This list supports a maximum of 10 entries.
Type:: array

## .status.nodeDisruptionPolicyStatus.clusterPolicies.files[].actions[]

Description:: 

Type:: object
Required:: 
* type



## .status.nodeDisruptionPolicyStatus.clusterPolicies.files[].actions[].reload

Description:: 
reload specifies the service to reload, only valid if type is reload
Type:: object
Required:: 
* serviceName



## .status.nodeDisruptionPolicyStatus.clusterPolicies.files[].actions[].restart

Description:: 
restart specifies the service to restart, only valid if type is restart
Type:: object
Required:: 
* serviceName



## .status.nodeDisruptionPolicyStatus.clusterPolicies.sshkey

Description:: 
sshkey is the overall sshkey MachineConfig definition
Type:: object
Required:: 
* actions



## .status.nodeDisruptionPolicyStatus.clusterPolicies.sshkey.actions

Description:: 
actions represents the series of commands to be executed on changes to the file at
the corresponding file path. Actions will be applied in the order that
they are set in this list. If there are other incoming changes to other MachineConfig
entries in the same update that require a reboot, the reboot will supercede these actions.
Valid actions are Reboot, Drain, Reload, DaemonReload and None.
The Reboot action and the None action cannot be used in conjunction with any of the other actions.
This list supports a maximum of 10 entries.
Type:: array

## .status.nodeDisruptionPolicyStatus.clusterPolicies.sshkey.actions[]

Description:: 

Type:: object
Required:: 
* type



## .status.nodeDisruptionPolicyStatus.clusterPolicies.sshkey.actions[].reload

Description:: 
reload specifies the service to reload, only valid if type is reload
Type:: object
Required:: 
* serviceName



## .status.nodeDisruptionPolicyStatus.clusterPolicies.sshkey.actions[].restart

Description:: 
restart specifies the service to restart, only valid if type is restart
Type:: object
Required:: 
* serviceName



## .status.nodeDisruptionPolicyStatus.clusterPolicies.units

Description:: 
units is a list MachineConfig unit definitions and actions to take on changes to those services
Type:: array

## .status.nodeDisruptionPolicyStatus.clusterPolicies.units[]

Description:: 
NodeDisruptionPolicyStatusUnit is a systemd unit name and corresponding actions to take and is used in the NodeDisruptionPolicyClusterStatus object
Type:: object
Required:: 
* actions
* name



## .status.nodeDisruptionPolicyStatus.clusterPolicies.units[].actions

Description:: 
actions represents the series of commands to be executed on changes to the file at
the corresponding file path. Actions will be applied in the order that
they are set in this list. If there are other incoming changes to other MachineConfig
entries in the same update that require a reboot, the reboot will supercede these actions.
Valid actions are Reboot, Drain, Reload, DaemonReload and None.
The Reboot action and the None action cannot be used in conjunction with any of the other actions.
This list supports a maximum of 10 entries.
Type:: array

## .status.nodeDisruptionPolicyStatus.clusterPolicies.units[].actions[]

Description:: 

Type:: object
Required:: 
* type



## .status.nodeDisruptionPolicyStatus.clusterPolicies.units[].actions[].reload

Description:: 
reload specifies the service to reload, only valid if type is reload
Type:: object
Required:: 
* serviceName



## .status.nodeDisruptionPolicyStatus.clusterPolicies.units[].actions[].restart

Description:: 
restart specifies the service to restart, only valid if type is restart
Type:: object
Required:: 
* serviceName



# API endpoints

The following API endpoints are available:

* /apis/operator.openshift.io/v1/machineconfigurations
* DELETE: delete collection of MachineConfiguration
* GET: list objects of kind MachineConfiguration
* POST: create a MachineConfiguration
* /apis/operator.openshift.io/v1/machineconfigurations/{name}
* DELETE: delete a MachineConfiguration
* GET: read the specified MachineConfiguration
* PATCH: partially update the specified MachineConfiguration
* PUT: replace the specified MachineConfiguration
* /apis/operator.openshift.io/v1/machineconfigurations/{name}/status
* GET: read status of the specified MachineConfiguration
* PATCH: partially update status of the specified MachineConfiguration
* PUT: replace status of the specified MachineConfiguration

## /apis/operator.openshift.io/v1/machineconfigurations

HTTP method:: DELETE
Description:: delete collection of MachineConfiguration



HTTP method:: GET
Description:: list objects of kind MachineConfiguration



HTTP method:: POST
Description:: create a MachineConfiguration







## /apis/operator.openshift.io/v1/machineconfigurations/{name}



HTTP method:: DELETE
Description:: delete a MachineConfiguration





HTTP method:: GET
Description:: read the specified MachineConfiguration



HTTP method:: PATCH
Description:: partially update the specified MachineConfiguration





HTTP method:: PUT
Description:: replace the specified MachineConfiguration







## /apis/operator.openshift.io/v1/machineconfigurations/{name}/status



HTTP method:: GET
Description:: read status of the specified MachineConfiguration



HTTP method:: PATCH
Description:: partially update status of the specified MachineConfiguration





HTTP method:: PUT
Description:: replace status of the specified MachineConfiguration





