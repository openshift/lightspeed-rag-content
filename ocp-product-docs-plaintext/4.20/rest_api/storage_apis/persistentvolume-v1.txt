# PersistentVolume [v1]


Description:: 
PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes
Type:: object

# Specification



## .spec

Description:: 
PersistentVolumeSpec is the specification of a persistent volume.
Type:: object



## .spec.awsElasticBlockStore

Description:: 
Represents a Persistent Disk resource in AWS.
An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
Type:: object
Required:: 
* volumeID



## .spec.azureDisk

Description:: 
AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
Type:: object
Required:: 
* diskName
* diskURI



## .spec.azureFile

Description:: 
AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
Type:: object
Required:: 
* secretName
* shareName



## .spec.cephfs

Description:: 
Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.
Type:: object
Required:: 
* monitors



## .spec.cephfs.secretRef

Description:: 
SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
Type:: object



## .spec.cinder

Description:: 
Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.
Type:: object
Required:: 
* volumeID



## .spec.cinder.secretRef

Description:: 
SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
Type:: object



## .spec.claimRef

Description:: 
ObjectReference contains enough information to let you inspect or modify the referred object.
Type:: object



## .spec.csi

Description:: 
Represents storage that is managed by an external CSI volume driver
Type:: object
Required:: 
* driver
* volumeHandle



## .spec.csi.controllerExpandSecretRef

Description:: 
SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
Type:: object



## .spec.csi.controllerPublishSecretRef

Description:: 
SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
Type:: object



## .spec.csi.nodeExpandSecretRef

Description:: 
SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
Type:: object



## .spec.csi.nodePublishSecretRef

Description:: 
SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
Type:: object



## .spec.csi.nodeStageSecretRef

Description:: 
SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
Type:: object



## .spec.fc

Description:: 
Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.
Type:: object



## .spec.flexVolume

Description:: 
FlexPersistentVolumeSource represents a generic persistent volume resource that is provisioned/attached using an exec based plugin.
Type:: object
Required:: 
* driver



## .spec.flexVolume.secretRef

Description:: 
SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
Type:: object



## .spec.flocker

Description:: 
Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
Type:: object



## .spec.gcePersistentDisk

Description:: 
Represents a Persistent Disk resource in Google Compute Engine.
A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
Type:: object
Required:: 
* pdName



## .spec.glusterfs

Description:: 
Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
Type:: object
Required:: 
* endpoints
* path



## .spec.hostPath

Description:: 
Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
Type:: object
Required:: 
* path



## .spec.iscsi

Description:: 
ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.
Type:: object
Required:: 
* targetPortal
* iqn
* lun



## .spec.iscsi.secretRef

Description:: 
SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
Type:: object



## .spec.local

Description:: 
Local represents directly-attached storage with node affinity
Type:: object
Required:: 
* path



## .spec.nfs

Description:: 
Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.
Type:: object
Required:: 
* server
* path



## .spec.nodeAffinity

Description:: 
VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.
Type:: object



## .spec.nodeAffinity.required

Description:: 
A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.
Type:: object
Required:: 
* nodeSelectorTerms



## .spec.nodeAffinity.required.nodeSelectorTerms

Description:: 
Required. A list of node selector terms. The terms are ORed.
Type:: array

## .spec.nodeAffinity.required.nodeSelectorTerms[]

Description:: 
A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
Type:: object



## .spec.nodeAffinity.required.nodeSelectorTerms[].matchExpressions

Description:: 
A list of node selector requirements by node's labels.
Type:: array

## .spec.nodeAffinity.required.nodeSelectorTerms[].matchExpressions[]

Description:: 
A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.nodeAffinity.required.nodeSelectorTerms[].matchFields

Description:: 
A list of node selector requirements by node's fields.
Type:: array

## .spec.nodeAffinity.required.nodeSelectorTerms[].matchFields[]

Description:: 
A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.photonPersistentDisk

Description:: 
Represents a Photon Controller persistent disk resource.
Type:: object
Required:: 
* pdID



## .spec.portworxVolume

Description:: 
PortworxVolumeSource represents a Portworx volume resource.
Type:: object
Required:: 
* volumeID



## .spec.quobyte

Description:: 
Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
Type:: object
Required:: 
* registry
* volume



## .spec.rbd

Description:: 
Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.
Type:: object
Required:: 
* monitors
* image



## .spec.rbd.secretRef

Description:: 
SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
Type:: object



## .spec.scaleIO

Description:: 
ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume
Type:: object
Required:: 
* gateway
* system
* secretRef



## .spec.scaleIO.secretRef

Description:: 
SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
Type:: object



## .spec.storageos

Description:: 
Represents a StorageOS persistent volume resource.
Type:: object



## .spec.storageos.secretRef

Description:: 
ObjectReference contains enough information to let you inspect or modify the referred object.
Type:: object



## .spec.vsphereVolume

Description:: 
Represents a vSphere volume resource.
Type:: object
Required:: 
* volumePath



## .status

Description:: 
PersistentVolumeStatus is the current status of a persistent volume.
Type:: object



# API endpoints

The following API endpoints are available:

* /api/v1/persistentvolumes
* DELETE: delete collection of PersistentVolume
* GET: list or watch objects of kind PersistentVolume
* POST: create a PersistentVolume
* /api/v1/watch/persistentvolumes
* GET: watch individual changes to a list of PersistentVolume. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.
* /api/v1/persistentvolumes/{name}
* DELETE: delete a PersistentVolume
* GET: read the specified PersistentVolume
* PATCH: partially update the specified PersistentVolume
* PUT: replace the specified PersistentVolume
* /api/v1/watch/persistentvolumes/{name}
* GET: watch changes to an object of kind PersistentVolume. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead, filtered to a single item with the &#x27;fieldSelector&#x27; parameter.
* /api/v1/persistentvolumes/{name}/status
* GET: read status of the specified PersistentVolume
* PATCH: partially update status of the specified PersistentVolume
* PUT: replace status of the specified PersistentVolume

## /api/v1/persistentvolumes

HTTP method:: DELETE
Description:: delete collection of PersistentVolume





HTTP method:: GET
Description:: list or watch objects of kind PersistentVolume



HTTP method:: POST
Description:: create a PersistentVolume







## /api/v1/watch/persistentvolumes

HTTP method:: GET
Description:: watch individual changes to a list of PersistentVolume. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.



## /api/v1/persistentvolumes/{name}



HTTP method:: DELETE
Description:: delete a PersistentVolume





HTTP method:: GET
Description:: read the specified PersistentVolume



HTTP method:: PATCH
Description:: partially update the specified PersistentVolume





HTTP method:: PUT
Description:: replace the specified PersistentVolume







## /api/v1/watch/persistentvolumes/{name}



HTTP method:: GET
Description:: watch changes to an object of kind PersistentVolume. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead, filtered to a single item with the &#x27;fieldSelector&#x27; parameter.



## /api/v1/persistentvolumes/{name}/status



HTTP method:: GET
Description:: read status of the specified PersistentVolume



HTTP method:: PATCH
Description:: partially update status of the specified PersistentVolume





HTTP method:: PUT
Description:: replace status of the specified PersistentVolume





