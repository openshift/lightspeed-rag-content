# ValidatingAdmissionPolicy [admissionregistration.k8s.io/v1]


Description:: 
ValidatingAdmissionPolicy describes the definition of an admission validation policy that accepts or rejects an object without changing it.
Type:: object

# Specification



## .spec

Description:: 
ValidatingAdmissionPolicySpec is the specification of the desired behavior of the AdmissionPolicy.
Type:: object



## .spec.auditAnnotations

Description:: 
auditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request. validations and auditAnnotations may not both be empty; a least one of validations or auditAnnotations is required.
Type:: array

## .spec.auditAnnotations[]

Description:: 
AuditAnnotation describes how to produce an audit annotation for an API request.
Type:: object
Required:: 
* key
* valueExpression



## .spec.matchConditions

Description:: 
MatchConditions is a list of conditions that must be met for a request to be validated. Match conditions filter requests that have already been matched by the rules, namespaceSelector, and objectSelector. An empty list of matchConditions matches all requests. There are a maximum of 64 match conditions allowed.
If a parameter object is provided, it can be accessed via the params handle in the same manner as validation expressions.
The exact matching logic is (in order):
  1. If ANY matchCondition evaluates to FALSE, the policy is skipped.
  2. If ALL matchConditions evaluate to TRUE, the policy is evaluated.
  3. If any matchCondition evaluates to an error (but none are FALSE):
     - If failurePolicy=Fail, reject the request
     - If failurePolicy=Ignore, the policy is skipped
Type:: array

## .spec.matchConditions[]

Description:: 
MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.
Type:: object
Required:: 
* name
* expression



## .spec.matchConstraints

Description:: 
MatchResources decides whether to run the admission control policy on an object based on whether it meets the match criteria. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)
Type:: object



## .spec.matchConstraints.excludeResourceRules

Description:: 
ExcludeResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy should not care about. The exclude rules take precedence over include rules (if a resource matches both, it is excluded)
Type:: array

## .spec.matchConstraints.excludeResourceRules[]

Description:: 
NamedRuleWithOperations is a tuple of Operations and Resources with ResourceNames.
Type:: object



## .spec.matchConstraints.resourceRules

Description:: 
ResourceRules describes what operations on what resources/subresources the ValidatingAdmissionPolicy matches. The policy cares about an operation if it matches any Rule.
Type:: array

## .spec.matchConstraints.resourceRules[]

Description:: 
NamedRuleWithOperations is a tuple of Operations and Resources with ResourceNames.
Type:: object



## .spec.paramKind

Description:: 
ParamKind is a tuple of Group Kind and Version.
Type:: object



## .spec.validations

Description:: 
Validations contain CEL expressions which is used to apply the validation. Validations and AuditAnnotations may not both be empty; a minimum of one Validations or AuditAnnotations is required.
Type:: array

## .spec.validations[]

Description:: 
Validation specifies the CEL expression which is used to apply the validation.
Type:: object
Required:: 
* expression



## .spec.variables

Description:: 
Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under variables in other expressions of the policy except MatchConditions because MatchConditions are evaluated before the rest of the policy.
The expression of a variable can refer to other variables defined earlier in the list but not those after. Thus, Variables must be sorted by the order of first appearance and acyclic.
Type:: array

## .spec.variables[]

Description:: 
Variable is the definition of a variable that is used for composition. A variable is defined as a named expression.
Type:: object
Required:: 
* name
* expression



## .status

Description:: 
ValidatingAdmissionPolicyStatus represents the status of an admission validation policy.
Type:: object



## .status.typeChecking

Description:: 
TypeChecking contains results of type checking the expressions in the ValidatingAdmissionPolicy
Type:: object



## .status.typeChecking.expressionWarnings

Description:: 
The type checking warnings for each expression.
Type:: array

## .status.typeChecking.expressionWarnings[]

Description:: 
ExpressionWarning is a warning information that targets a specific expression.
Type:: object
Required:: 
* fieldRef
* warning



# API endpoints

The following API endpoints are available:

* /apis/admissionregistration.k8s.io/v1/validatingadmissionpolicies
* DELETE: delete collection of ValidatingAdmissionPolicy
* GET: list or watch objects of kind ValidatingAdmissionPolicy
* POST: create a ValidatingAdmissionPolicy
* /apis/admissionregistration.k8s.io/v1/watch/validatingadmissionpolicies
* GET: watch individual changes to a list of ValidatingAdmissionPolicy. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.
* /apis/admissionregistration.k8s.io/v1/validatingadmissionpolicies/{name}
* DELETE: delete a ValidatingAdmissionPolicy
* GET: read the specified ValidatingAdmissionPolicy
* PATCH: partially update the specified ValidatingAdmissionPolicy
* PUT: replace the specified ValidatingAdmissionPolicy
* /apis/admissionregistration.k8s.io/v1/watch/validatingadmissionpolicies/{name}
* GET: watch changes to an object of kind ValidatingAdmissionPolicy. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead, filtered to a single item with the &#x27;fieldSelector&#x27; parameter.
* /apis/admissionregistration.k8s.io/v1/validatingadmissionpolicies/{name}/status
* GET: read status of the specified ValidatingAdmissionPolicy
* PATCH: partially update status of the specified ValidatingAdmissionPolicy
* PUT: replace status of the specified ValidatingAdmissionPolicy

## /apis/admissionregistration.k8s.io/v1/validatingadmissionpolicies

HTTP method:: DELETE
Description:: delete collection of ValidatingAdmissionPolicy





HTTP method:: GET
Description:: list or watch objects of kind ValidatingAdmissionPolicy



HTTP method:: POST
Description:: create a ValidatingAdmissionPolicy







## /apis/admissionregistration.k8s.io/v1/watch/validatingadmissionpolicies

HTTP method:: GET
Description:: watch individual changes to a list of ValidatingAdmissionPolicy. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead.



## /apis/admissionregistration.k8s.io/v1/validatingadmissionpolicies/{name}



HTTP method:: DELETE
Description:: delete a ValidatingAdmissionPolicy





HTTP method:: GET
Description:: read the specified ValidatingAdmissionPolicy



HTTP method:: PATCH
Description:: partially update the specified ValidatingAdmissionPolicy





HTTP method:: PUT
Description:: replace the specified ValidatingAdmissionPolicy







## /apis/admissionregistration.k8s.io/v1/watch/validatingadmissionpolicies/{name}



HTTP method:: GET
Description:: watch changes to an object of kind ValidatingAdmissionPolicy. deprecated: use the &#x27;watch&#x27; parameter with a list operation instead, filtered to a single item with the &#x27;fieldSelector&#x27; parameter.



## /apis/admissionregistration.k8s.io/v1/validatingadmissionpolicies/{name}/status



HTTP method:: GET
Description:: read status of the specified ValidatingAdmissionPolicy



HTTP method:: PATCH
Description:: partially update status of the specified ValidatingAdmissionPolicy





HTTP method:: PUT
Description:: replace status of the specified ValidatingAdmissionPolicy





