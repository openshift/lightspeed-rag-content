# Tuned [tuned.openshift.io/v1]


Description:: 
Tuned is a collection of rules that allows cluster-wide deployment
of node-level sysctls and more flexibility to add custom tuning
specified by user needs.  These rules are translated and passed to all
containerized Tuned daemons running in the cluster in the format that
the daemons understand. The responsibility for applying the node-level
tuning then lies with the containerized Tuned daemons. More info:
https://github.com/openshift/cluster-node-tuning-operator
Type:: object

# Specification



## .spec

Description:: 
spec is the specification of the desired behavior of Tuned. More info:
https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
Type:: object



## .spec.profile

Description:: 
Tuned profiles.
Type:: array

## .spec.profile[]

Description:: 
A Tuned profile.
Type:: object
Required:: 
* data
* name



## .spec.recommend

Description:: 
Selection logic for all Tuned profiles.
Type:: array

## .spec.recommend[]

Description:: 
Selection logic for a single Tuned profile.
Type:: object
Required:: 
* priority
* profile



## .spec.recommend[].match

Description:: 
Rules governing application of a Tuned profile connected by logical OR operator.
Type:: array

## .spec.recommend[].match[]

Description:: 
Rules governing application of a Tuned profile.
Type:: object
Required:: 
* label



## .spec.recommend[].operand

Description:: 
Optional operand configuration.
Type:: object



## .spec.recommend[].operand.tunedConfig

Description:: 
Global configuration for the TuneD daemon as defined in tuned-main.conf
Type:: object



## .status

Description:: 
TunedStatus is the status for a Tuned resource.
Type:: object



## .status.conditions

Description:: 
conditions represents the state of the Tuned profile
Type:: array

## .status.conditions[]

Description:: 
StatusCondition represents a partial state of the per-node Profile application.
Type:: object
Required:: 
* lastTransitionTime
* status
* type



# API endpoints

The following API endpoints are available:

* /apis/tuned.openshift.io/v1/tuneds
* GET: list objects of kind Tuned
* /apis/tuned.openshift.io/v1/namespaces/{namespace}/tuneds
* DELETE: delete collection of Tuned
* GET: list objects of kind Tuned
* POST: create a Tuned
* /apis/tuned.openshift.io/v1/namespaces/{namespace}/tuneds/{name}
* DELETE: delete a Tuned
* GET: read the specified Tuned
* PATCH: partially update the specified Tuned
* PUT: replace the specified Tuned
* /apis/tuned.openshift.io/v1/namespaces/{namespace}/tuneds/{name}/status
* GET: read status of the specified Tuned
* PATCH: partially update status of the specified Tuned
* PUT: replace status of the specified Tuned

## /apis/tuned.openshift.io/v1/tuneds

HTTP method:: GET
Description:: list objects of kind Tuned



## /apis/tuned.openshift.io/v1/namespaces/{namespace}/tuneds

HTTP method:: DELETE
Description:: delete collection of Tuned



HTTP method:: GET
Description:: list objects of kind Tuned



HTTP method:: POST
Description:: create a Tuned







## /apis/tuned.openshift.io/v1/namespaces/{namespace}/tuneds/{name}



HTTP method:: DELETE
Description:: delete a Tuned





HTTP method:: GET
Description:: read the specified Tuned



HTTP method:: PATCH
Description:: partially update the specified Tuned





HTTP method:: PUT
Description:: replace the specified Tuned







## /apis/tuned.openshift.io/v1/namespaces/{namespace}/tuneds/{name}/status



HTTP method:: GET
Description:: read status of the specified Tuned



HTTP method:: PATCH
Description:: partially update status of the specified Tuned





HTTP method:: PUT
Description:: replace status of the specified Tuned





