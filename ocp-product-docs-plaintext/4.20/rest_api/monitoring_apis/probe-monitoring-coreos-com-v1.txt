# Probe [monitoring.coreos.com/v1]


Description:: 
The Probe custom resource definition (CRD) defines how to scrape metrics from prober exporters such as the [blackbox exporter](https://github.com/prometheus/blackbox_exporter).
The Probe resource needs 2 pieces of information:
* The list of probed addresses which can be defined statically or by discovering Kubernetes Ingress objects.
* The prober which exposes the availability of probed endpoints (over various protocols such HTTP, TCP, ICMP, &#8230;&#8203;) as Prometheus metrics.
Prometheus and PrometheusAgent objects select Probe objects using label and namespace selectors.
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
Specification of desired Ingress selection for target discovery by Prometheus.
Type:: object



## .spec.authorization

Description:: 
Authorization section for this endpoint
Type:: object



## .spec.authorization.credentials

Description:: 
Selects a key of a Secret in the namespace that contains the credentials for authentication.
Type:: object
Required:: 
* key



## .spec.basicAuth

Description:: 
BasicAuth allow an endpoint to authenticate over basic authentication.
More info: https://prometheus.io/docs/operating/configuration/#endpoint
Type:: object



## .spec.basicAuth.password

Description:: 
password specifies a key of a Secret containing the password for
authentication.
Type:: object
Required:: 
* key



## .spec.basicAuth.username

Description:: 
username specifies a key of a Secret containing the username for
authentication.
Type:: object
Required:: 
* key



## .spec.bearerTokenSecret

Description:: 
Secret to mount to read bearer token for scraping targets. The secret
needs to be in the same namespace as the probe and accessible by
the Prometheus Operator.
Type:: object
Required:: 
* key



## .spec.metricRelabelings

Description:: 
MetricRelabelConfigs to apply to samples before ingestion.
Type:: array

## .spec.metricRelabelings[]

Description:: 
RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
scraped samples and remote write samples.
More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
Type:: object



## .spec.oauth2

Description:: 
OAuth2 for the URL. Only valid in Prometheus versions 2.27.0 and newer.
Type:: object
Required:: 
* clientId
* clientSecret
* tokenUrl



## .spec.oauth2.clientId

Description:: 
clientId specifies a key of a Secret or ConfigMap containing the
OAuth2 client's ID.
Type:: object



## .spec.oauth2.clientId.configMap

Description:: 
ConfigMap containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.oauth2.clientId.secret

Description:: 
Secret containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.oauth2.clientSecret

Description:: 
clientSecret specifies a key of a Secret containing the OAuth2
client's secret.
Type:: object
Required:: 
* key



## .spec.oauth2.proxyConnectHeader

Description:: 
ProxyConnectHeader optionally specifies headers to send to
proxies during CONNECT requests.
It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
Type:: object

## .spec.oauth2.proxyConnectHeader{}

Description:: 

Type:: array

## .spec.oauth2.proxyConnectHeader{}[]

Description:: 
SecretKeySelector selects a key of a Secret.
Type:: object
Required:: 
* key



## .spec.oauth2.tlsConfig

Description:: 
TLS configuration to use when connecting to the OAuth2 server.
It requires Prometheus >= v2.43.0.
Type:: object



## .spec.oauth2.tlsConfig.ca

Description:: 
Certificate authority used when verifying server certificates.
Type:: object



## .spec.oauth2.tlsConfig.ca.configMap

Description:: 
ConfigMap containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.oauth2.tlsConfig.ca.secret

Description:: 
Secret containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.oauth2.tlsConfig.cert

Description:: 
Client certificate to present when doing client-authentication.
Type:: object



## .spec.oauth2.tlsConfig.cert.configMap

Description:: 
ConfigMap containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.oauth2.tlsConfig.cert.secret

Description:: 
Secret containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.oauth2.tlsConfig.keySecret

Description:: 
Secret containing the client key file for the targets.
Type:: object
Required:: 
* key



## .spec.params

Description:: 
The list of HTTP query parameters for the scrape.
Please note that the .spec.module field takes precedence over the module parameter from this list when both are defined.
The module name must be added using Module under ProbeSpec.
Type:: array

## .spec.params[]

Description:: 
ProbeParam defines specification of extra parameters for a Probe.
Type:: object
Required:: 
* name



## .spec.prober

Description:: 
Specification for the prober to use for probing targets.
The prober.URL parameter is required. Targets cannot be probed if left empty.
Type:: object
Required:: 
* url



## .spec.prober.proxyConnectHeader

Description:: 
ProxyConnectHeader optionally specifies headers to send to
proxies during CONNECT requests.
It requires Prometheus >= v2.43.0, Alertmanager >= v0.25.0 or Thanos >= v0.32.0.
Type:: object

## .spec.prober.proxyConnectHeader{}

Description:: 

Type:: array

## .spec.prober.proxyConnectHeader{}[]

Description:: 
SecretKeySelector selects a key of a Secret.
Type:: object
Required:: 
* key



## .spec.targets

Description:: 
Targets defines a set of static or dynamically discovered targets to probe.
Type:: object



## .spec.targets.ingress

Description:: 
ingress defines the Ingress objects to probe and the relabeling
configuration.
If staticConfig is also defined, staticConfig takes precedence.
Type:: object



## .spec.targets.ingress.namespaceSelector

Description:: 
From which namespaces to select Ingress objects.
Type:: object



## .spec.targets.ingress.relabelingConfigs

Description:: 
RelabelConfigs to apply to the label set of the target before it gets
scraped.
The original ingress address is available via the
tmp_prometheus_ingress_address label. It can be used to customize the
probed URL.
The original scrape job's name is available via thetmp_prometheus_job_name label.
More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
Type:: array

## .spec.targets.ingress.relabelingConfigs[]

Description:: 
RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
scraped samples and remote write samples.
More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
Type:: object



## .spec.targets.ingress.selector

Description:: 
Selector to select the Ingress objects.
Type:: object



## .spec.targets.ingress.selector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.targets.ingress.selector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .spec.targets.staticConfig

Description:: 
staticConfig defines the static list of targets to probe and the
relabeling configuration.
If ingress is also defined, staticConfig takes precedence.
More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#static_config.
Type:: object



## .spec.targets.staticConfig.relabelingConfigs

Description:: 
RelabelConfigs to apply to the label set of the targets before it gets
scraped.
More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
Type:: array

## .spec.targets.staticConfig.relabelingConfigs[]

Description:: 
RelabelConfig allows dynamic rewriting of the label set for targets, alerts,
scraped samples and remote write samples.
More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
Type:: object



## .spec.tlsConfig

Description:: 
TLS configuration to use when scraping the endpoint.
Type:: object



## .spec.tlsConfig.ca

Description:: 
Certificate authority used when verifying server certificates.
Type:: object



## .spec.tlsConfig.ca.configMap

Description:: 
ConfigMap containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.tlsConfig.ca.secret

Description:: 
Secret containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.tlsConfig.cert

Description:: 
Client certificate to present when doing client-authentication.
Type:: object



## .spec.tlsConfig.cert.configMap

Description:: 
ConfigMap containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.tlsConfig.cert.secret

Description:: 
Secret containing data to use for the targets.
Type:: object
Required:: 
* key



## .spec.tlsConfig.keySecret

Description:: 
Secret containing the client key file for the targets.
Type:: object
Required:: 
* key



# API endpoints

The following API endpoints are available:

* /apis/monitoring.coreos.com/v1/probes
* GET: list objects of kind Probe
* /apis/monitoring.coreos.com/v1/namespaces/{namespace}/probes
* DELETE: delete collection of Probe
* GET: list objects of kind Probe
* POST: create a Probe
* /apis/monitoring.coreos.com/v1/namespaces/{namespace}/probes/{name}
* DELETE: delete a Probe
* GET: read the specified Probe
* PATCH: partially update the specified Probe
* PUT: replace the specified Probe

## /apis/monitoring.coreos.com/v1/probes

HTTP method:: GET
Description:: list objects of kind Probe



## /apis/monitoring.coreos.com/v1/namespaces/{namespace}/probes

HTTP method:: DELETE
Description:: delete collection of Probe



HTTP method:: GET
Description:: list objects of kind Probe



HTTP method:: POST
Description:: create a Probe







## /apis/monitoring.coreos.com/v1/namespaces/{namespace}/probes/{name}



HTTP method:: DELETE
Description:: delete a Probe





HTTP method:: GET
Description:: read the specified Probe



HTTP method:: PATCH
Description:: partially update the specified Probe





HTTP method:: PUT
Description:: replace the specified Probe





