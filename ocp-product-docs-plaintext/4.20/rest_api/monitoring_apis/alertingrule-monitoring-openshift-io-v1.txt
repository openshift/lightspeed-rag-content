# AlertingRule [monitoring.openshift.io/v1]


Description:: 
AlertingRule represents a set of user-defined Prometheus rule groups containing
alerting rules.  This resource is the supported method for cluster admins to
create alerts based on metrics recorded by the platform monitoring stack in
OpenShift, i.e. the Prometheus instance deployed to the openshift-monitoring
namespace.  You might use this to create custom alerting rules not shipped with
OpenShift based on metrics from components such as the node_exporter, which
provides machine-level metrics such as CPU usage, or kube-state-metrics, which
provides metrics on Kubernetes usage.
The API is mostly compatible with the upstream PrometheusRule type from the
prometheus-operator.  The primary difference being that recording rules are not
allowed here - only alerting rules.  For each AlertingRule resource created, a
corresponding PrometheusRule will be created in the openshift-monitoring
namespace.  OpenShift requires admins to use the AlertingRule resource rather
than the upstream type in order to allow better OpenShift specific defaulting
and validation, while not modifying the upstream APIs directly.
You can find upstream API documentation for PrometheusRule resources here:
https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md
Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
spec describes the desired state of this AlertingRule object.
Type:: object
Required:: 
* groups



## .spec.groups

Description:: 
groups is a list of grouped alerting rules.  Rule groups are the unit at
which Prometheus parallelizes rule processing.  All rules in a single group
share a configured evaluation interval.  All rules in the group will be
processed together on this interval, sequentially, and all rules will be
processed.
It's common to group related alerting rules into a single AlertingRule
resources, and within that resource, closely related alerts, or simply
alerts with the same interval, into individual groups.  You are also free
to create AlertingRule resources with only a single rule group, but be
aware that this can have a performance impact on Prometheus if the group is
extremely large or has very complex query expressions to evaluate.
Spreading very complex rules across multiple groups to allow them to be
processed in parallel is also a common use-case.
Type:: array

## .spec.groups[]

Description:: 
RuleGroup is a list of sequentially evaluated alerting rules.
Type:: object
Required:: 
* name
* rules



## .spec.groups[].rules

Description:: 
rules is a list of sequentially evaluated alerting rules.  Prometheus may
process rule groups in parallel, but rules within a single group are always
processed sequentially, and all rules are processed.
Type:: array

## .spec.groups[].rules[]

Description:: 
Rule describes an alerting rule.
See Prometheus documentation:
- https://www.prometheus.io/docs/prometheus/latest/configuration/alerting_rules
Type:: object
Required:: 
* alert
* expr



## .status

Description:: 
status describes the current state of this AlertOverrides object.
Type:: object



## .status.prometheusRule

Description:: 
prometheusRule is the generated PrometheusRule for this AlertingRule.  Each
AlertingRule instance results in a generated PrometheusRule object in the
same namespace, which is always the openshift-monitoring namespace.
Type:: object
Required:: 
* name



# API endpoints

The following API endpoints are available:

* /apis/monitoring.openshift.io/v1/alertingrules
* GET: list objects of kind AlertingRule
* /apis/monitoring.openshift.io/v1/namespaces/{namespace}/alertingrules
* DELETE: delete collection of AlertingRule
* GET: list objects of kind AlertingRule
* POST: create an AlertingRule
* /apis/monitoring.openshift.io/v1/namespaces/{namespace}/alertingrules/{name}
* DELETE: delete an AlertingRule
* GET: read the specified AlertingRule
* PATCH: partially update the specified AlertingRule
* PUT: replace the specified AlertingRule
* /apis/monitoring.openshift.io/v1/namespaces/{namespace}/alertingrules/{name}/status
* GET: read status of the specified AlertingRule
* PATCH: partially update status of the specified AlertingRule
* PUT: replace status of the specified AlertingRule

## /apis/monitoring.openshift.io/v1/alertingrules

HTTP method:: GET
Description:: list objects of kind AlertingRule



## /apis/monitoring.openshift.io/v1/namespaces/{namespace}/alertingrules

HTTP method:: DELETE
Description:: delete collection of AlertingRule



HTTP method:: GET
Description:: list objects of kind AlertingRule



HTTP method:: POST
Description:: create an AlertingRule







## /apis/monitoring.openshift.io/v1/namespaces/{namespace}/alertingrules/{name}



HTTP method:: DELETE
Description:: delete an AlertingRule





HTTP method:: GET
Description:: read the specified AlertingRule



HTTP method:: PATCH
Description:: partially update the specified AlertingRule





HTTP method:: PUT
Description:: replace the specified AlertingRule







## /apis/monitoring.openshift.io/v1/namespaces/{namespace}/alertingrules/{name}/status



HTTP method:: GET
Description:: read status of the specified AlertingRule



HTTP method:: PATCH
Description:: partially update status of the specified AlertingRule





HTTP method:: PUT
Description:: replace status of the specified AlertingRule





