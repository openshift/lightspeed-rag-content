# Machine [machine.openshift.io/v1beta1]


Description:: 
Machine is the Schema for the machines API
Compatibility level 2: Stable within a major release for a minimum of 9 months or 3 minor releases (whichever is longer).
Type:: object

# Specification



## .spec

Description:: 
MachineSpec defines the desired state of Machine
Type:: object



## .spec.lifecycleHooks

Description:: 
lifecycleHooks allow users to pause operations on the machine at
certain predefined points within the machine lifecycle.
Type:: object



## .spec.lifecycleHooks.preDrain

Description:: 
preDrain hooks prevent the machine from being drained.
This also blocks further lifecycle events, such as termination.
Type:: array

## .spec.lifecycleHooks.preDrain[]

Description:: 
LifecycleHook represents a single instance of a lifecycle hook
Type:: object
Required:: 
* name
* owner



## .spec.lifecycleHooks.preTerminate

Description:: 
preTerminate hooks prevent the machine from being terminated.
PreTerminate hooks be actioned after the Machine has been drained.
Type:: array

## .spec.lifecycleHooks.preTerminate[]

Description:: 
LifecycleHook represents a single instance of a lifecycle hook
Type:: object
Required:: 
* name
* owner



## .spec.metadata

Description:: 
ObjectMeta will autopopulate the Node created. Use this to
indicate what labels, annotations, name prefix, etc., should be used
when creating the Node.
Type:: object



## .spec.metadata.ownerReferences

Description:: 
List of objects depended by this object. If ALL objects in the list have
been deleted, this object will be garbage collected. If this object is managed by a controller,
then an entry in this list will point to this controller, with the controller field set to true.
There cannot be more than one managing controller.
Type:: array

## .spec.metadata.ownerReferences[]

Description:: 
OwnerReference contains enough information to let you identify an owning
object. An owning object must be in the same namespace as the dependent, or
be cluster-scoped, so there is no namespace field.
Type:: object
Required:: 
* apiVersion
* kind
* name
* uid



## .spec.providerSpec

Description:: 
providerSpec details Provider-specific configuration to use during node creation.
Type:: object



## .spec.taints

Description:: 
The list of the taints to be applied to the corresponding Node in additive
manner. This list will not overwrite any other taints added to the Node on
an ongoing basis by other entities. These taints should be actively reconciled
e.g. if you ask the machine controller to apply a taint and then manually remove
the taint the machine controller will put it back) but not have the machine controller
remove any taints
Type:: array

## .spec.taints[]

Description:: 
The node this Taint is attached to has the "effect" on
any pod that does not tolerate the Taint.
Type:: object
Required:: 
* effect
* key



## .status

Description:: 
MachineStatus defines the observed state of Machine
Type:: object



## .status.addresses

Description:: 
addresses is a list of addresses assigned to the machine. Queried from cloud provider, if available.
Type:: array

## .status.addresses[]

Description:: 
NodeAddress contains information for the node's address.
Type:: object
Required:: 
* address
* type



## .status.conditions

Description:: 
conditions defines the current state of the Machine
Type:: array

## .status.conditions[]

Description:: 
Condition defines an observation of a Machine API resource operational state.
Type:: object
Required:: 
* lastTransitionTime
* status
* type



## .status.lastOperation

Description:: 
lastOperation describes the last-operation performed by the machine-controller.
This API should be useful as a history in terms of the latest operation performed on the
specific machine. It should also convey the state of the latest-operation for example if
it is still on-going, failed or completed successfully.
Type:: object



## .status.nodeRef

Description:: 
nodeRef will point to the corresponding Node if it exists.
Type:: object



# API endpoints

The following API endpoints are available:

* /apis/machine.openshift.io/v1beta1/machines
* GET: list objects of kind Machine
* /apis/machine.openshift.io/v1beta1/namespaces/{namespace}/machines
* DELETE: delete collection of Machine
* GET: list objects of kind Machine
* POST: create a Machine
* /apis/machine.openshift.io/v1beta1/namespaces/{namespace}/machines/{name}
* DELETE: delete a Machine
* GET: read the specified Machine
* PATCH: partially update the specified Machine
* PUT: replace the specified Machine
* /apis/machine.openshift.io/v1beta1/namespaces/{namespace}/machines/{name}/status
* GET: read status of the specified Machine
* PATCH: partially update status of the specified Machine
* PUT: replace status of the specified Machine

## /apis/machine.openshift.io/v1beta1/machines

HTTP method:: GET
Description:: list objects of kind Machine



## /apis/machine.openshift.io/v1beta1/namespaces/{namespace}/machines

HTTP method:: DELETE
Description:: delete collection of Machine



HTTP method:: GET
Description:: list objects of kind Machine



HTTP method:: POST
Description:: create a Machine







## /apis/machine.openshift.io/v1beta1/namespaces/{namespace}/machines/{name}



HTTP method:: DELETE
Description:: delete a Machine





HTTP method:: GET
Description:: read the specified Machine



HTTP method:: PATCH
Description:: partially update the specified Machine





HTTP method:: PUT
Description:: replace the specified Machine







## /apis/machine.openshift.io/v1beta1/namespaces/{namespace}/machines/{name}/status



HTTP method:: GET
Description:: read status of the specified Machine



HTTP method:: PATCH
Description:: partially update status of the specified Machine





HTTP method:: PUT
Description:: replace status of the specified Machine





