# LocalSubjectAccessReview [authorization.k8s.io/v1]


Description:: 
LocalSubjectAccessReview checks whether or not a user or group can perform an action in a given namespace. Having a namespace scoped resource makes it much easier to grant namespace scoped policy that includes permissions checking.
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
Type:: object



## .spec.extra

Description:: 
Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.
Type:: object

## .spec.nonResourceAttributes

Description:: 
NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
Type:: object



## .spec.resourceAttributes

Description:: 
ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
Type:: object



## .spec.resourceAttributes.fieldSelector

Description:: 
FieldSelectorAttributes indicates a field limited access. Webhook authors are encouraged to * ensure rawSelector and requirements are not both set * consider the requirements field if set * not try to parse or consider the rawSelector field if set. This is to avoid another CVE-2022-2880 (i.e. getting different systems to agree on how exactly to parse a query is not something we want), see https://www.oxeye.io/resources/golang-parameter-smuggling-attack for more details. For the *SubjectAccessReview endpoints of the kube-apiserver: * If rawSelector is empty and requirements are empty, the request is not limited. * If rawSelector is present and requirements are empty, the rawSelector will be parsed and limited if the parsing succeeds. * If rawSelector is empty and requirements are present, the requirements should be honored * If rawSelector is present and requirements are present, the request is invalid.
Type:: object



## .spec.resourceAttributes.labelSelector

Description:: 
LabelSelectorAttributes indicates a label limited access. Webhook authors are encouraged to * ensure rawSelector and requirements are not both set * consider the requirements field if set * not try to parse or consider the rawSelector field if set. This is to avoid another CVE-2022-2880 (i.e. getting different systems to agree on how exactly to parse a query is not something we want), see https://www.oxeye.io/resources/golang-parameter-smuggling-attack for more details. For the *SubjectAccessReview endpoints of the kube-apiserver: * If rawSelector is empty and requirements are empty, the request is not limited. * If rawSelector is present and requirements are empty, the rawSelector will be parsed and limited if the parsing succeeds. * If rawSelector is empty and requirements are present, the requirements should be honored * If rawSelector is present and requirements are present, the request is invalid.
Type:: object



## .status

Description:: 
SubjectAccessReviewStatus
Type:: object
Required:: 
* allowed



# API endpoints

The following API endpoints are available:

* /apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews
* POST: create a LocalSubjectAccessReview

## /apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews



HTTP method:: POST
Description:: create a LocalSubjectAccessReview



