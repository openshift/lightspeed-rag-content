# APIServer [config.openshift.io/v1]


Description:: 
APIServer holds configuration (like serving certificates, client CA and CORS domains)
shared by all API servers in the system, among them especially kube-apiserver
and openshift-apiserver. The canonical name of an instance is 'cluster'.
Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
spec holds user settable values for configuration
Type:: object



## .spec.audit

Description:: 
audit specifies the settings for audit configuration to be applied to all OpenShift-provided
API servers in the cluster.
Type:: object



## .spec.audit.customRules

Description:: 
customRules specify profiles per group. These profile take precedence over the
top-level profile field if they apply. They are evaluation from top to bottom and
the first one that matches, applies.
Type:: array

## .spec.audit.customRules[]

Description:: 
AuditCustomRule describes a custom rule for an audit profile that takes precedence over
the top-level profile.
Type:: object
Required:: 
* group
* profile



## .spec.clientCA

Description:: 
clientCA references a ConfigMap containing a certificate bundle for the signers that will be recognized for
incoming client certificates in addition to the operator managed signers. If this is empty, then only operator managed signers are valid.
You usually only have to set this if you have your own PKI you wish to honor client certificates from.
The ConfigMap must exist in the openshift-config namespace and contain the following required fields:
- ConfigMap.Data["ca-bundle.crt"] - CA bundle.
Type:: object
Required:: 
* name



## .spec.encryption

Description:: 
encryption allows the configuration of encryption of resources at the datastore layer.
Type:: object



## .spec.servingCerts

Description:: 
servingCert is the TLS cert info for serving secure traffic. If not specified, operator managed certificates
will be used for serving secure traffic.
Type:: object



## .spec.servingCerts.namedCertificates

Description:: 
namedCertificates references secrets containing the TLS cert info for serving secure traffic to specific hostnames.
If no named certificates are provided, or no named certificates match the server name as understood by a client,
the defaultServingCertificate will be used.
Type:: array

## .spec.servingCerts.namedCertificates[]

Description:: 
APIServerNamedServingCert maps a server DNS name, as understood by a client, to a certificate.
Type:: object



## .spec.servingCerts.namedCertificates[].servingCertificate

Description:: 
servingCertificate references a kubernetes.io/tls type secret containing the TLS cert info for serving secure traffic.
The secret must exist in the openshift-config namespace and contain the following required fields:
- Secret.Data["tls.key"] - TLS private key.
- Secret.Data["tls.crt"] - TLS certificate.
Type:: object
Required:: 
* name



## .spec.tlsSecurityProfile

Description:: 
tlsSecurityProfile specifies settings for TLS connections for externally exposed servers.
If unset, a default (which may change between releases) is chosen. Note that only Old,
Intermediate and Custom profiles are currently supported, and the maximum available
minTLSVersion is VersionTLS12.
Type:: object



## .status

Description:: 
status holds observed values from the cluster. They may not be overridden.
Type:: object

# API endpoints

The following API endpoints are available:

* /apis/config.openshift.io/v1/apiservers
* DELETE: delete collection of APIServer
* GET: list objects of kind APIServer
* POST: create an APIServer
* /apis/config.openshift.io/v1/apiservers/{name}
* DELETE: delete an APIServer
* GET: read the specified APIServer
* PATCH: partially update the specified APIServer
* PUT: replace the specified APIServer
* /apis/config.openshift.io/v1/apiservers/{name}/status
* GET: read status of the specified APIServer
* PATCH: partially update status of the specified APIServer
* PUT: replace status of the specified APIServer

## /apis/config.openshift.io/v1/apiservers

HTTP method:: DELETE
Description:: delete collection of APIServer



HTTP method:: GET
Description:: list objects of kind APIServer



HTTP method:: POST
Description:: create an APIServer







## /apis/config.openshift.io/v1/apiservers/{name}



HTTP method:: DELETE
Description:: delete an APIServer





HTTP method:: GET
Description:: read the specified APIServer



HTTP method:: PATCH
Description:: partially update the specified APIServer





HTTP method:: PUT
Description:: replace the specified APIServer







## /apis/config.openshift.io/v1/apiservers/{name}/status



HTTP method:: GET
Description:: read status of the specified APIServer



HTTP method:: PATCH
Description:: partially update status of the specified APIServer





HTTP method:: PUT
Description:: replace status of the specified APIServer





