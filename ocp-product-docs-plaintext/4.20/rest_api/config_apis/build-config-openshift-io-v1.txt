# Build [config.openshift.io/v1]


Description:: 
Build configures the behavior of OpenShift builds for the entire cluster.
This includes default settings that can be overridden in BuildConfig objects, and overrides which are applied to all builds.
The canonical name is "cluster"
Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
spec holds user-settable values for the build controller configuration
Type:: object



## .spec.additionalTrustedCA

Description:: 
additionalTrustedCA is a reference to a ConfigMap containing additional CAs that
should be trusted for image pushes and pulls during builds.
The namespace for this config map is openshift-config.
DEPRECATED: Additional CAs for image pull and push should be set on
image.config.openshift.io/cluster instead.
Type:: object
Required:: 
* name



## .spec.buildDefaults

Description:: 
buildDefaults controls the default information for Builds
Type:: object



## .spec.buildDefaults.defaultProxy

Description:: 
defaultProxy contains the default proxy settings for all build operations, including image pull/push
and source download.
Values can be overrode by setting the HTTP_PROXY, HTTPS_PROXY, and NO_PROXY environment variables
in the build config's strategy.
Type:: object



## .spec.buildDefaults.defaultProxy.trustedCA

Description:: 
trustedCA is a reference to a ConfigMap containing a CA certificate bundle.
The trustedCA field should only be consumed by a proxy validator. The
validator is responsible for reading the certificate bundle from the required
key "ca-bundle.crt", merging it with the system default trust bundle,
and writing the merged trust bundle to a ConfigMap named "trusted-ca-bundle"
in the "openshift-config-managed" namespace. Clients that expect to make
proxy connections must use the trusted-ca-bundle for all HTTPS requests to
the proxy, and may use the trusted-ca-bundle for non-proxy HTTPS requests as
well.
The namespace for the ConfigMap referenced by trustedCA is
"openshift-config". Here is an example ConfigMap (in yaml):
apiVersion: v1
kind: ConfigMap
metadata:
 name: user-ca-bundle
 namespace: openshift-config
 data:
   ca-bundle.crt: \|
     -----BEGIN CERTIFICATE-----
     Custom CA certificate bundle.
     -----END CERTIFICATE-----
Type:: object
Required:: 
* name



## .spec.buildDefaults.env

Description:: 
env is a set of default environment variables that will be applied to the
build if the specified variables do not exist on the build
Type:: array

## .spec.buildDefaults.env[]

Description:: 
EnvVar represents an environment variable present in a Container.
Type:: object
Required:: 
* name



## .spec.buildDefaults.env[].valueFrom

Description:: 
Source for the environment variable's value. Cannot be used if value is not empty.
Type:: object



## .spec.buildDefaults.env[].valueFrom.configMapKeyRef

Description:: 
Selects a key of a ConfigMap.
Type:: object
Required:: 
* key



## .spec.buildDefaults.env[].valueFrom.fieldRef

Description:: 
Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels['<KEY>'], metadata.annotations['<KEY>'],
spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
Type:: object
Required:: 
* fieldPath



## .spec.buildDefaults.env[].valueFrom.resourceFieldRef

Description:: 
Selects a resource of the container: only resources limits and requests
(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
Type:: object
Required:: 
* resource



## .spec.buildDefaults.env[].valueFrom.secretKeyRef

Description:: 
Selects a key of a secret in the pod's namespace
Type:: object
Required:: 
* key



## .spec.buildDefaults.gitProxy

Description:: 
gitProxy contains the proxy settings for git operations only. If set, this will override
any Proxy settings for all git commands, such as git clone.
Values that are not set here will be inherited from DefaultProxy.
Type:: object



## .spec.buildDefaults.gitProxy.trustedCA

Description:: 
trustedCA is a reference to a ConfigMap containing a CA certificate bundle.
The trustedCA field should only be consumed by a proxy validator. The
validator is responsible for reading the certificate bundle from the required
key "ca-bundle.crt", merging it with the system default trust bundle,
and writing the merged trust bundle to a ConfigMap named "trusted-ca-bundle"
in the "openshift-config-managed" namespace. Clients that expect to make
proxy connections must use the trusted-ca-bundle for all HTTPS requests to
the proxy, and may use the trusted-ca-bundle for non-proxy HTTPS requests as
well.
The namespace for the ConfigMap referenced by trustedCA is
"openshift-config". Here is an example ConfigMap (in yaml):
apiVersion: v1
kind: ConfigMap
metadata:
 name: user-ca-bundle
 namespace: openshift-config
 data:
   ca-bundle.crt: \|
     -----BEGIN CERTIFICATE-----
     Custom CA certificate bundle.
     -----END CERTIFICATE-----
Type:: object
Required:: 
* name



## .spec.buildDefaults.imageLabels

Description:: 
imageLabels is a list of docker labels that are applied to the resulting image.
User can override a default label by providing a label with the same name in their
Build/BuildConfig.
Type:: array

## .spec.buildDefaults.imageLabels[]

Description:: 

Type:: object



## .spec.buildDefaults.resources

Description:: 
resources defines resource requirements to execute the build.
Type:: object



## .spec.buildDefaults.resources.claims

Description:: 
Claims lists the names of resources, defined in spec.resourceClaims,
that are used by this container.
This is an alpha field and requires enabling the
DynamicResourceAllocation feature gate.
This field is immutable. It can only be set for containers.
Type:: array

## .spec.buildDefaults.resources.claims[]

Description:: 
ResourceClaim references one entry in PodSpec.ResourceClaims.
Type:: object
Required:: 
* name



## .spec.buildOverrides

Description:: 
buildOverrides controls override settings for builds
Type:: object



## .spec.buildOverrides.imageLabels

Description:: 
imageLabels is a list of docker labels that are applied to the resulting image.
If user provided a label in their Build/BuildConfig with the same name as one in this
list, the user's label will be overwritten.
Type:: array

## .spec.buildOverrides.imageLabels[]

Description:: 

Type:: object



## .spec.buildOverrides.tolerations

Description:: 
tolerations is a list of Tolerations that will override any existing
tolerations set on a build pod.
Type:: array

## .spec.buildOverrides.tolerations[]

Description:: 
The pod this Toleration is attached to tolerates any taint that matches
the triple <key,value,effect> using the matching operator <operator>.
Type:: object



# API endpoints

The following API endpoints are available:

* /apis/config.openshift.io/v1/builds
* DELETE: delete collection of Build
* GET: list objects of kind Build
* POST: create a Build
* /apis/config.openshift.io/v1/builds/{name}
* DELETE: delete a Build
* GET: read the specified Build
* PATCH: partially update the specified Build
* PUT: replace the specified Build
* /apis/config.openshift.io/v1/builds/{name}/status
* GET: read status of the specified Build
* PATCH: partially update status of the specified Build
* PUT: replace status of the specified Build

## /apis/config.openshift.io/v1/builds

HTTP method:: DELETE
Description:: delete collection of Build



HTTP method:: GET
Description:: list objects of kind Build



HTTP method:: POST
Description:: create a Build







## /apis/config.openshift.io/v1/builds/{name}



HTTP method:: DELETE
Description:: delete a Build





HTTP method:: GET
Description:: read the specified Build



HTTP method:: PATCH
Description:: partially update the specified Build





HTTP method:: PUT
Description:: replace the specified Build







## /apis/config.openshift.io/v1/builds/{name}/status



HTTP method:: GET
Description:: read status of the specified Build



HTTP method:: PATCH
Description:: partially update status of the specified Build





HTTP method:: PUT
Description:: replace status of the specified Build





