# Ingress [config.openshift.io/v1]


Description:: 
Ingress holds cluster-wide information about ingress, including the default ingress domain
used for routes. The canonical name is cluster.
Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
spec holds user settable values for configuration
Type:: object



## .spec.componentRoutes

Description:: 
componentRoutes is an optional list of routes that are managed by OpenShift components
that a cluster-admin is able to configure the hostname and serving certificate for.
The namespace and name of each route in this list should match an existing entry in the
status.componentRoutes list.
To determine the set of configurable Routes, look at namespace and name of entries in the
.status.componentRoutes list, where participating operators write the status of
configurable routes.
Type:: array

## .spec.componentRoutes[]

Description:: 
ComponentRouteSpec allows for configuration of a route's hostname and serving certificate.
Type:: object
Required:: 
* hostname
* name
* namespace



## .spec.componentRoutes[].servingCertKeyPairSecret

Description:: 
servingCertKeyPairSecret is a reference to a secret of type kubernetes.io/tls in the openshift-config namespace.
The serving cert/key pair must match and will be used by the operator to fulfill the intent of serving with this name.
If the custom hostname uses the default routing suffix of the cluster,
the Secret specification for a serving certificate will not be needed.
Type:: object
Required:: 
* name



## .spec.loadBalancer

Description:: 
loadBalancer contains the load balancer details in general which are not only specific to the underlying infrastructure
provider of the current cluster and are required for Ingress Controller to work on OpenShift.
Type:: object



## .spec.loadBalancer.platform

Description:: 
platform holds configuration specific to the underlying
infrastructure provider for the ingress load balancers.
When omitted, this means the user has no opinion and the platform is left
to choose reasonable defaults. These defaults are subject to change over time.
Type:: object



## .spec.loadBalancer.platform.aws

Description:: 
aws contains settings specific to the Amazon Web Services infrastructure provider.
Type:: object
Required:: 
* type



## .spec.requiredHSTSPolicies

Description:: 
requiredHSTSPolicies specifies HSTS policies that are required to be set on newly created  or updated routes
matching the domainPattern/s and namespaceSelector/s that are specified in the policy.
Each requiredHSTSPolicy must have at least a domainPattern and a maxAge to validate a route HSTS Policy route
annotation, and affect route admission.
A candidate route is checked for HSTS Policies if it has the HSTS Policy route annotation:
"haproxy.router.openshift.io/hsts_header"
E.g. haproxy.router.openshift.io/hsts_header: max-age=31536000;preload;includeSubDomains
* For each candidate route, if it matches a requiredHSTSPolicy domainPattern and optional namespaceSelector,
then the maxAge, preloadPolicy, and includeSubdomainsPolicy must be valid to be admitted.  Otherwise, the route
is rejected.
* The first match, by domainPattern and optional namespaceSelector, in the ordering of the RequiredHSTSPolicies
determines the route's admission status.
* If the candidate route doesn't match any requiredHSTSPolicy domainPattern and optional namespaceSelector,
then it may use any HSTS Policy annotation.
The HSTS policy configuration may be changed after routes have already been created. An update to a previously
admitted route may then fail if the updated route does not conform to the updated HSTS policy configuration.
However, changing the HSTS policy configuration will not cause a route that is already admitted to stop working.
Note that if there are no RequiredHSTSPolicies, any HSTS Policy annotation on the route is valid.
Type:: array

## .spec.requiredHSTSPolicies[]

Description:: 

Type:: object
Required:: 
* domainPatterns



## .spec.requiredHSTSPolicies[].maxAge

Description:: 
maxAge is the delta time range in seconds during which hosts are regarded as HSTS hosts.
If set to 0, it negates the effect, and hosts are removed as HSTS hosts.
If set to 0 and includeSubdomains is specified, all subdomains of the host are also removed as HSTS hosts.
maxAge is a time-to-live value, and if this policy is not refreshed on a client, the HSTS
policy will eventually expire on that client.
Type:: object



## .spec.requiredHSTSPolicies[].namespaceSelector

Description:: 
namespaceSelector specifies a label selector such that the policy applies only to those routes that
are in namespaces with labels that match the selector, and are in one of the DomainPatterns.
Defaults to the empty LabelSelector, which matches everything.
Type:: object



## .spec.requiredHSTSPolicies[].namespaceSelector.matchExpressions

Description:: 
matchExpressions is a list of label selector requirements. The requirements are ANDed.
Type:: array

## .spec.requiredHSTSPolicies[].namespaceSelector.matchExpressions[]

Description:: 
A label selector requirement is a selector that contains values, a key, and an operator that
relates the key and values.
Type:: object
Required:: 
* key
* operator



## .status

Description:: 
status holds observed values from the cluster. They may not be overridden.
Type:: object



## .status.componentRoutes

Description:: 
componentRoutes is where participating operators place the current route status for routes whose
hostnames and serving certificates can be customized by the cluster-admin.
Type:: array

## .status.componentRoutes[]

Description:: 
ComponentRouteStatus contains information allowing configuration of a route's hostname and serving certificate.
Type:: object
Required:: 
* defaultHostname
* name
* namespace
* relatedObjects



## .status.componentRoutes[].conditions

Description:: 
conditions are used to communicate the state of the componentRoutes entry.
Supported conditions include Available, Degraded and Progressing.
If available is true, the content served by the route can be accessed by users. This includes cases
where a default may continue to serve content while the customized route specified by the cluster-admin
is being configured.
If Degraded is true, that means something has gone wrong trying to handle the componentRoutes entry.
The currentHostnames field may or may not be in effect.
If Progressing is true, that means the component is taking some action related to the componentRoutes entry.
Type:: array

## .status.componentRoutes[].conditions[]

Description:: 
Condition contains details for one aspect of the current state of this API Resource.
Type:: object
Required:: 
* lastTransitionTime
* message
* reason
* status
* type



## .status.componentRoutes[].relatedObjects

Description:: 
relatedObjects is a list of resources which are useful when debugging or inspecting how spec.componentRoutes is applied.
Type:: array

## .status.componentRoutes[].relatedObjects[]

Description:: 
ObjectReference contains enough information to let you inspect or modify the referred object.
Type:: object
Required:: 
* group
* name
* resource



# API endpoints

The following API endpoints are available:

* /apis/config.openshift.io/v1/ingresses
* DELETE: delete collection of Ingress
* GET: list objects of kind Ingress
* POST: create an Ingress
* /apis/config.openshift.io/v1/ingresses/{name}
* DELETE: delete an Ingress
* GET: read the specified Ingress
* PATCH: partially update the specified Ingress
* PUT: replace the specified Ingress
* /apis/config.openshift.io/v1/ingresses/{name}/status
* GET: read status of the specified Ingress
* PATCH: partially update status of the specified Ingress
* PUT: replace status of the specified Ingress

## /apis/config.openshift.io/v1/ingresses

HTTP method:: DELETE
Description:: delete collection of Ingress



HTTP method:: GET
Description:: list objects of kind Ingress



HTTP method:: POST
Description:: create an Ingress







## /apis/config.openshift.io/v1/ingresses/{name}



HTTP method:: DELETE
Description:: delete an Ingress





HTTP method:: GET
Description:: read the specified Ingress



HTTP method:: PATCH
Description:: partially update the specified Ingress





HTTP method:: PUT
Description:: replace the specified Ingress







## /apis/config.openshift.io/v1/ingresses/{name}/status



HTTP method:: GET
Description:: read status of the specified Ingress



HTTP method:: PATCH
Description:: partially update status of the specified Ingress





HTTP method:: PUT
Description:: replace status of the specified Ingress





