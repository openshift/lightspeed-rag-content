# Authentication [config.openshift.io/v1]


Description:: 
Authentication specifies cluster-wide settings for authentication (like OAuth and
webhook token authenticators). The canonical name of an instance is cluster.
Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
spec holds user settable values for configuration
Type:: object



## .spec.oauthMetadata

Description:: 
oauthMetadata contains the discovery endpoint data for OAuth 2.0
Authorization Server Metadata for an external OAuth server.
This discovery document can be viewed from its served location:
oc get --raw '/.well-known/oauth-authorization-server'
For further details, see the IETF Draft:
https://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2
If oauthMetadata.name is non-empty, this value has precedence
over any metadata reference stored in status.
The key "oauthMetadata" is used to locate the data.
If specified and the config map or expected key is not found, no metadata is served.
If the specified metadata is not valid, no metadata is served.
The namespace for this config map is openshift-config.
Type:: object
Required:: 
* name



## .spec.webhookTokenAuthenticator

Description:: 
webhookTokenAuthenticator configures a remote token reviewer.
These remote authentication webhooks can be used to verify bearer tokens
via the tokenreviews.authentication.k8s.io REST API. This is required to
honor bearer tokens that are provisioned by an external authentication service.
Can only be set if "Type" is set to "None".
Type:: object
Required:: 
* kubeConfig



## .spec.webhookTokenAuthenticator.kubeConfig

Description:: 
kubeConfig references a secret that contains kube config file data which
describes how to access the remote webhook service.
The namespace for the referenced secret is openshift-config.
For further details, see:
https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
The key "kubeConfig" is used to locate the data.
If the secret or expected key is not found, the webhook is not honored.
If the specified kube config data is not valid, the webhook is not honored.
Type:: object
Required:: 
* name



## .spec.webhookTokenAuthenticators

Description:: 
webhookTokenAuthenticators is DEPRECATED, setting it has no effect.
Type:: array

## .spec.webhookTokenAuthenticators[]

Description:: 
deprecatedWebhookTokenAuthenticator holds the necessary configuration options for a remote token authenticator.
It's the same as WebhookTokenAuthenticator but it's missing the 'required' validation on KubeConfig field.
Type:: object



## .spec.webhookTokenAuthenticators[].kubeConfig

Description:: 
kubeConfig contains kube config file data which describes how to access the remote webhook service.
For further details, see:
https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
The key "kubeConfig" is used to locate the data.
If the secret or expected key is not found, the webhook is not honored.
If the specified kube config data is not valid, the webhook is not honored.
The namespace for this secret is determined by the point of use.
Type:: object
Required:: 
* name



## .status

Description:: 
status holds observed values from the cluster. They may not be overridden.
Type:: object



## .status.integratedOAuthMetadata

Description:: 
integratedOAuthMetadata contains the discovery endpoint data for OAuth 2.0
Authorization Server Metadata for the in-cluster integrated OAuth server.
This discovery document can be viewed from its served location:
oc get --raw '/.well-known/oauth-authorization-server'
For further details, see the IETF Draft:
https://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2
This contains the observed value based on cluster state.
An explicitly set value in spec.oauthMetadata has precedence over this field.
This field has no meaning if authentication spec.type is not set to IntegratedOAuth.
The key "oauthMetadata" is used to locate the data.
If the config map or expected key is not found, no metadata is served.
If the specified metadata is not valid, no metadata is served.
The namespace for this config map is openshift-config-managed.
Type:: object
Required:: 
* name



# API endpoints

The following API endpoints are available:

* /apis/config.openshift.io/v1/authentications
* DELETE: delete collection of Authentication
* GET: list objects of kind Authentication
* POST: create an Authentication
* /apis/config.openshift.io/v1/authentications/{name}
* DELETE: delete an Authentication
* GET: read the specified Authentication
* PATCH: partially update the specified Authentication
* PUT: replace the specified Authentication
* /apis/config.openshift.io/v1/authentications/{name}/status
* GET: read status of the specified Authentication
* PATCH: partially update status of the specified Authentication
* PUT: replace status of the specified Authentication

## /apis/config.openshift.io/v1/authentications

HTTP method:: DELETE
Description:: delete collection of Authentication



HTTP method:: GET
Description:: list objects of kind Authentication



HTTP method:: POST
Description:: create an Authentication







## /apis/config.openshift.io/v1/authentications/{name}



HTTP method:: DELETE
Description:: delete an Authentication





HTTP method:: GET
Description:: read the specified Authentication



HTTP method:: PATCH
Description:: partially update the specified Authentication





HTTP method:: PUT
Description:: replace the specified Authentication







## /apis/config.openshift.io/v1/authentications/{name}/status



HTTP method:: GET
Description:: read status of the specified Authentication



HTTP method:: PATCH
Description:: partially update status of the specified Authentication





HTTP method:: PUT
Description:: replace status of the specified Authentication





