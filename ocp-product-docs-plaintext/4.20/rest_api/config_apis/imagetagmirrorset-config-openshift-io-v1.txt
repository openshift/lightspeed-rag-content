# ImageTagMirrorSet [config.openshift.io/v1]


Description:: 
ImageTagMirrorSet holds cluster-wide information about how to handle registry mirror rules on using tag pull specification.
When multiple policies are defined, the outcome of the behavior is defined on each field.
Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
spec holds user settable values for configuration
Type:: object



## .spec.imageTagMirrors

Description:: 
imageTagMirrors allows images referenced by image tags in pods to be
pulled from alternative mirrored repository locations. The image pull specification
provided to the pod will be compared to the source locations described in imageTagMirrors
and the image may be pulled down from any of the mirrors in the list instead of the
specified repository allowing administrators to choose a potentially faster mirror.
To use mirrors to pull images using digest specification only, users should configure
a list of mirrors using "ImageDigestMirrorSet" CRD.
If the image pull specification matches the repository of "source" in multiple imagetagmirrorset objects,
only the objects which define the most specific namespace match will be used.
For example, if there are objects using quay.io/libpod and quay.io/libpod/busybox as
the "source", only the objects using quay.io/libpod/busybox are going to apply
for pull specification quay.io/libpod/busybox.
Each “source” repository is treated independently; configurations for different “source”
repositories don’t interact.
If the "mirrors" is not specified, the image will continue to be pulled from the specified
repository in the pull spec.
When multiple policies are defined for the same “source” repository, the sets of defined
mirrors will be merged together, preserving the relative order of the mirrors, if possible.
For example, if policy A has mirrors a, b, c and policy B has mirrors c, d, e, the
mirrors will be used in the order a, b, c, d, e.  If the orders of mirror entries conflict
(e.g. a, b vs. b, a) the configuration is not rejected but the resulting order is unspecified.
Users who want to use a deterministic order of mirrors, should configure them into one list of mirrors using the expected order.
Type:: array

## .spec.imageTagMirrors[]

Description:: 
ImageTagMirrors holds cluster-wide information about how to handle mirrors in the registries config.
Type:: object
Required:: 
* source



## .status

Description:: 
status contains the observed state of the resource.
Type:: object

# API endpoints

The following API endpoints are available:

* /apis/config.openshift.io/v1/imagetagmirrorsets
* DELETE: delete collection of ImageTagMirrorSet
* GET: list objects of kind ImageTagMirrorSet
* POST: create an ImageTagMirrorSet
* /apis/config.openshift.io/v1/imagetagmirrorsets/{name}
* DELETE: delete an ImageTagMirrorSet
* GET: read the specified ImageTagMirrorSet
* PATCH: partially update the specified ImageTagMirrorSet
* PUT: replace the specified ImageTagMirrorSet
* /apis/config.openshift.io/v1/imagetagmirrorsets/{name}/status
* GET: read status of the specified ImageTagMirrorSet
* PATCH: partially update status of the specified ImageTagMirrorSet
* PUT: replace status of the specified ImageTagMirrorSet

## /apis/config.openshift.io/v1/imagetagmirrorsets

HTTP method:: DELETE
Description:: delete collection of ImageTagMirrorSet



HTTP method:: GET
Description:: list objects of kind ImageTagMirrorSet



HTTP method:: POST
Description:: create an ImageTagMirrorSet







## /apis/config.openshift.io/v1/imagetagmirrorsets/{name}



HTTP method:: DELETE
Description:: delete an ImageTagMirrorSet





HTTP method:: GET
Description:: read the specified ImageTagMirrorSet



HTTP method:: PATCH
Description:: partially update the specified ImageTagMirrorSet





HTTP method:: PUT
Description:: replace the specified ImageTagMirrorSet







## /apis/config.openshift.io/v1/imagetagmirrorsets/{name}/status



HTTP method:: GET
Description:: read status of the specified ImageTagMirrorSet



HTTP method:: PATCH
Description:: partially update status of the specified ImageTagMirrorSet





HTTP method:: PUT
Description:: replace status of the specified ImageTagMirrorSet





