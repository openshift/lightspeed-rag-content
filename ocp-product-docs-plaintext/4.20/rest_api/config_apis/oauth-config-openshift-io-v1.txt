# OAuth [config.openshift.io/v1]


Description:: 
OAuth holds cluster-wide information about OAuth.  The canonical name is cluster.
It is used to configure the integrated OAuth server.
This configuration is only honored when the top level Authentication config has type set to IntegratedOAuth.
Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
spec holds user settable values for configuration
Type:: object



## .spec.identityProviders

Description:: 
identityProviders is an ordered list of ways for a user to identify themselves.
When this list is empty, no identities are provisioned for users.
Type:: array

## .spec.identityProviders[]

Description:: 
IdentityProvider provides identities for users authenticating using credentials
Type:: object



## .spec.identityProviders[].basicAuth

Description:: 
basicAuth contains configuration options for the BasicAuth IdP
Type:: object



## .spec.identityProviders[].basicAuth.ca

Description:: 
ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
It is used as a trust anchor to validate the TLS certificate presented by the remote server.
The key "ca.crt" is used to locate the data.
If specified and the config map or expected key is not found, the identity provider is not honored.
If the specified ca data is not valid, the identity provider is not honored.
If empty, the default system roots are used.
The namespace for this config map is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].basicAuth.tlsClientCert

Description:: 
tlsClientCert is an optional reference to a secret by name that contains the
PEM-encoded TLS client certificate to present when connecting to the server.
The key "tls.crt" is used to locate the data.
If specified and the secret or expected key is not found, the identity provider is not honored.
If the specified certificate data is not valid, the identity provider is not honored.
The namespace for this secret is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].basicAuth.tlsClientKey

Description:: 
tlsClientKey is an optional reference to a secret by name that contains the
PEM-encoded TLS private key for the client certificate referenced in tlsClientCert.
The key "tls.key" is used to locate the data.
If specified and the secret or expected key is not found, the identity provider is not honored.
If the specified certificate data is not valid, the identity provider is not honored.
The namespace for this secret is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].github

Description:: 
github enables user authentication using GitHub credentials
Type:: object



## .spec.identityProviders[].github.ca

Description:: 
ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
It is used as a trust anchor to validate the TLS certificate presented by the remote server.
The key "ca.crt" is used to locate the data.
If specified and the config map or expected key is not found, the identity provider is not honored.
If the specified ca data is not valid, the identity provider is not honored.
If empty, the default system roots are used.
This can only be configured when hostname is set to a non-empty value.
The namespace for this config map is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].github.clientSecret

Description:: 
clientSecret is a required reference to the secret by name containing the oauth client secret.
The key "clientSecret" is used to locate the data.
If the secret or expected key is not found, the identity provider is not honored.
The namespace for this secret is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].gitlab

Description:: 
gitlab enables user authentication using GitLab credentials
Type:: object



## .spec.identityProviders[].gitlab.ca

Description:: 
ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
It is used as a trust anchor to validate the TLS certificate presented by the remote server.
The key "ca.crt" is used to locate the data.
If specified and the config map or expected key is not found, the identity provider is not honored.
If the specified ca data is not valid, the identity provider is not honored.
If empty, the default system roots are used.
The namespace for this config map is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].gitlab.clientSecret

Description:: 
clientSecret is a required reference to the secret by name containing the oauth client secret.
The key "clientSecret" is used to locate the data.
If the secret or expected key is not found, the identity provider is not honored.
The namespace for this secret is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].google

Description:: 
google enables user authentication using Google credentials
Type:: object



## .spec.identityProviders[].google.clientSecret

Description:: 
clientSecret is a required reference to the secret by name containing the oauth client secret.
The key "clientSecret" is used to locate the data.
If the secret or expected key is not found, the identity provider is not honored.
The namespace for this secret is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].htpasswd

Description:: 
htpasswd enables user authentication using an HTPasswd file to validate credentials
Type:: object



## .spec.identityProviders[].htpasswd.fileData

Description:: 
fileData is a required reference to a secret by name containing the data to use as the htpasswd file.
The key "htpasswd" is used to locate the data.
If the secret or expected key is not found, the identity provider is not honored.
If the specified htpasswd data is not valid, the identity provider is not honored.
The namespace for this secret is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].keystone

Description:: 
keystone enables user authentication using keystone password credentials
Type:: object



## .spec.identityProviders[].keystone.ca

Description:: 
ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
It is used as a trust anchor to validate the TLS certificate presented by the remote server.
The key "ca.crt" is used to locate the data.
If specified and the config map or expected key is not found, the identity provider is not honored.
If the specified ca data is not valid, the identity provider is not honored.
If empty, the default system roots are used.
The namespace for this config map is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].keystone.tlsClientCert

Description:: 
tlsClientCert is an optional reference to a secret by name that contains the
PEM-encoded TLS client certificate to present when connecting to the server.
The key "tls.crt" is used to locate the data.
If specified and the secret or expected key is not found, the identity provider is not honored.
If the specified certificate data is not valid, the identity provider is not honored.
The namespace for this secret is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].keystone.tlsClientKey

Description:: 
tlsClientKey is an optional reference to a secret by name that contains the
PEM-encoded TLS private key for the client certificate referenced in tlsClientCert.
The key "tls.key" is used to locate the data.
If specified and the secret or expected key is not found, the identity provider is not honored.
If the specified certificate data is not valid, the identity provider is not honored.
The namespace for this secret is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].ldap

Description:: 
ldap enables user authentication using LDAP credentials
Type:: object



## .spec.identityProviders[].ldap.attributes

Description:: 
attributes maps LDAP attributes to identities
Type:: object



## .spec.identityProviders[].ldap.bindPassword

Description:: 
bindPassword is an optional reference to a secret by name
containing a password to bind with during the search phase.
The key "bindPassword" is used to locate the data.
If specified and the secret or expected key is not found, the identity provider is not honored.
The namespace for this secret is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].ldap.ca

Description:: 
ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
It is used as a trust anchor to validate the TLS certificate presented by the remote server.
The key "ca.crt" is used to locate the data.
If specified and the config map or expected key is not found, the identity provider is not honored.
If the specified ca data is not valid, the identity provider is not honored.
If empty, the default system roots are used.
The namespace for this config map is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].openID

Description:: 
openID enables user authentication using OpenID credentials
Type:: object



## .spec.identityProviders[].openID.ca

Description:: 
ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
It is used as a trust anchor to validate the TLS certificate presented by the remote server.
The key "ca.crt" is used to locate the data.
If specified and the config map or expected key is not found, the identity provider is not honored.
If the specified ca data is not valid, the identity provider is not honored.
If empty, the default system roots are used.
The namespace for this config map is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].openID.claims

Description:: 
claims mappings
Type:: object



## .spec.identityProviders[].openID.clientSecret

Description:: 
clientSecret is a required reference to the secret by name containing the oauth client secret.
The key "clientSecret" is used to locate the data.
If the secret or expected key is not found, the identity provider is not honored.
The namespace for this secret is openshift-config.
Type:: object
Required:: 
* name



## .spec.identityProviders[].requestHeader

Description:: 
requestHeader enables user authentication using request header credentials
Type:: object



## .spec.identityProviders[].requestHeader.ca

Description:: 
ca is a required reference to a config map by name containing the PEM-encoded CA bundle.
It is used as a trust anchor to validate the TLS certificate presented by the remote server.
Specifically, it allows verification of incoming requests to prevent header spoofing.
The key "ca.crt" is used to locate the data.
If the config map or expected key is not found, the identity provider is not honored.
If the specified ca data is not valid, the identity provider is not honored.
The namespace for this config map is openshift-config.
Type:: object
Required:: 
* name



## .spec.templates

Description:: 
templates allow you to customize pages like the login page.
Type:: object



## .spec.templates.error

Description:: 
error is the name of a secret that specifies a go template to use to render error pages
during the authentication or grant flow.
The key "errors.html" is used to locate the template data.
If specified and the secret or expected key is not found, the default error page is used.
If the specified template is not valid, the default error page is used.
If unspecified, the default error page is used.
The namespace for this secret is openshift-config.
Type:: object
Required:: 
* name



## .spec.templates.login

Description:: 
login is the name of a secret that specifies a go template to use to render the login page.
The key "login.html" is used to locate the template data.
If specified and the secret or expected key is not found, the default login page is used.
If the specified template is not valid, the default login page is used.
If unspecified, the default login page is used.
The namespace for this secret is openshift-config.
Type:: object
Required:: 
* name



## .spec.templates.providerSelection

Description:: 
providerSelection is the name of a secret that specifies a go template to use to render
the provider selection page.
The key "providers.html" is used to locate the template data.
If specified and the secret or expected key is not found, the default provider selection page is used.
If the specified template is not valid, the default provider selection page is used.
If unspecified, the default provider selection page is used.
The namespace for this secret is openshift-config.
Type:: object
Required:: 
* name



## .spec.tokenConfig

Description:: 
tokenConfig contains options for authorization and access tokens
Type:: object



## .status

Description:: 
status holds observed values from the cluster. They may not be overridden.
Type:: object

# API endpoints

The following API endpoints are available:

* /apis/config.openshift.io/v1/oauths
* DELETE: delete collection of OAuth
* GET: list objects of kind OAuth
* POST: create an OAuth
* /apis/config.openshift.io/v1/oauths/{name}
* DELETE: delete an OAuth
* GET: read the specified OAuth
* PATCH: partially update the specified OAuth
* PUT: replace the specified OAuth
* /apis/config.openshift.io/v1/oauths/{name}/status
* GET: read status of the specified OAuth
* PATCH: partially update status of the specified OAuth
* PUT: replace status of the specified OAuth

## /apis/config.openshift.io/v1/oauths

HTTP method:: DELETE
Description:: delete collection of OAuth



HTTP method:: GET
Description:: list objects of kind OAuth



HTTP method:: POST
Description:: create an OAuth







## /apis/config.openshift.io/v1/oauths/{name}



HTTP method:: DELETE
Description:: delete an OAuth





HTTP method:: GET
Description:: read the specified OAuth



HTTP method:: PATCH
Description:: partially update the specified OAuth





HTTP method:: PUT
Description:: replace the specified OAuth







## /apis/config.openshift.io/v1/oauths/{name}/status



HTTP method:: GET
Description:: read status of the specified OAuth



HTTP method:: PATCH
Description:: partially update status of the specified OAuth





HTTP method:: PUT
Description:: replace status of the specified OAuth





