# ImageContentPolicy [config.openshift.io/v1]


Description:: 
ImageContentPolicy holds cluster-wide information about how to handle registry mirror rules.
When multiple policies are defined, the outcome of the behavior is defined on each field.
Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
spec holds user settable values for configuration
Type:: object



## .spec.repositoryDigestMirrors

Description:: 
repositoryDigestMirrors allows images referenced by image digests in pods to be
pulled from alternative mirrored repository locations. The image pull specification
provided to the pod will be compared to the source locations described in RepositoryDigestMirrors
and the image may be pulled down from any of the mirrors in the list instead of the
specified repository allowing administrators to choose a potentially faster mirror.
To pull image from mirrors by tags, should set the "allowMirrorByTags".
Each “source” repository is treated independently; configurations for different “source”
repositories don’t interact.
If the "mirrors" is not specified, the image will continue to be pulled from the specified
repository in the pull spec.
When multiple policies are defined for the same “source” repository, the sets of defined
mirrors will be merged together, preserving the relative order of the mirrors, if possible.
For example, if policy A has mirrors a, b, c and policy B has mirrors c, d, e, the
mirrors will be used in the order a, b, c, d, e.  If the orders of mirror entries conflict
(e.g. a, b vs. b, a) the configuration is not rejected but the resulting order is unspecified.
Type:: array

## .spec.repositoryDigestMirrors[]

Description:: 
RepositoryDigestMirrors holds cluster-wide information about how to handle mirrors in the registries config.
Type:: object
Required:: 
* source



# API endpoints

The following API endpoints are available:

* /apis/config.openshift.io/v1/imagecontentpolicies
* DELETE: delete collection of ImageContentPolicy
* GET: list objects of kind ImageContentPolicy
* POST: create an ImageContentPolicy
* /apis/config.openshift.io/v1/imagecontentpolicies/{name}
* DELETE: delete an ImageContentPolicy
* GET: read the specified ImageContentPolicy
* PATCH: partially update the specified ImageContentPolicy
* PUT: replace the specified ImageContentPolicy
* /apis/config.openshift.io/v1/imagecontentpolicies/{name}/status
* GET: read status of the specified ImageContentPolicy
* PATCH: partially update status of the specified ImageContentPolicy
* PUT: replace status of the specified ImageContentPolicy

## /apis/config.openshift.io/v1/imagecontentpolicies

HTTP method:: DELETE
Description:: delete collection of ImageContentPolicy



HTTP method:: GET
Description:: list objects of kind ImageContentPolicy



HTTP method:: POST
Description:: create an ImageContentPolicy







## /apis/config.openshift.io/v1/imagecontentpolicies/{name}



HTTP method:: DELETE
Description:: delete an ImageContentPolicy





HTTP method:: GET
Description:: read the specified ImageContentPolicy



HTTP method:: PATCH
Description:: partially update the specified ImageContentPolicy





HTTP method:: PUT
Description:: replace the specified ImageContentPolicy







## /apis/config.openshift.io/v1/imagecontentpolicies/{name}/status



HTTP method:: GET
Description:: read status of the specified ImageContentPolicy



HTTP method:: PATCH
Description:: partially update status of the specified ImageContentPolicy





HTTP method:: PUT
Description:: replace status of the specified ImageContentPolicy





