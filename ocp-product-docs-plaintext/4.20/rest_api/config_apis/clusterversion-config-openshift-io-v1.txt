# ClusterVersion [config.openshift.io/v1]


Description:: 
ClusterVersion is the configuration for the ClusterVersionOperator. This is where
parameters related to automatic updates can be set.
Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
Type:: object
Required:: 
* spec

# Specification



## .spec

Description:: 
spec is the desired state of the cluster version - the operator will work
to ensure that the desired version is applied to the cluster.
Type:: object
Required:: 
* clusterID



## .spec.capabilities

Description:: 
capabilities configures the installation of optional, core
cluster components.  A null value here is identical to an
empty object; see the child properties for default semantics.
Type:: object



## .spec.desiredUpdate

Description:: 
desiredUpdate is an optional field that indicates the desired value of
the cluster version. Setting this value will trigger an upgrade (if
the current version does not match the desired version). The set of
recommended update values is listed as part of available updates in
status, and setting values outside that range may cause the upgrade
to fail.
Some of the fields are inter-related with restrictions and meanings described here.
1. image is specified, version is specified, architecture is specified. API validation error.
2. image is specified, version is specified, architecture is not specified. You should not do this. version is silently ignored and image is used.
3. image is specified, version is not specified, architecture is specified. API validation error.
4. image is specified, version is not specified, architecture is not specified. image is used.
5. image is not specified, version is specified, architecture is specified. version and desired architecture are used to select an image.
6. image is not specified, version is specified, architecture is not specified. version and current architecture are used to select an image.
7. image is not specified, version is not specified, architecture is specified. API validation error.
8. image is not specified, version is not specified, architecture is not specified. API validation error.
If an upgrade fails the operator will halt and report status
about the failing component. Setting the desired update value back to
the previous version will cause a rollback to be attempted. Not all
rollbacks will succeed.
Type:: object



## .spec.overrides

Description:: 
overrides is list of overides for components that are managed by
cluster version operator. Marking a component unmanaged will prevent
the operator from creating or updating the object.
Type:: array

## .spec.overrides[]

Description:: 
ComponentOverride allows overriding cluster version operator's behavior
for a component.
Type:: object
Required:: 
* group
* kind
* name
* namespace
* unmanaged



## .status

Description:: 
status contains information about the available updates and any in-progress
updates.
Type:: object
Required:: 
* desired
* observedGeneration
* versionHash



## .status.capabilities

Description:: 
capabilities describes the state of optional, core cluster components.
Type:: object



## .status.conditionalUpdates

Description:: 
conditionalUpdates contains the list of updates that may be
recommended for this cluster if it meets specific required
conditions. Consumers interested in the set of updates that are
actually recommended for this cluster should use
availableUpdates. This list may be empty if no updates are
recommended, if the update service is unavailable, or if an empty
or invalid channel has been specified.
Type:: array

## .status.conditionalUpdates[]

Description:: 
ConditionalUpdate represents an update which is recommended to some
clusters on the version the current cluster is reconciling, but which
may not be recommended for the current cluster.
Type:: object
Required:: 
* release
* risks



## .status.conditionalUpdates[].conditions

Description:: 
conditions represents the observations of the conditional update's
current status. Known types are:
* Recommended, for whether the update is recommended for the current cluster.
Type:: array

## .status.conditionalUpdates[].conditions[]

Description:: 
Condition contains details for one aspect of the current state of this API Resource.
Type:: object
Required:: 
* lastTransitionTime
* message
* reason
* status
* type



## .status.conditionalUpdates[].release

Description:: 
release is the target of the update.
Type:: object
Required:: 
* image
* version



## .status.conditionalUpdates[].risks

Description:: 
risks represents the range of issues associated with
updating to the target release. The cluster-version
operator will evaluate all entries, and only recommend the
update if there is at least one entry and all entries
recommend the update.
Type:: array

## .status.conditionalUpdates[].risks[]

Description:: 
ConditionalUpdateRisk represents a reason and cluster-state
for not recommending a conditional update.
Type:: object
Required:: 
* matchingRules
* message
* name
* url



## .status.conditionalUpdates[].risks[].matchingRules

Description:: 
matchingRules is a slice of conditions for deciding which
clusters match the risk and which do not. The slice is
ordered by decreasing precedence. The cluster-version
operator will walk the slice in order, and stop after the
first it can successfully evaluate. If no condition can be
successfully evaluated, the update will not be recommended.
Type:: array

## .status.conditionalUpdates[].risks[].matchingRules[]

Description:: 
ClusterCondition is a union of typed cluster conditions.  The 'type'
property determines which of the type-specific properties are relevant.
When evaluated on a cluster, the condition may match, not match, or
fail to evaluate.
Type:: object
Required:: 
* type



## .status.conditionalUpdates[].risks[].matchingRules[].promql

Description:: 
promql represents a cluster condition based on PromQL.
Type:: object
Required:: 
* promql



## .status.conditions

Description:: 
conditions provides information about the cluster version. The condition
"Available" is set to true if the desiredUpdate has been reached. The
condition "Progressing" is set to true if an update is being applied.
The condition "Degraded" is set to true if an update is currently blocked
by a temporary or permanent error. Conditions are only valid for the
current desiredUpdate when metadata.generation is equal to
status.generation.
Type:: array

## .status.conditions[]

Description:: 
ClusterOperatorStatusCondition represents the state of the operator's
managed and monitored components.
Type:: object
Required:: 
* lastTransitionTime
* status
* type



## .status.desired

Description:: 
desired is the version that the cluster is reconciling towards.
If the cluster is not yet fully initialized desired will be set
with the information available, which may be an image or a tag.
Type:: object
Required:: 
* image
* version



## .status.history

Description:: 
history contains a list of the most recent versions applied to the cluster.
This value may be empty during cluster startup, and then will be updated
when a new update is being applied. The newest update is first in the
list and it is ordered by recency. Updates in the history have state
Completed if the rollout completed - if an update was failing or halfway
applied the state will be Partial. Only a limited amount of update history
is preserved.
Type:: array

## .status.history[]

Description:: 
UpdateHistory is a single attempted update to the cluster.
Type:: object
Required:: 
* image
* startedTime
* state
* verified



# API endpoints

The following API endpoints are available:

* /apis/config.openshift.io/v1/clusterversions
* DELETE: delete collection of ClusterVersion
* GET: list objects of kind ClusterVersion
* POST: create a ClusterVersion
* /apis/config.openshift.io/v1/clusterversions/{name}
* DELETE: delete a ClusterVersion
* GET: read the specified ClusterVersion
* PATCH: partially update the specified ClusterVersion
* PUT: replace the specified ClusterVersion
* /apis/config.openshift.io/v1/clusterversions/{name}/status
* GET: read status of the specified ClusterVersion
* PATCH: partially update status of the specified ClusterVersion
* PUT: replace status of the specified ClusterVersion

## /apis/config.openshift.io/v1/clusterversions

HTTP method:: DELETE
Description:: delete collection of ClusterVersion



HTTP method:: GET
Description:: list objects of kind ClusterVersion



HTTP method:: POST
Description:: create a ClusterVersion







## /apis/config.openshift.io/v1/clusterversions/{name}



HTTP method:: DELETE
Description:: delete a ClusterVersion





HTTP method:: GET
Description:: read the specified ClusterVersion



HTTP method:: PATCH
Description:: partially update the specified ClusterVersion





HTTP method:: PUT
Description:: replace the specified ClusterVersion







## /apis/config.openshift.io/v1/clusterversions/{name}/status



HTTP method:: GET
Description:: read status of the specified ClusterVersion



HTTP method:: PATCH
Description:: partially update status of the specified ClusterVersion





HTTP method:: PUT
Description:: replace status of the specified ClusterVersion





