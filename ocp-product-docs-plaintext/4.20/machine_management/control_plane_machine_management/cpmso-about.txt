# About control plane machine sets


With control plane machine sets, you can automate management of the control plane machine resources within your {product-title} cluster.

[IMPORTANT]
----
Control plane machine sets cannot manage compute machines, and compute machine sets cannot manage control plane machines.
----
Control plane machine sets provide for control plane machines similar management capabilities as compute machine sets provide for compute machines. However, these two types of machine sets are separate custom resources defined within the Machine API and have several fundamental differences in their architecture and functionality.

# Control Plane Machine Set Operator overview

The Control Plane Machine Set Operator uses the ControlPlaneMachineSet custom resource (CR) to automate management of the control plane machine resources within your {product-title} cluster.

When the state of the cluster control plane machine set is set to Active, the Operator ensures that the cluster has the correct number of control plane machines with the specified configuration. This allows the automated replacement of degraded control plane machines and rollout of changes to the control plane.

A cluster has only one control plane machine set, and the Operator only manages objects in the openshift-machine-api namespace.

## Control Plane Machine Set Operator limitations

The Control Plane Machine Set Operator has the following limitations:

* Only Amazon Web Services (AWS), Google Cloud Platform (GCP), IBM Power(R) Virtual Server, Microsoft Azure, Nutanix, VMware vSphere, and Red Hat OpenStack Platform (RHOSP) clusters are supported.
* Clusters that do not have preexisting machines that represent the control plane nodes cannot use a control plane machine set or enable the use of a control plane machine set after installation. Generally, preexisting control plane machines are only present if a cluster was installed using infrastructure provisioned by the installation program.

To determine if a cluster has the required preexisting control plane machines, run the following command as a user with administrator privileges:

```terminal
$ oc get machine \
  -n openshift-machine-api \
  -l machine.openshift.io/cluster-api-machine-role=master
```

Example output showing preexisting control plane machines

```text
NAME                    PHASE     TYPE         REGION      ZONE         AGE
<infrastructure_id>-master-0   Running   m6i.xlarge   us-west-1   us-west-1a   5h19m
<infrastructure_id>-master-1   Running   m6i.xlarge   us-west-1   us-west-1b   5h19m
<infrastructure_id>-master-2   Running   m6i.xlarge   us-west-1   us-west-1a   5h19m
```

Example output missing preexisting control plane machines

```text
No resources found in openshift-machine-api namespace.
```

* The Operator requires the Machine API Operator to be operational and is therefore not supported on clusters with manually provisioned machines. When installing a {product-title} cluster with manually provisioned machines for a platform that creates an active generated ControlPlaneMachineSet custom resource (CR), you must remove the Kubernetes manifest files that define the control plane machine set as instructed in the installation process.
* Only clusters with three control plane machines are supported.
* Horizontal scaling of the control plane is not supported.
* Deploying Azure control plane machines on Ephemeral OS disks increases risk for data loss and is not supported.
* Deploying control plane machines as AWS Spot Instances, GCP preemptible VMs, or Azure Spot VMs is not supported.

[IMPORTANT]
----
Attempting to deploy control plane machines as AWS Spot Instances, GCP preemptible VMs, or Azure Spot VMs might cause the cluster to lose etcd quorum. A cluster that loses all control plane machines simultaneously is unrecoverable.
----
* Making changes to the control plane machine set during or prior to installation is not supported. You must make any changes to the control plane machine set only after installation.

# Additional resources

* Control Plane Machine Set Operator reference
* ControlPlaneMachineSet custom resource