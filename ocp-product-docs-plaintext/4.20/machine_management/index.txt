# Overview of machine management


You can use machine management to flexibly work with underlying infrastructure such as Amazon Web Services (AWS), Microsoft Azure, Google Cloud Platform (GCP), Red Hat OpenStack Platform (RHOSP), and VMware vSphere to manage the {product-title} cluster.
You can control the cluster and perform auto-scaling, such as scaling up and down the cluster based on specific workload policies.
It is important to have a cluster that adapts to changing workloads. The {product-title} cluster can horizontally scale up and down when the load increases or decreases.
Machine management is implemented as a custom resource definition (CRD).
A CRD object defines a new unique object Kind in the cluster and enables the Kubernetes API server to handle the object's entire lifecycle.
The Machine API Operator provisions the following resources:
* MachineSet
* Machine
* ClusterAutoscaler
* MachineAutoscaler
* MachineHealthCheck

# Machine API overview

The Machine API is a combination of primary resources that are based on the upstream Cluster API project and custom {product-title} resources.

For {product-title} {product-version} clusters, the Machine API performs all node host provisioning management actions after the cluster installation finishes. Because of this system, {product-title} {product-version} offers an elastic, dynamic provisioning method on top of public or private cloud infrastructure.

The two primary resources are:

Machines:: A fundamental unit that describes the host for a node. A machine has a providerSpec specification, which describes the types of compute nodes that are offered for different cloud platforms. For example, a machine type for a compute node might define a specific machine type and required metadata.
Machine sets:: MachineSet resources are groups of compute machines. Compute machine sets are to compute machines as replica sets are to pods. If you need more compute machines or must scale them down, you change the replicas field on the MachineSet resource to meet your compute need.

[WARNING]
----
Control plane machines cannot be managed by compute machine sets.
Control plane machine sets provide management capabilities for supported control plane machines that are similar to what compute machine sets provide for compute machines.
For more information, see â€œManaging control plane machines".
----

The following custom resources add more capabilities to your cluster:

Machine autoscaler:: The MachineAutoscaler resource automatically scales compute machines in a cloud. You can set the minimum and maximum scaling boundaries for nodes in a specified compute machine set, and the machine autoscaler maintains that range of nodes.

The MachineAutoscaler object takes effect after a ClusterAutoscaler object exists. Both ClusterAutoscaler and MachineAutoscaler resources are made available by the ClusterAutoscalerOperator object.
Cluster autoscaler:: This resource is based on the upstream cluster autoscaler project. In the {product-title} implementation, it is integrated with the Machine API by extending the compute machine set API. You can use the cluster autoscaler to manage your cluster in the following ways:
* Set cluster-wide scaling limits for resources such as cores, nodes, memory, and GPU
* Set the priority so that the cluster prioritizes pods and new nodes are not brought online for less important pods
* Set the scaling policy so that you can scale up nodes but not scale them down
Machine health check:: The MachineHealthCheck resource detects when a machine is unhealthy, deletes it, and, on supported platforms, makes a new machine.

In {product-title} version 3.11, you could not roll out a multi-zone architecture easily because the cluster did not manage machine provisioning. Beginning with {product-title} version 4.1, this process is easier. Each compute machine set is scoped to a single zone, so the installation program sends out compute machine sets across availability zones on your behalf. And then because your compute is dynamic, and in the face of a zone failure, you always have a zone for when you must rebalance your machines. In global Azure regions that do not have multiple availability zones, you can use availability sets to ensure high availability. The autoscaler provides best-effort balancing over the life of a cluster.

* Machine phases and lifecycle

# Managing compute machines

As a cluster administrator, you can perform the following actions:

* Create a compute machine set for the following cloud providers:
* AWS
* Azure
* Azure Stack Hub
* GCP
* IBM Cloud
* IBM Power Virtual Server
* Nutanix
* RHOSP
* vSphere
* Create a machine set for a bare metal deployment: Creating a compute machine set on bare metal
* Manually scale a compute machine set by adding or removing a machine from the compute machine set.
* Modify a compute machine set through the MachineSet YAML configuration file.
* Delete a machine.
* Create infrastructure compute machine sets.
* Configure and deploy a machine health check to automatically fix damaged machines in a machine pool.

# Managing control plane machines

As a cluster administrator, you can perform the following actions:

* Update your control plane configuration with a control plane machine set for the following cloud providers:
* Amazon Web Services
* Google Cloud Platform
* Microsoft Azure
* Nutanix
* Red Hat OpenStack Platform (RHOSP)
* VMware vSphere
* Configure and deploy a machine health check to automatically recover unhealthy control plane machines.

# Applying autoscaling to an {product-title} cluster

You can automatically scale your {product-title} cluster to ensure flexibility for changing workloads. To autoscale your cluster, you must first deploy a cluster autoscaler, and then deploy a machine autoscaler for each compute machine set.

* The cluster autoscaler increases and decreases the size of the cluster based on deployment needs.
* The machine autoscaler adjusts the number of machines in the compute machine sets that you deploy in your {product-title} cluster.

# Adding compute machines on user-provisioned infrastructure

User-provisioned infrastructure is an environment where you can deploy infrastructure such as compute, network, and storage resources that host the {product-title}. You can add compute machines to a cluster on user-provisioned infrastructure during or after the installation process.