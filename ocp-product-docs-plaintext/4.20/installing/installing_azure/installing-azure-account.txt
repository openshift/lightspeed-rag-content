# Configuring an Azure account


Before you can install {product-title}, you must configure a Microsoft Azure account to meet installation requirements.

[IMPORTANT]
----
All Azure resources that are available through public endpoints are subject to
resource name restrictions. For a list of terms that Azure restricts for resource names, see
Resolve reserved resource name errors
in the Azure documentation.
----

# Azure account limits

The {product-title} cluster uses a number of Microsoft {cp} components, and the default Azure subscription and service limits, quotas, and constraints affect your ability to install {product-title} clusters.


[IMPORTANT]
----
Default limits vary by offer category types, such as Free Trial and Pay-As-You-Go, and by series, such as Dv2, F, and G. For example, the default for Enterprise Agreement subscriptions is 350 cores.
Check the limits for your subscription type and if necessary, increase quota limits for your account before you install a default
cluster on Azure.
----

The following table summarizes the {cp} components whose limits can impact your
ability to install and run {product-title} clusters.



To increase an account limit, file a support request on the Azure portal. For more information, see Request a quota limit increase for Azure Deployment Environments resources.

* Optimizing storage.

# Configuring a public DNS zone in Azure

To install {product-title}, the Microsoft Azure account you use must
have a dedicated public hosted DNS zone in your account. This zone must be
authoritative for the domain. This service provides
cluster DNS resolution and name lookup for external connections to the cluster.

1. Identify your domain, or subdomain, and registrar. You can transfer an
existing domain and registrar or obtain a new one through Azure or another source.
* To purchase a new domain through Azure, see Buy a custom domain name for Azure App Service.
* If you are using an existing domain and registrar, migrate its DNS to Azure. For more information, see
Migrate an active DNS name to Azure App Service
in the Azure documentation.
2. Configure DNS for your domain, which includes creating a public hosted zone for your domain or subdomain, extracting the new authoritative name servers, and updating the registrar records for the name servers that your domain uses. For more information, see
Tutorial: Host your domain in Azure DNS.

Use an appropriate root domain, such as openshiftcorp.com, or subdomain,
such as clusters.openshiftcorp.com.
3. If you use a subdomain, follow your organization's procedures to add its delegation
records to the parent domain.

# Recording the subscription and tenant IDs

The installation program requires the subscription and tenant IDs that are associated with your Azure account. You can use the Azure CLI to gather this information.

* You have installed or updated the Azure CLI.

1. Log in to the Azure CLI by running the following command:

```terminal
$ az login
```

2. Ensure that you are using the right subscription:
1. View a list of available subscriptions by running the following command:

```terminal
$ az account list --refresh
```

Example output

```terminal
[
  {
    "cloudName": "AzureCloud",
    "id": "8xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
    "isDefault": true,
    "name": "Subscription Name 1",
    "state": "Enabled",
    "tenantId": "6xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
    "user": {
      "name": "you@example.com",
      "type": "user"
    }
  },
  {
    "cloudName": "AzureCloud",
    "id": "9xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
    "isDefault": false,
    "name": "Subscription Name 2",
    "state": "Enabled",
    "tenantId": "7xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
    "user": {
      "name": "you2@example.com",
      "type": "user"
    }
  }
]
```

2. View the details of the active account, and confirm that this is the subscription you want to use, by running the following command:

```terminal
$ az account show
```

Example output

```terminal
{
  "environmentName": "AzureCloud",
  "id": "8xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
  "isDefault": true,
  "name": "Subscription Name 1",
  "state": "Enabled",
  "tenantId": "6xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
  "user": {
    "name": "you@example.com",
    "type": "user"
  }
}
```

3. If you are not using the right subscription:
1. Change the active subscription by running the following command:

```terminal
$ az account set -s <subscription_id>
```

2. Verify that you are using the subscription you need by running the following command:

```terminal
$ az account show
```

Example output

```terminal
{
  "environmentName": "AzureCloud",
  "id": "9xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
  "isDefault": true,
  "name": "Subscription Name 2",
  "state": "Enabled",
  "tenantId": "7xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
  "user": {
    "name": "you2@example.com",
    "type": "user"
  }
}
```

4. Record the id and tenantId parameter values from the output. You require these values to install an {product-title} cluster.

# Supported identities to access Azure resources

An {product-title} cluster requires an Azure identity to create and manage Azure resources. You need one of the following types of identities to complete the installation:

* A service principal
* A system-assigned managed identity
* A user-assigned managed identity

For more information on Azure identities, see Managed identity types.

## Required Azure roles

Before you create the identity, verify that your environment meets the following requirements based on the identity:

* The Azure account that you use to create the identity is assigned the User Access Administrator and Contributor roles. These roles are required when:
* Creating a service principal or user-assigned managed identity.
* Enabling a system-assigned managed identity on a virtual machine.
* If you are going to use a service principal to complete the installation, verify that the Azure account that you use to create the identity is assigned the microsoft.directory/servicePrincipals/createAsOwner permission in Microsoft Entra ID.

To set roles on the Azure portal, see Assign Azure roles using the Azure portal in the Azure documentation.

### Required Azure permissions for installer-provisioned infrastructure

The installation program requires access to an Azure service principal or managed identity with the necessary permissions to deploy the cluster and to maintain its daily operation. These permissions must be granted to the Azure subscription that is associated with the identity.

The following options are available to you:

* You can assign the identity the Contributor and User Access Administrator roles, which grant all of the required permissions.

If you set identity.type to None in the install-config.yaml file, you do not need to assign the User Access Administrator role to the service principal.

For more information about assigning roles, see the Azure documentation for managing access to Azure resources using the Azure portal.
* If the security policies of your organization require a more restrictive set of permissions, you can create a custom role with the necessary permissions.

The following permissions are required for creating an {product-title} cluster on Microsoft Azure.

* Microsoft.Authorization/policies/audit/action
* Microsoft.Authorization/policies/auditIfNotExists/action
* Microsoft.Authorization/roleAssignments/read
* Microsoft.Authorization/roleAssignments/write


[IMPORTANT]
----
The following permissions are not required if you set identity.type to None in the install-config.yaml file:
* Microsoft.Authorization/roleAssignments/read
* Microsoft.Authorization/roleAssignments/write
* Microsoft.ManagedIdentity/userAssignedIdentities/assign/action
* Microsoft.ManagedIdentity/userAssignedIdentities/read
* Microsoft.ManagedIdentity/userAssignedIdentities/write
* Microsoft.Authorization/roleAssignments/delete
The following permissions are not required if you set identity.type to UserAssigned in the install-config.yaml file and provide a user-assigned identity:
* Microsoft.Authorization/roleAssignments/read
* Microsoft.Authorization/roleAssignments/write
* Microsoft.ManagedIdentity/userAssignedIdentities/write
* Microsoft.Authorization/roleAssignments/delete
----

* Microsoft.Compute/availabilitySets/read
* Microsoft.Compute/availabilitySets/write
* Microsoft.Compute/disks/beginGetAccess/action
* Microsoft.Compute/disks/delete
* Microsoft.Compute/disks/read
* Microsoft.Compute/disks/write
* Microsoft.Compute/galleries/images/read
* Microsoft.Compute/galleries/images/versions/read
* Microsoft.Compute/galleries/images/versions/write
* Microsoft.Compute/galleries/images/write
* Microsoft.Compute/galleries/read
* Microsoft.Compute/galleries/write
* Microsoft.Compute/snapshots/read
* Microsoft.Compute/snapshots/write
* Microsoft.Compute/snapshots/delete
* Microsoft.Compute/virtualMachines/delete
* Microsoft.Compute/virtualMachines/powerOff/action
* Microsoft.Compute/virtualMachines/read
* Microsoft.Compute/virtualMachines/write

* Microsoft.ManagedIdentity/userAssignedIdentities/assign/action
* Microsoft.ManagedIdentity/userAssignedIdentities/read
* Microsoft.ManagedIdentity/userAssignedIdentities/write

* Microsoft.Network/dnsZones/A/write
* Microsoft.Network/dnsZones/CNAME/write
* Microsoft.Network/dnszones/CNAME/read
* Microsoft.Network/dnszones/read
* Microsoft.Network/loadBalancers/backendAddressPools/join/action
* Microsoft.Network/loadBalancers/backendAddressPools/read
* Microsoft.Network/loadBalancers/backendAddressPools/write
* Microsoft.Network/loadBalancers/read
* Microsoft.Network/loadBalancers/write
* Microsoft.Network/loadBalancers/inboundNatRules/read
* Microsoft.Network/loadBalancers/inboundNatRules/write
* Microsoft.Network/loadBalancers/inboundNatRules/join/action
* Microsoft.Network/loadBalancers/inboundNatRules/delete
* Microsoft.Network/routeTables/read
* Microsoft.Network/routeTables/write
* Microsoft.Network/routeTables/join/action
* Microsoft.Network/networkInterfaces/delete
* Microsoft.Network/networkInterfaces/join/action
* Microsoft.Network/networkInterfaces/read
* Microsoft.Network/networkInterfaces/write
* Microsoft.Network/networkSecurityGroups/join/action
* Microsoft.Network/networkSecurityGroups/read
* Microsoft.Network/networkSecurityGroups/securityRules/delete
* Microsoft.Network/networkSecurityGroups/securityRules/read
* Microsoft.Network/networkSecurityGroups/securityRules/write
* Microsoft.Network/networkSecurityGroups/write
* Microsoft.Network/privateDnsZones/A/read
* Microsoft.Network/privateDnsZones/A/write
* Microsoft.Network/privateDnsZones/A/delete
* Microsoft.Network/privateDnsZones/SOA/read
* Microsoft.Network/privateDnsZones/read
* Microsoft.Network/privateDnsZones/virtualNetworkLinks/read
* Microsoft.Network/privateDnsZones/virtualNetworkLinks/write
* Microsoft.Network/privateDnsZones/write
* Microsoft.Network/publicIPAddresses/delete
* Microsoft.Network/publicIPAddresses/join/action
* Microsoft.Network/publicIPAddresses/read
* Microsoft.Network/publicIPAddresses/write
* Microsoft.Network/virtualNetworks/join/action
* Microsoft.Network/virtualNetworks/read
* Microsoft.Network/virtualNetworks/subnets/join/action
* Microsoft.Network/virtualNetworks/subnets/read
* Microsoft.Network/virtualNetworks/subnets/write
* Microsoft.Network/virtualNetworks/write


[NOTE]
----
The following permissions are not required to create the private {product-title} cluster on Azure.
* Microsoft.Network/dnsZones/A/write
* Microsoft.Network/dnsZones/CNAME/write
* Microsoft.Network/dnszones/CNAME/read
* Microsoft.Network/dnszones/read
----

* Microsoft.Resourcehealth/healthevent/Activated/action
* Microsoft.Resourcehealth/healthevent/InProgress/action
* Microsoft.Resourcehealth/healthevent/Pending/action
* Microsoft.Resourcehealth/healthevent/Resolved/action
* Microsoft.Resourcehealth/healthevent/Updated/action

* Microsoft.Resources/subscriptions/resourceGroups/read
* Microsoft.Resources/subscriptions/resourcegroups/write

* Microsoft.ManagedIdentity/userAssignedIdentities/assign/action
* Microsoft.ManagedIdentity/userAssignedIdentities/read

* Microsoft.Resources/tags/write

* Microsoft.Storage/storageAccounts/blobServices/read
* Microsoft.Storage/storageAccounts/blobServices/containers/write
* Microsoft.Storage/storageAccounts/fileServices/read
* Microsoft.Storage/storageAccounts/fileServices/shares/read
* Microsoft.Storage/storageAccounts/fileServices/shares/write
* Microsoft.Storage/storageAccounts/fileServices/shares/delete
* Microsoft.Storage/storageAccounts/listKeys/action
* Microsoft.Storage/storageAccounts/read
* Microsoft.Storage/storageAccounts/write

* Microsoft.Network/privateEndpoints/write
* Microsoft.Network/privateEndpoints/read
* Microsoft.Network/privateEndpoints/privateDnsZoneGroups/write
* Microsoft.Network/privateEndpoints/privateDnsZoneGroups/read
* Microsoft.Network/privateDnsZones/join/action
* Microsoft.Storage/storageAccounts/PrivateEndpointConnectionsApproval/action

* Microsoft.MarketplaceOrdering/offertypes/publishers/offers/plans/agreements/read
* Microsoft.MarketplaceOrdering/offertypes/publishers/offers/plans/agreements/write

* Microsoft.Compute/availabilitySets/delete
* Microsoft.Compute/images/read
* Microsoft.Compute/images/write
* Microsoft.Compute/images/delete

* Microsoft.Compute/diskEncryptionSets/read
* Microsoft.Compute/diskEncryptionSets/write
* Microsoft.Compute/diskEncryptionSets/delete
* Microsoft.KeyVault/vaults/read
* Microsoft.KeyVault/vaults/write
* Microsoft.KeyVault/vaults/delete
* Microsoft.KeyVault/vaults/deploy/action
* Microsoft.KeyVault/vaults/keys/read
* Microsoft.KeyVault/vaults/keys/write
* Microsoft.Features/providers/features/register/action

* Microsoft.Network/natGateways/read
* Microsoft.Network/natGateways/write

* Microsoft.Network/natGateways/join/action
* Microsoft.Network/natGateways/read
* Microsoft.Network/natGateways/write

* Microsoft.Network/azureFirewalls/applicationRuleCollections/write
* Microsoft.Network/azureFirewalls/read
* Microsoft.Network/azureFirewalls/write
* Microsoft.Network/routeTables/join/action
* Microsoft.Network/routeTables/read
* Microsoft.Network/routeTables/routes/read
* Microsoft.Network/routeTables/routes/write
* Microsoft.Network/routeTables/write
* Microsoft.Network/virtualNetworks/peer/action
* Microsoft.Network/virtualNetworks/virtualNetworkPeerings/read
* Microsoft.Network/virtualNetworks/virtualNetworkPeerings/write

* Microsoft.Compute/virtualMachines/retrieveBootDiagnosticsData/action

The following permissions are required for deleting an {product-title} cluster on Microsoft Azure. You can use the same permissions to delete a private {product-title} cluster on Azure.

* Microsoft.Authorization/roleAssignments/delete

* Microsoft.Compute/disks/delete
* Microsoft.Compute/galleries/delete
* Microsoft.Compute/galleries/images/delete
* Microsoft.Compute/galleries/images/versions/delete
* Microsoft.Compute/virtualMachines/delete

* Microsoft.ManagedIdentity/userAssignedIdentities/delete

* Microsoft.Network/dnszones/read
* Microsoft.Network/dnsZones/A/read
* Microsoft.Network/dnsZones/A/delete
* Microsoft.Network/dnsZones/CNAME/read
* Microsoft.Network/dnsZones/CNAME/delete
* Microsoft.Network/loadBalancers/delete
* Microsoft.Network/networkInterfaces/delete
* Microsoft.Network/networkSecurityGroups/delete
* Microsoft.Network/privateDnsZones/read
* Microsoft.Network/privateDnsZones/A/read
* Microsoft.Network/privateDnsZones/delete
* Microsoft.Network/privateDnsZones/virtualNetworkLinks/delete
* Microsoft.Network/publicIPAddresses/delete
* Microsoft.Network/virtualNetworks/delete


[NOTE]
----
The following permissions are not required to delete a private {product-title} cluster on Azure.
* Microsoft.Network/dnszones/read
* Microsoft.Network/dnsZones/A/read
* Microsoft.Network/dnsZones/A/delete
* Microsoft.Network/dnsZones/CNAME/read
* Microsoft.Network/dnsZones/CNAME/delete
----

* Microsoft.Resourcehealth/healthevent/Activated/action
* Microsoft.Resourcehealth/healthevent/Resolved/action
* Microsoft.Resourcehealth/healthevent/Updated/action

* Microsoft.Resources/subscriptions/resourcegroups/delete

* Microsoft.Storage/storageAccounts/delete
* Microsoft.Storage/storageAccounts/listKeys/action


[NOTE]
----
To install {product-title} on Azure, you must scope the permissions to your subscription. You can re-scope these permissions to the resource group created by installation program. If the public DNS zone is present in a different resource group, then the network DNS zone related permissions must always be applied to your subscription. By default, the {product-title} installation program assigns the Azure identity the Contributor role.
You can scope all the permissions to your subscription when deleting an {product-title} cluster.
----

## Using Azure managed identities

The installation program requires an Azure identity to complete the installation. You can use either a system-assigned or user-assigned managed identity.

If you are unable to use a managed identity, you can use a service principal.

1. If you are using a system-assigned managed identity, enable it on the virtual machine that you will run the installation program from.
2. If you are using a user-assigned managed identity:
1. Assign it to the virtual machine that you will run the installation program from.
2. Record its client ID. You require this value when installing the cluster.

For more information about viewing the details of a user-assigned managed identity, see List user-assigned managed identities in the Azure documentation.
3. Verify that the required permissions are assigned to the managed identity.

## Creating a service principal

The installation program requires an Azure identity to complete the installation. You can use a service principal.

If you are unable to use a service principal, you can use a managed identity.

* You have installed or updated the Azure CLI.
* You have an Azure subscription ID.
* If you are not assigning the Contributor and User Administrator Access roles to the service principal, you have created a custom role with the required Azure permissions.

1. Create the service principal for your account by running the following command:

```terminal
$ az ad sp create-for-rbac --role <role_name> \1
     --name <service_principal> \2
     --scopes /subscriptions/<subscription_id> 3
```

Defines the role name. You can use the Contributor role, or you can specify a custom role which contains the necessary permissions.
Defines the service principal name.
Specifies the subscription ID.
Example output

```terminal
Creating 'Contributor' role assignment under scope '/subscriptions/<subscription_id>'
The output includes credentials that you must protect. Be sure that you do not
include these credentials in your code or check the credentials into your source
control. For more information, see https://aka.ms/azadsp-cli
{
  "appId": "axxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
  "displayName": <service_principal>",
  "password": "00000000-0000-0000-0000-000000000000",
  "tenantId": "8xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
}
```


Record the values of the appId and password parameters from the output. You require these values when installing the cluster.
2. If you assigned the Contributor role to your service principal, assign the User Administrator Access role by running the following command:

```terminal
$ az role assignment create --role "User Access Administrator" \
  --assignee-object-id $(az ad sp show --id <appId> --query id -o tsv) 1
  --scope /subscriptions/<subscription_id> 2
```

Specify the appId parameter value for your service principal.
Specifies the subscription ID.

* About the Cloud Credential Operator

# Supported Azure Marketplace regions

Installing a cluster using the Azure Marketplace image is available to customers who purchase the offer in North America and EMEA.

While the offer must be purchased in North America or EMEA, you can deploy the cluster to any of the Azure public partitions that {product-title} supports.


[NOTE]
----
Deploying a cluster using the Azure Marketplace image is not supported for the Azure Government regions.
----

# Supported Azure regions

The installation program dynamically generates the list of available Microsoft Azure regions based on your subscription.

## Supported Azure public regions

* australiacentral (Australia Central)
* australiaeast (Australia East)
* australiasoutheast (Australia South East)
* austriaeast (Austria East)
* brazilsouth (Brazil South)
* canadacentral (Canada Central)
* canadaeast (Canada East)
* centralindia (Central India)
* centralus (Central US)
* chilecentral (Chile Central)
* eastasia (East Asia)
* eastus (East US)
* eastus2 (East US 2)
* francecentral (France Central)
* germanywestcentral (Germany West Central)
* indonesiacentral (Indonesia Central)
* israelcentral (Israel Central)
* italynorth (Italy North)
* japaneast (Japan East)
* japanwest (Japan West)
* koreacentral (Korea Central)
* koreasouth (Korea South)
* malaysiawest (Malaysia West)
* mexicocentral (Mexico Central)
* newzealandnorth (New Zealand North)
* northcentralus (North Central US)
* northeurope (North Europe)
* norwayeast (Norway East)
* polandcentral (Poland Central)
* qatarcentral (Qatar Central)
* southafricanorth (South Africa North)
* southcentralus (South Central US)
* southeastasia (Southeast Asia)
* southindia (South India)
* spaincentral (Spain Central)
* swedencentral (Sweden Central)
* switzerlandnorth (Switzerland North)
* uaenorth (UAE North)
* uksouth (UK South)
* ukwest (UK West)
* westcentralus (West Central US)
* westeurope (West Europe)
* westindia (West India)
* westus (West US)
* westus2 (West US 2)
* westus3 (West US 3)

## Supported Azure Government regions

Support for the following Microsoft Azure Government (MAG) regions was added in {product-title} version 4.6:

* usgovtexas (US Gov Texas)
* usgovvirginia (US Gov Virginia)

You can reference all available MAG regions in the Azure documentation. Other provided MAG regions are expected to work with {product-title}, but have not been tested.

# Next steps

* Install an {product-title} cluster on Azure. You can
install a customized cluster
or
quickly install a cluster with default options.