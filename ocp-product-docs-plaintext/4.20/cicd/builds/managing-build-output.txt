# Managing build output


Use the following sections for an overview of and instructions for managing
build output.

# Build output

Builds that use the
source-to-image (S2I) strategy result in the creation of a new container image. The image is then pushed to the container image registry specified in the output section of the Build specification.

If the output kind is ImageStreamTag, then the image will be pushed to the integrated OpenShift image registry and tagged in the specified imagestream. If the output is of type DockerImage, then the name of the output reference will be used as a docker push specification. The specification may contain a registry or will default to DockerHub if no registry is specified. If the output section of the build specification is empty, then the image will not be pushed at the end of the build.


```yaml
spec:
  output:
    to:
      kind: "ImageStreamTag"
      name: "sample-image:latest"
```



```yaml
spec:
  output:
    to:
      kind: "DockerImage"
      name: "my-registry.mycompany.com:5000/myimages/myimage:tag"
```


# Output image environment variables

source-to-image (S2I) strategy builds set the following environment variables on output images:



Additionally, any user-defined environment variable, for example those configured with
S2I
strategy options, will also be part of the output image environment variable list.

# Output image labels

source-to-image (S2I) builds set the following labels on output images:



You can also use the BuildConfig.spec.output.imageLabels field to specify a list of custom labels that will be applied to each image built from the build configuration.


```yaml
spec:
  output:
    to:
      kind: "ImageStreamTag"
      name: "my-image:latest"
    imageLabels:
    - name: "vendor"
      value: "MyCompany"
    - name: "authoritative-source-url"
      value: "registry.mycompany.com"
```
