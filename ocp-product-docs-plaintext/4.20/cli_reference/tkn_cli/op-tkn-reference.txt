# OpenShift Pipelines tkn reference


This section lists the basic tkn CLI commands.

# Basic syntax

tkn [command or options] [arguments&#8230;&#8203;]

# Global options

--help, -h

# Utility commands

## tkn

Parent command for tkn CLI.


```terminal
$ tkn
```


## completion [shell]

Print shell completion code which must be evaluated to provide interactive completion. Supported shells are bash and zsh.


```terminal
$ tkn completion bash
```


## version

Print version information of the tkn CLI.


```terminal
$ tkn version
```


# Pipelines management commands

## pipeline

Manage pipelines.


```terminal
$ tkn pipeline --help
```


## pipeline delete

Delete a pipeline.


```terminal
$ tkn pipeline delete mypipeline -n myspace
```


## pipeline describe

Describe a pipeline.


```terminal
$ tkn pipeline describe mypipeline
```


## pipeline list

Display a list of pipelines.


```terminal
$ tkn pipeline list
```


## pipeline logs

Display the logs for a specific pipeline.


```terminal
$ tkn pipeline logs -f mypipeline
```


## pipeline start

Start a pipeline.


```terminal
$ tkn pipeline start mypipeline
```


# Pipeline run commands

## pipelinerun

Manage pipeline runs.


```terminal
$ tkn pipelinerun -h
```


## pipelinerun cancel

Cancel a pipeline run.


```terminal
$ tkn pipelinerun cancel mypipelinerun -n myspace
```


## pipelinerun delete

Delete a pipeline run.


```terminal
$ tkn pipelinerun delete mypipelinerun1 mypipelinerun2 -n myspace
```



```terminal
$ tkn pipelinerun delete -n myspace --keep 5 1
```


Replace 5 with the number of most recently executed pipeline runs you want to retain.


```terminal
$ tkn pipelinerun delete --all
```



[NOTE]
----
Starting with Red Hat OpenShift Pipelines 1.6, the tkn pipelinerun delete --all command does not delete any resources that are in the running state.
----

## pipelinerun describe

Describe a pipeline run.


```terminal
$ tkn pipelinerun describe mypipelinerun -n myspace
```


## pipelinerun list

List pipeline runs.


```terminal
$ tkn pipelinerun list -n myspace
```


## pipelinerun logs

Display the logs of a pipeline run.


```terminal
$ tkn pipelinerun logs mypipelinerun -a -n myspace
```


# Task management commands

## task

Manage tasks.


```terminal
$ tkn task -h
```


## task delete

Delete a task.


```terminal
$ tkn task delete mytask1 mytask2 -n myspace
```


## task describe

Describe a task.


```terminal
$ tkn task describe mytask -n myspace
```


## task list

List tasks.


```terminal
$ tkn task list -n myspace
```


## task logs

Display task logs.


```terminal
$ tkn task logs mytask mytaskrun -n myspace
```


## task start

Start a task.


```terminal
$ tkn task start mytask -s <ServiceAccountName> -n myspace
```


# Task run commands

## taskrun

Manage task runs.


```terminal
$ tkn taskrun -h
```


## taskrun cancel

Cancel a task run.


```terminal
$ tkn taskrun cancel mytaskrun -n myspace
```


## taskrun delete

Delete a TaskRun.


```terminal
$ tkn taskrun delete mytaskrun1 mytaskrun2 -n myspace
```



```terminal
$ tkn taskrun delete -n myspace --keep 5 1
```


Replace 5 with the number of most recently executed task runs you want to retain.

## taskrun describe

Describe a task run.


```terminal
$ tkn taskrun describe mytaskrun -n myspace
```


## taskrun list

List task runs.


```terminal
$ tkn taskrun list -n myspace
```


## taskrun logs

Display task run logs.


```terminal
$ tkn taskrun logs -f mytaskrun -n myspace
```


# Condition management commands

## condition

Manage Conditions.


```terminal
$ tkn condition --help
```


## condition delete

Delete a Condition.


```terminal
$ tkn condition delete mycondition1 -n myspace
```


## condition describe

Describe a Condition.


```terminal
$ tkn condition describe mycondition1 -n myspace
```


## condition list

List Conditions.


```terminal
$ tkn condition list -n myspace
```


# Pipeline Resource management commands

## resource

Manage Pipeline Resources.


```terminal
$ tkn resource -h
```


## resource create

Create a Pipeline Resource.


```terminal
$ tkn resource create -n myspace
```


This is an interactive command that asks for input on the name of the Resource, type of the Resource, and the values based on the type of the Resource.

## resource delete

Delete a Pipeline Resource.


```terminal
$ tkn resource delete myresource -n myspace
```


## resource describe

Describe a Pipeline Resource.


```terminal
$ tkn resource describe myresource -n myspace
```


## resource list

List Pipeline Resources.


```terminal
$ tkn resource list -n myspace
```


# ClusterTask management commands


[IMPORTANT]
----
In Red Hat OpenShift Pipelines 1.10, ClusterTask functionality of the tkn command-line utility is deprecated and is planned to be removed in a future release.
----

## clustertask

Manage ClusterTasks.


```terminal
$ tkn clustertask --help
```


## clustertask delete

Delete a ClusterTask resource in a cluster.


```terminal
$ tkn clustertask delete mytask1 mytask2
```


## clustertask describe

Describe a ClusterTask.


```terminal
$ tkn clustertask describe mytask1
```


## clustertask list

List ClusterTasks.


```terminal
$ tkn clustertask list
```


## clustertask start

Start ClusterTasks.


```terminal
$ tkn clustertask start mytask
```


# Trigger management commands

## eventlistener

Manage EventListeners.


```terminal
$ tkn eventlistener -h
```


## eventlistener delete

Delete an EventListener.


```terminal
$ tkn eventlistener delete mylistener1 mylistener2 -n myspace
```


## eventlistener describe

Describe an EventListener.


```terminal
$ tkn eventlistener describe mylistener -n myspace
```


## eventlistener list

List EventListeners.


```terminal
$ tkn eventlistener list -n myspace
```


## eventlistener logs

Display logs of an EventListener.


```terminal
$ tkn eventlistener logs mylistener -n myspace
```


## triggerbinding

Manage TriggerBindings.


```terminal
$ tkn triggerbinding -h
```


## triggerbinding delete

Delete a TriggerBinding.


```terminal
$ tkn triggerbinding delete mybinding1 mybinding2 -n myspace
```


## triggerbinding describe

Describe a TriggerBinding.


```terminal
$ tkn triggerbinding describe mybinding -n myspace
```


## triggerbinding list

List TriggerBindings.


```terminal
$ tkn triggerbinding list -n myspace
```


## triggertemplate

Manage TriggerTemplates.


```terminal
$ tkn triggertemplate -h
```


## triggertemplate delete

Delete a TriggerTemplate.


```terminal
$ tkn triggertemplate delete mytemplate1 mytemplate2 -n `myspace`
```


## triggertemplate describe

Describe a TriggerTemplate.


```terminal
$ tkn triggertemplate describe mytemplate -n `myspace`
```


## triggertemplate list

List TriggerTemplates.


```terminal
$ tkn triggertemplate list -n myspace
```


## clustertriggerbinding

Manage ClusterTriggerBindings.


```terminal
$ tkn clustertriggerbinding -h
```


## clustertriggerbinding delete

Delete a ClusterTriggerBinding.


```terminal
$ tkn clustertriggerbinding delete myclusterbinding1 myclusterbinding2
```


## clustertriggerbinding describe

Describe a ClusterTriggerBinding.


```terminal
$ tkn clustertriggerbinding describe myclusterbinding
```


## clustertriggerbinding list

List ClusterTriggerBindings.


```terminal
$ tkn clustertriggerbinding list
```


# Hub interaction commands

Interact with Tekton Hub for resources such as tasks and pipelines.

## hub

Interact with hub.


```terminal
$ tkn hub -h
```



```terminal
$ tkn hub --api-server https://api.hub.tekton.dev
```



[NOTE]
----
For each example, to get the corresponding sub-commands and flags, run tkn hub <command> --help.
----

## hub downgrade

Downgrade an installed resource.


```terminal
$ tkn hub downgrade task mytask --to version -n mynamespace
```


## hub get

Get a resource manifest by its name, kind, catalog, and version.


```terminal
$ tkn hub get [pipeline | task] myresource --from tekton --version version
```


## hub info

Display information about a resource by its name, kind, catalog, and version.


```terminal
$ tkn hub info task mytask --from tekton --version version
```


## hub install

Install a resource from a catalog by its kind, name, and version.


```terminal
$ tkn hub install task mytask --from tekton --version version -n mynamespace
```


## hub reinstall

Reinstall a resource by its kind and name.


```terminal
$ tkn hub reinstall task mytask --from tekton --version version -n mynamespace
```


## hub search

Search a resource by a combination of name, kind, and tags.


```terminal
$ tkn hub search --tags cli
```


## hub upgrade

Upgrade an installed resource.


```terminal
$ tkn hub upgrade task mytask --to version -n mynamespace
```
