# Getting started with the OpenShift CLI



# About the OpenShift CLI

With the OpenShift CLI (`oc`), you can create applications and manage {product-title} projects from a terminal. The OpenShift CLI is ideal in the following situations:

* Working directly with project source code.
* Scripting {product-title} operations
* Managing projects while restricted by bandwidth resources and the web console is unavailable.

# Installing the OpenShift CLI

You can install the OpenShift CLI (oc) either by downloading the binary or by using an RPM.

## Installing the OpenShift CLI

You can install the OpenShift CLI (`oc`) to interact with {product-title} from a command-line interface. You can install oc on Linux, Windows, or macOS.


[IMPORTANT]
----
If you installed an earlier version of oc, you cannot use it to complete all of the commands in {product-title}.
Download and install the new version of oc.
----

### Installing the OpenShift CLI on Linux

You can install the OpenShift CLI (oc) binary on Linux by using the following procedure.

1. Navigate to the Download {product-title} page on the Red Hat Customer Portal.
2. Select the architecture from the Product Variant list.
3. Select the appropriate version from the Version list.
4. Click Download Now next to the OpenShift v{product-version} Linux Clients entry and save the file.
5. Unpack the archive:

```terminal
$ tar xvf <file>
```

6. Place the oc binary in a directory that is on your PATH.

To check your PATH, execute the following command:

```terminal
$ echo $PATH
```


* After you install the OpenShift CLI, it is available using the oc command:

```terminal
$ oc <command>
```


### Installing the OpenShift CLI on Windows

You can install the OpenShift CLI (oc) binary on Windows by using the following procedure.

1. Navigate to the Download {product-title} page on the Red Hat Customer Portal.
2. Select the appropriate version from the Version list.
3. Click Download Now next to the OpenShift v{product-version} Windows Client entry and save the file.
4. Unzip the archive with a ZIP program.
5. Move the oc binary to a directory that is on your PATH.

To check your PATH, open the command prompt and execute the following command:

```terminal
C:\> path
```


* After you install the OpenShift CLI, it is available using the oc command:

```terminal
C:\> oc <command>
```


### Installing the OpenShift CLI on macOS

You can install the OpenShift CLI (oc) binary on macOS by using the following procedure.

1. Navigate to the Download {product-title} page on the Red Hat Customer Portal.
2. Select the appropriate version from the Version drop-down list.
3. Click Download Now next to the OpenShift v{product-version} macOS Clients entry and save the file.

[NOTE]
----
For macOS arm64, choose the OpenShift v{product-version} macOS arm64 Client entry.
----
4. Unpack and unzip the archive.
5. Move the oc binary to a directory on your PATH.

To check your PATH, open a terminal and execute the following command:

```terminal
$ echo $PATH
```


* Verify your installation by using an oc command:

```terminal
$ oc <command>
```


## Installing the OpenShift CLI by using the web console

You can install the OpenShift CLI (`oc`) to interact with {product-title} clusters from a web console. You can install oc on Linux, Windows, or macOS.


[IMPORTANT]
----
If you installed an earlier version of oc, you cannot use it to complete all
of the commands in
{product-title} {product-version}.
Download and
install the new version of oc.
----

### Installing the OpenShift CLI on Linux using the web console

You can install the OpenShift CLI (oc) binary on Linux by using the following procedure.

1. From the web console, click ?.
![click question mark]
2. Click Command Line Tools.
![CLI list]
3. Select appropriate oc binary for your Linux platform, and then click Download oc for Linux.
4. Save the file.
5. Unpack the archive.

```terminal
$ tar xvf <file>
```

6. Move the oc binary to a directory that is on your PATH.

To check your PATH, execute the following command:

```terminal
$ echo $PATH
```


After you install the OpenShift CLI, it is available using the oc command:


```terminal
$ oc <command>
```


### Installing the OpenShift CLI on Windows using the web console

You can install the OpenShift CLI (oc) binary on Windows by using the following procedure.

1. From the web console, click ?.
![click question mark]
2. Click Command Line Tools.
![CLI list]
3. Select the oc binary for Windows platform, and then click Download oc for Windows for x86_64.
4. Save the file.
5. Unzip the archive with a ZIP program.
6. Move the oc binary to a directory that is on your PATH.

To check your PATH, open the command prompt and execute the following command:

```terminal
C:\> path
```


After you install the OpenShift CLI, it is available using the oc command:


```terminal
C:\> oc <command>
```


### Installing the OpenShift CLI on macOS using the web console

You can install the OpenShift CLI (oc) binary on macOS by using the following procedure.

1. From the web console, click ?.
![click question mark]
2. Click Command Line Tools.
![CLI list]
3. Select the oc binary for macOS platform, and then click Download oc for Mac for x86_64.

[NOTE]
----
For macOS arm64, click Download oc for Mac for ARM 64.
----
4. Save the file.
5. Unpack and unzip the archive.
6. Move the oc binary to a directory on your PATH.

To check your PATH, open a terminal and execute the following command:

```terminal
$ echo $PATH
```


After you install the OpenShift CLI, it is available using the oc command:


```terminal
$ oc <command>
```


## Installing the OpenShift CLI by using an RPM

For Red Hat Enterprise Linux (RHEL), you can install the OpenShift CLI (`oc`) as an RPM if you have an active {product-title} subscription on your Red Hat account.


[IMPORTANT]
----
You must install oc for RHEL 9 by downloading the binary. Installing oc by using an RPM package is not supported on Red Hat Enterprise Linux (RHEL) 9.
----

* Must have root or sudo privileges.

1. Register with Red Hat Subscription Manager:

```terminal
# subscription-manager register
```

2. Pull the latest subscription data:

```terminal
# subscription-manager refresh
```

3. List the available subscriptions:

```terminal
# subscription-manager list --available --matches '*OpenShift*'
```

4. In the output for the previous command, find the pool ID for
an {product-title}
subscription and attach the subscription to the registered system:

```terminal
# subscription-manager attach --pool=<pool_id>
```

5. Enable the repositories required by
{product-title} {product-version}.

```terminal
# subscription-manager repos --enable="rhocp-{product-version}-for-rhel-8-x86_64-rpms"
```

6. Install the openshift-clients package:

```terminal
# yum install openshift-clients
```


* Verify your installation by using an oc command:


```terminal
$ oc <command>
```


## Installing the OpenShift CLI by using Homebrew

For macOS, you can install the OpenShift CLI (oc) by using the Homebrew package manager.

* You must have Homebrew (brew) installed.

* Install the openshift-cli package by running the following command:

```terminal
$ brew install openshift-cli
```


* Verify your installation by using an oc command:


```terminal
$ oc <command>
```


# Logging in to the OpenShift CLI

You can log in to the OpenShift CLI (oc) to access and manage your cluster.

* You must have access to a {product-title} cluster.
* The OpenShift CLI (`oc`) is installed.


[NOTE]
----
To access a cluster that is accessible only over an HTTP proxy server, you can set the HTTP_PROXY, HTTPS_PROXY and NO_PROXY variables.
These environment variables are respected by the oc CLI so that all communication with the cluster goes through the HTTP proxy.
Authentication headers are sent only when using HTTPS transport.
----

1. Enter the oc login command and pass in a user name:

```terminal
$ oc login -u user1
```

2. When prompted, enter the required information:
Example output

```terminal
Server [https://localhost:8443]: https://openshift.example.com:6443 1
The server uses a certificate signed by an unknown authority.
You can bypass the certificate check, but any data you send to the server could be intercepted by others.
Use insecure connections? (y/n): y 2

Authentication required for https://openshift.example.com:6443 (openshift)
Username: user1
Password: 3
Login successful.

You don't have any projects. You can try to create a new project, by running

    oc new-project <projectname>

Welcome! See 'oc help' to get started.
```

Enter the {product-title} server URL.
Enter whether to use insecure connections.
Enter the user's password.


[NOTE]
----
If you are logged in to the web console, you can generate an oc login command that includes your token and server information. You can use the command to log in to the
OpenShift CLI (oc) without the interactive prompts. To generate the command, select Copy login command from the username drop-down menu at the top right of the web console.
----

You can now create a project or issue other commands for managing your cluster.

# Logging in to the OpenShift CLI using a web browser

You can log in to the OpenShift CLI (oc) with the help of a web browser to access and manage your cluster. This allows users to avoid inserting their access token into the command line.


[WARNING]
----
Logging in to the CLI through the web browser runs a server on localhost with HTTP, not HTTPS; use with caution on multi-user workstations.
----

* You must have access to an {product-title} cluster.
* You must have installed the OpenShift CLI (oc).
* You must have a browser installed.

1. Enter the oc login command with the --web flag:

```terminal
$ oc login <cluster_url> --web 1
```

Optionally, you can specify the server URL and callback port. For example, oc login <cluster_url> --web --callback-port 8280 localhost:8443.
2. The web browser opens automatically. If it does not, click the link in the command output. If you do not specify the {product-title} server oc tries to open the web console of the cluster specified in the current oc configuration file. If no oc configuration exists, oc prompts interactively for the server URL.
Example output

```terminal
Opening login URL in the default browser: https://openshift.example.com
Opening in existing browser session.
```

3. If more than one identity provider is available, select your choice from the options provided.
4. Enter your username and password into the corresponding browser fields. After you are logged in, the browser displays the text access token received successfully; please return to your terminal.
5. Check the CLI for a login confirmation.
Example output

```terminal
Login successful.

You don't have any projects. You can try to create a new project, by running

    oc new-project <projectname>
```



[NOTE]
----
The web console defaults to the profile used in the previous session. To switch between Administrator and Developer profiles, log out of the {product-title} web console and clear the cache.
----

You can now create a project or issue other commands for managing your cluster.

# Using the OpenShift CLI

Review the following sections to learn how to complete common tasks using the CLI.

## Creating a project

Use the oc new-project command to create a new project.


```terminal
$ oc new-project my-project
```



```terminal
Now using project "my-project" on server "https://openshift.example.com:6443".
```


## Creating a new app

Use the oc new-app command to create a new application.


```terminal
$ oc new-app https://github.com/sclorg/cakephp-ex
```



```terminal
--> Found image 40de956 (9 days old) in imagestream "openshift/php" under tag "7.2" for "php"

...

    Run 'oc status' to view your app.
```


## Viewing pods

Use the oc get pods command to view the pods for the current project.


[NOTE]
----
When you run oc inside a pod and do not specify a namespace, the namespace of the pod is used by default.
----


```terminal
$ oc get pods -o wide
```



```terminal
NAME                  READY   STATUS      RESTARTS   AGE     IP            NODE                           NOMINATED NODE
cakephp-ex-1-build    0/1     Completed   0          5m45s   10.131.0.10   ip-10-0-141-74.ec2.internal    <none>
cakephp-ex-1-deploy   0/1     Completed   0          3m44s   10.129.2.9    ip-10-0-147-65.ec2.internal    <none>
cakephp-ex-1-ktz97    1/1     Running     0          3m33s   10.128.2.11   ip-10-0-168-105.ec2.internal   <none>
```


## Viewing pod logs

Use the oc logs command to view logs for a particular pod.


```terminal
$ oc logs cakephp-ex-1-deploy
```



```terminal
--> Scaling cakephp-ex-1 to 1
--> Success
```


## Viewing the current project

Use the oc project command to view the current project.


```terminal
$ oc project
```



```terminal
Using project "my-project" on server "https://openshift.example.com:6443".
```


## Viewing the status for the current project

Use the oc status command to view information about the current project, such
as services, deployments, and build configs.


```terminal
$ oc status
```



```terminal
In project my-project on server https://openshift.example.com:6443

svc/cakephp-ex - 172.30.236.80 ports 8080, 8443
  dc/cakephp-ex deploys istag/cakephp-ex:latest <-
    bc/cakephp-ex source builds https://github.com/sclorg/cakephp-ex on openshift/php:7.2
    deployment #1 deployed 2 minutes ago - 1 pod

3 infos identified, use 'oc status --suggest' to see details.
```


## Listing supported API resources

Use the oc api-resources command to view the list of supported API resources
on the server.


```terminal
$ oc api-resources
```



```terminal
NAME                                  SHORTNAMES       APIGROUP                              NAMESPACED   KIND
bindings                                                                                     true         Binding
componentstatuses                     cs                                                     false        ComponentStatus
configmaps                            cm                                                     true         ConfigMap
...
```


# Getting help

You can get help with CLI commands and {product-title}
resources in the following ways:

* Use oc help to get a list and description of all available CLI commands:
Example: Get general help for the CLI

```terminal
$ oc help
```

Example output

```terminal
OpenShift Client

This client helps you develop, build, deploy, and run your applications on any OpenShift or Kubernetes compatible
platform. It also includes the administrative commands for managing a cluster under the 'adm' subcommand.

Usage:
  oc [flags]

Basic Commands:
  login           Log in to a server
  new-project     Request a new project
  new-app         Create a new application

...
```

* Use the --help flag to get help about a specific CLI command:
Example: Get help for the oc create command

```terminal
$ oc create --help
```

Example output

```terminal
Create a resource by filename or stdin

JSON and YAML formats are accepted.

Usage:
  oc create -f FILENAME [flags]

...
```

* Use the oc explain command to view the description and fields for a
particular resource:
Example: View documentation for the Pod resource

```terminal
$ oc explain pods
```

Example output

```terminal
KIND:     Pod
VERSION:  v1

DESCRIPTION:
     Pod is a collection of containers that can run on a host. This resource is
     created by clients and scheduled onto hosts.

FIELDS:
   apiVersion	<string>
     APIVersion defines the versioned schema of this representation of an
     object. Servers should convert recognized schemas to the latest internal
     value, and may reject unrecognized values. More info:
     https://git.k8s.io/community/contributors/devel/api-conventions.md#resources

...
```


# Logging out of the OpenShift CLI

You can log out the OpenShift CLI to end your current session.

* Use the oc logout command.

```terminal
$ oc logout
```

Example output

```terminal
Logged "user1" out on "https://openshift.example.com"
```


This deletes the saved authentication token from the server and removes it from
your configuration file.