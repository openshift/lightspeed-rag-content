# Viewing a network policy


As a cluster administrator, you can view a network policy for a namespace.

# Example NetworkPolicy object

The following annotates an example NetworkPolicy object:


```yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-27107 1
spec:
  podSelector: 2
    matchLabels:
      app: mongodb
  ingress:
  - from:
    - podSelector: 3
        matchLabels:
          app: app
    ports: 4
    - protocol: TCP
      port: 27017
```


The name of the NetworkPolicy object.
A selector that describes the pods to which the policy applies.
The policy object can only select pods in the project that defines the NetworkPolicy object.
A selector that matches the pods from which the policy object allows ingress traffic. The selector matches pods in the same namespace as the NetworkPolicy.
A list of one or more destination ports on which to accept traffic.

# Viewing network policies using the CLI

You can examine the {name} policies in a namespace.


[NOTE]
----
If you log in with a user with the cluster-admin role, then you can view any network policy in the cluster.
----

* You installed the OpenShift CLI (oc).
* You are logged in to the cluster with a user with {role} privileges.
* You are working in the namespace where the {name} policy exists.

* List {name} policies in a namespace:
* To view {name} policy objects defined in a namespace, enter the following
command:

```terminal
$ oc get {name}policy
```

* Optional: To examine a specific {name} policy, enter the following command:

```terminal
$ oc describe {name}policy <policy_name> -n <namespace>
```

where:
<policy_name>:: Specifies the name of the {name} policy to inspect.
<namespace>:: Optional: Specifies the namespace if the object is defined in a different namespace than the current namespace.

For example:

```terminal
$ oc describe networkpolicy allow-same-namespace
```

Output for oc describe command

```text
Name:         allow-same-namespace
Namespace:    ns1
Created on:   2021-05-24 22:28:56 -0400 EDT
Labels:       <none>
Annotations:  <none>
Spec:
  PodSelector:     <none> (Allowing the specific traffic to all pods in this namespace)
  Allowing ingress traffic:
    To Port: <any> (traffic allowed to all ports)
    From:
      PodSelector: <none>
  Not affecting egress traffic
  Policy Types: Ingress
```



[NOTE]
----
If you log in to the web console with cluster-admin privileges, you have a choice of viewing a network policy in any namespace in the cluster directly in YAML or from a form in the web console.
----