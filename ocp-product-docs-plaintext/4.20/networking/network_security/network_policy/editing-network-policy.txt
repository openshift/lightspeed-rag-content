# Editing a network policy


As a cluster administrator, you can edit an existing network policy for a namespace.

# Editing a network policy

You can edit a {name} policy in a namespace.


[NOTE]
----
If you log in with a user with the cluster-admin role, then you can edit a network policy in any namespace in the cluster.
----

* Your cluster uses a network plugin that supports NetworkPolicy objects, such as the OVN-Kubernetes network plugin, with mode: NetworkPolicy set.
* You installed the OpenShift CLI (oc).
* You are logged in to the cluster with a user with {role} privileges.
* You are working in the namespace where the {name} policy exists.

1. Optional: To list the {name} policy objects in a namespace, enter the following command:

```terminal
$ oc get {name}policy
```

where:
<namespace>:: Optional: Specifies the namespace if the object is defined in a different namespace than the current namespace.
2. Edit the {name} policy object.
* If you saved the {name} policy definition in a file, edit the file and make any necessary changes, and then enter the following command.

```terminal
$ oc apply -n <namespace> -f <policy_file>.yaml
```

where:
<namespace>:: Optional: Specifies the namespace if the object is defined in a different namespace than the current namespace.
<policy_file>:: Specifies the name of the file containing the network policy.
* If you need to update the {name} policy object directly, enter the following command:

```terminal
$ oc edit {name}policy <policy_name> -n <namespace>
```

where:
<policy_name>:: Specifies the name of the network policy.
<namespace>:: Optional: Specifies the namespace if the object is defined in a different namespace than the current namespace.
3. Confirm that the {name} policy object is updated.

```terminal
$ oc describe {name}policy <policy_name> -n <namespace>
```

where:
<policy_name>:: Specifies the name of the {name} policy.
<namespace>:: Optional: Specifies the namespace if the object is defined in a different namespace than the current namespace.


[NOTE]
----
If you log in to the web console with cluster-admin privileges, you have a choice of editing a network policy in any namespace in the cluster directly in YAML or from the policy in the web console through the Actions menu.
----

# Example NetworkPolicy object

The following annotates an example NetworkPolicy object:


```yaml
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-27107 1
spec:
  podSelector: 2
    matchLabels:
      app: mongodb
  ingress:
  - from:
    - podSelector: 3
        matchLabels:
          app: app
    ports: 4
    - protocol: TCP
      port: 27017
```


The name of the NetworkPolicy object.
A selector that describes the pods to which the policy applies.
The policy object can only select pods in the project that defines the NetworkPolicy object.
A selector that matches the pods from which the policy object allows ingress traffic. The selector matches pods in the same namespace as the NetworkPolicy.
A list of one or more destination ports on which to accept traffic.

# Additional resources

* Creating a network policy