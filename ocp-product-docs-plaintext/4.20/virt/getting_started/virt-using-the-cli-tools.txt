# Using the CLI tools


You can manage OpenShift Virtualization resources by using the virtctl command-line tool.
You can access and modify virtual machine (VM) disk images by using the libguestfs command-line tool. You deploy libguestfs by using the virtctl libguestfs command.

# Installing virtctl

To install virtctl on Red Hat Enterprise Linux (RHEL) 9, Linux, Windows, and MacOS operating systems, you download and install the virtctl binary file.

To install virtctl on RHEL 8, you enable the OpenShift Virtualization repository and then install the kubevirt-virtctl package.

## Installing the virtctl binary on RHEL 9, Linux, Windows, or macOS

You can download the virtctl binary for your operating system from the {product-title} web console and then install it.

1. Navigate to the Virtualization -> Overview page in the web console.
2. Click the Download virtctl link to download the virtctl binary for your operating system.
3. Install virtctl:
* For RHEL 9 and other Linux operating systems:
1. Decompress the archive file:

```terminal
$ tar -xvf <virtctl-version-distribution.arch>.tar.gz
```

2. Run the following command to make the virtctl binary executable:

```terminal
$ chmod +x <path/virtctl-file-name>
```

3. Move the virtctl binary to a directory in your PATH environment variable.

You can check your path by running the following command:

```terminal
$ echo $PATH
```

4. Set the KUBECONFIG environment variable:

```terminal
$ export KUBECONFIG=/home/<user>/clusters/current/auth/kubeconfig
```

* For Windows:
1. Decompress the archive file.
2. Navigate the extracted folder hierarchy and double-click the virtctl executable file to install the client.
3. Move the virtctl binary to a directory in your PATH environment variable.

You can check your path by running the following command:

```terminal
C:\> path
```

* For macOS:
1. Decompress the archive file.
2. Move the virtctl binary to a directory in your PATH environment variable.

You can check your path by running the following command:

```terminal
echo $PATH
```


## Installing the virtctl RPM on RHEL 8

You can install the virtctl RPM package on Red Hat Enterprise Linux (RHEL) 8 by enabling the OpenShift Virtualization repository and installing the kubevirt-virtctl package.

* Each host in your cluster must be registered with Red Hat Subscription Manager (RHSM) and have an active {product-title} subscription.

1. Enable the OpenShift Virtualization repository by using the subscription-manager CLI tool to run the following command:

```terminal
# subscription-manager repos --enable cnv-4.19-for-rhel-8-x86_64-rpms
```

2. Install the kubevirt-virtctl package by running the following command:

```terminal
# yum install kubevirt-virtctl
```


# virtctl commands

The virtctl client is a command-line utility for managing OpenShift Virtualization resources.


[NOTE]
----
The virtual machine (VM) commands also apply to virtual machine instances (VMIs) unless otherwise specified.
----

## virtctl information commands

You use virtctl information commands to view information about the virtctl client.



## VM information commands

You can use virtctl to view information about virtual machines (VMs) and virtual machine instances (VMIs).



## VM manifest creation commands

You can use virtctl create commands to create manifests for virtual machines, instance types, and preferences.



## VM management commands

You use virtctl virtual machine (VM) management commands to manage and migrate virtual machines (VMs) and virtual machine instances (VMIs).



## VM connection commands

You use virtctl connection commands to expose ports and connect to virtual machines (VMs) and virtual machine instances (VMIs).



## VM export commands

Use virtctl vmexport commands to create, download, or delete a volume exported from a VM, VM snapshot, or persistent volume claim (PVC). Certain manifests also contain a header secret, which grants access to the endpoint to import a disk image in a format that OpenShift Virtualization can use.



## VM memory dump commands

You can use the virtctl memory-dump command to output a VM memory dump on a PVC. You can specify an existing PVC or use the --create-claim flag to create a new PVC.

* The PVC volume mode must be FileSystem.
* The PVC must be large enough to contain the memory dump.

The formula for calculating the PVC size is (VMMemorySize + 100Mi) * FileSystemOverhead, where 100Mi is the memory dump overhead.
* You must enable the hot plug feature gate in the HyperConverged custom resource by running the following command:

```terminal
$ oc patch hyperconverged kubevirt-hyperconverged -n openshift-cnv \
  --type json -p '[{"op": "add", "path": "/spec/featureGates", \
  "value": "HotplugVolumes"}]'
```


You must use the virtctl vmexport download command to download the memory dump:


```terminal
$ virtctl vmexport download <vmexport_name> --vm|pvc=<object_name> \
  --volume=<volume_name> --output=<output_file>
```




## Hot plug and hot unplug commands

You use virtctl to add or remove resources from running virtual machines (VMs) and virtual machine instances (VMIs).



## Image upload commands

You use the virtctl image-upload commands to upload a VM image to a data volume.



# Deploying libguestfs by using virtctl

You can use the virtctl guestfs command to deploy an interactive container with libguestfs-tools and a persistent volume claim (PVC) attached to it.

* To deploy a container with libguestfs-tools, mount the PVC, and attach a shell to it, run the following command:

```terminal
$ virtctl guestfs -n <namespace> <pvc_name> 1
```

The PVC name is a required argument. If you do not include it, an error message appears.

## Libguestfs and virtctl guestfs commands

Libguestfs tools help you access and modify virtual machine (VM) disk images. You can use libguestfs tools to view and edit files in a guest, clone and build virtual machines, and format and resize disks.

You can also use the virtctl guestfs command and its sub-commands to modify, inspect, and debug VM disks on a PVC. To see a complete list of possible sub-commands, enter virt- on the command line and press the Tab key. For example:



By default, virtctl guestfs creates a session with everything needed to manage a VM disk. However, the command also supports several flag options if you want to customize the behavior:



The command also checks if a PVC is in use by another pod, in which case an error message appears. However, once the libguestfs-tools process starts, the setup cannot avoid a new pod using the same PVC. You must verify that there are no active virtctl guestfs pods before starting the VM that accesses the same PVC.


[NOTE]
----
The virtctl guestfs command accepts only a single PVC attached to the interactive pod.
----

# Using Ansible

To use the Ansible collection for OpenShift Virtualization, see Red Hat Ansible Automation Hub (Red Hat Hybrid Cloud Console).