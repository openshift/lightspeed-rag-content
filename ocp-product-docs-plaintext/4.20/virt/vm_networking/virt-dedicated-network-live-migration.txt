# Configuring a dedicated network for live migration


You can configure a dedicated Multus network for live migration. A dedicated network minimizes the effects of network saturation on tenant workloads during live migration.

# Configuring a dedicated secondary network for live migration

To configure a dedicated secondary network for live migration, you must first create a bridge network attachment definition (NAD) by using the CLI. Then, you add the name of the NetworkAttachmentDefinition object to the HyperConverged custom resource (CR).

* You installed the OpenShift CLI (oc).
* You logged in to the cluster as a user with the cluster-admin role.
* Each node has at least two Network Interface Cards (NICs).
* The NICs for live migration are connected to the same VLAN.

1. Create a NetworkAttachmentDefinition manifest according to the following example:
Example configuration file

```yaml
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: my-secondary-network 1
  namespace: openshift-cnv
spec:
  config: '{
    "cniVersion": "0.3.1",
    "name": "migration-bridge",
    "type": "macvlan",
    "master": "eth1", 2
    "mode": "bridge",
    "ipam": {
      "type": "whereabouts", 3
      "range": "10.200.5.0/24" 4
    }
  }'
```

Specify the name of the NetworkAttachmentDefinition object.
Specify the name of the NIC to be used for live migration.
Specify the name of the CNI plugin that provides the network for the NAD.
Specify an IP address range for the secondary network. This range must not overlap the IP addresses of the main network.
2. Open the HyperConverged CR in your default editor by running the following command:

```terminal
$ oc edit hyperconverged kubevirt-hyperconverged -n openshift-cnv
```

3. Add the name of the NetworkAttachmentDefinition object to the spec.liveMigrationConfig stanza of the HyperConverged CR:
Example HyperConverged manifest

```yaml
apiVersion: hco.kubevirt.io/v1beta1
kind: HyperConverged
metadata:
  name: kubevirt-hyperconverged
  namespace: openshift-cnv
spec:
  liveMigrationConfig:
    completionTimeoutPerGiB: 800
    network: <network> 1
    parallelMigrationsPerCluster: 5
    parallelOutboundMigrationsPerNode: 2
    progressTimeout: 150
# ...
```

Specify the name of the Multus NetworkAttachmentDefinition object to be used for live migrations.
4. Save your changes and exit the editor. The virt-handler pods restart and connect to the secondary network.

* When the node that the virtual machine runs on is placed into maintenance mode, the VM automatically migrates to another node in the cluster. You can verify that the migration occurred over the secondary network and not the default pod network by checking the target IP address in the virtual machine instance (VMI) metadata.

```terminal
$ oc get vmi <vmi_name> -o jsonpath='{.status.migrationState.targetNodeAddress}'
```


# Selecting a dedicated network by using the web console

You can select a dedicated network for live migration by using the {product-title} web console.

* You configured a Multus network for live migration.
* You created a network attachment definition for the network.

1. Navigate to Virtualization > Overview in the {product-title} web console.
2. Click the Settings tab and then click Live migration.
3. Select the network from the Live migration network list.

# Additional resources

* Configuring live migration limits and timeouts