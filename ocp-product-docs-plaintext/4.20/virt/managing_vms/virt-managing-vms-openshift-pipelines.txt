# Managing virtual machines with OpenShift Pipelines


Red Hat OpenShift Pipelines is a Kubernetes-native CI/CD framework that allows developers to design and run each step of the CI/CD pipeline in its own container.
By using OpenShift Pipelines tasks and the example pipeline, you can do the following:
* Create and manage virtual machines (VMs), persistent volume claims (PVCs), data volumes, and data sources.
* Run commands in VMs.
* Manipulate disk images with libguestfs tools.
The tasks are located in the task catalog (ArtifactHub).
The example Windows pipeline is located in the pipeline catalog (ArtifactHub).

# Prerequisites

* You have access to an {product-title} cluster with cluster-admin permissions.
* You have installed the OpenShift CLI (oc).
* You have installed OpenShift Pipelines.

# Supported virtual machine tasks

The following table shows the supported tasks.




[NOTE]
----
Virtual machine creation in pipelines now utilizes ClusterInstanceType and ClusterPreference instead of template-based tasks, which have been deprecated. The create-vm-from-template, copy-template, and modify-vm-template commands remain available but are not used in default pipeline tasks.
----

# Windows EFI installer pipeline

You can run the Windows EFI installer pipeline by using the web console or CLI.

The Windows EFI installer pipeline installs Windows 10, Windows 11, or Windows Server 2022 into a new data volume from a Windows installation image (ISO file). A custom answer file is used to run the installation process.


[NOTE]
----
The Windows EFI installer pipeline uses a config map file with sysprep predefined by {product-title} and suitable for Microsoft ISO files. For ISO files pertaining to different Windows editions, it may be necessary to create a new config map file with a system-specific sysprep definition.
----

## Running the example pipelines using the web console

You can run the example pipelines from the Pipelines menu in the web console.

1. Click Pipelines -> Pipelines in the side menu.
2. Select a pipeline to open the Pipeline details page.
3. From the Actions list, select Start. The Start Pipeline dialog is displayed.
4. Keep the default values for the parameters and then click Start to run the pipeline. The Details tab tracks the progress of each task and displays the pipeline status.

## Running the example pipelines using the CLI

Use a PipelineRun resource to run the example pipelines. A PipelineRun object is the running instance of a pipeline. It instantiates a pipeline for execution with specific inputs, outputs, and execution parameters on a cluster. It also creates a TaskRun object for each task in the pipeline.

* You have installed the OpenShift CLI (`oc`).

1. To run the Microsoft Windows 11 installer pipeline, create the following PipelineRun manifest:

```yaml
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  generateName: windows11-installer-run-
  labels:
    pipelinerun: windows11-installer-run
spec:
    params:
    -   name: winImageDownloadURL
        value: <windows_image_download_url> 1
    -   name: acceptEula
        value: false 2
    pipelineRef:
        params:
        -   name: catalog
            value: redhat-pipelines
        -   name: type
            value: artifact
        -   name: kind
            value: pipeline
        -   name: name
            value: windows-efi-installer
        -   name: version
            value: {product-version}
        resolver: hub
    taskRunSpecs:
    -   pipelineTaskName: modify-windows-iso-file
        PodTemplate:
            securityContext:
                fsGroup: 107
                runAsUser: 107
```

Specify the URL for the Windows 11 64-bit ISO file. The product's language must be English (United States).
Example PipelineRun objects have a special parameter, acceptEula. By setting this parameter, you are agreeing to the applicable Microsoft user license agreements for each deployment or installation of the Microsoft products. If you set it to false, the pipeline exits at the first task.
2. Apply the PipelineRun manifest:

```terminal
$ oc apply -f windows11-customize-run.yaml
```


# Removing deprecated or unused resources

You can clean up deprecated or unused resources associated with the Red Hat OpenShift Pipelines Operator.

* Remove any remaining OpenShift Pipelines resources from the cluster by running the following command:

```terminal
$ oc delete clusterroles,rolebindings,serviceaccounts,configmaps,pipelines,tasks \
  --selector 'app.kubernetes.io/managed-by=ssp-operator' \
  --selector 'app.kubernetes.io/component in (tektonPipelines,tektonTasks)' \
  --selector 'app.kubernetes.io/name in (tekton-pipelines,tekton-tasks)' \
  --ignore-not-found \
  --all-namespaces
```


If the Red Hat OpenShift Pipelines Operator custom resource definitions (CRDs) have already been removed, the command may return an error. You can safely ignore this, as all other matching resources will still be deleted.

# Additional resources

* Creating CI/CD solutions for applications using Red Hat OpenShift Pipelines
* Creating a Windows VM