# Preparing to configure the user workload monitoring stack


This section explains which user-defined monitoring components can be configured
, how to enable user workload monitoring,
and how to prepare for configuring the user workload monitoring stack.

[IMPORTANT]
----
* Not all configuration parameters for the monitoring stack are exposed.
Only the parameters and fields listed in the Config map reference for the Cluster Monitoring Operator are supported for configuration.
* The monitoring stack imposes additional resource requirements. Consult the computing resources recommendations in Scaling the Cluster Monitoring Operator and verify that you have sufficient resources.
----

# Configurable monitoring components

This table shows the monitoring components you can configure and the keys used to specify the components in the {configmap-name} config map.




[WARNING]
----
Different configuration changes to the ConfigMap object result in different outcomes:
* The pods are not redeployed. Therefore, there is no service outage.
* The affected pods are redeployed:
* For single-node clusters, this results in temporary service outage.
* For multi-node clusters, because of high-availability, the affected pods are gradually rolled out and the monitoring stack remains available.
* Configuring and resizing a persistent volume always results in a service outage, regardless of high availability.
Each procedure that requires a change in the config map includes its expected outcome.
----

# Enabling monitoring for user-defined projects

In {product-title}, you can enable monitoring for user-defined projects in addition to the default platform monitoring. You can monitor your own projects in {product-title} without the need for an additional monitoring solution. Using this feature centralizes monitoring for core platform components and user-defined projects.


[NOTE]
----
Versions of Prometheus Operator installed using Operator Lifecycle Manager (OLM) are not compatible with user-defined monitoring. Therefore, custom Prometheus instances installed as a Prometheus custom resource (CR) managed by the OLM Prometheus Operator are not supported in {product-title}.
----

## Enabling monitoring for user-defined projects

Cluster administrators can enable monitoring for user-defined projects by setting the enableUserWorkload: true field in the cluster monitoring ConfigMap object.


[IMPORTANT]
----
You must remove any custom Prometheus instances before enabling monitoring for user-defined projects.
----


[NOTE]
----
You must have access to the cluster as a user with the cluster-admin cluster role to enable monitoring for user-defined projects in {product-title}. Cluster administrators can then optionally grant users permission to configure the components that are responsible for monitoring user-defined projects.
----

* You have access to the cluster as a user with the cluster-admin cluster role.
* You have installed the OpenShift CLI (`oc`).
* You have created the cluster-monitoring-config ConfigMap object.
* You have optionally created and configured the user-workload-monitoring-config ConfigMap object in the openshift-user-workload-monitoring project. You can add configuration options to this ConfigMap object for the components that monitor user-defined projects.

[NOTE]
----
Every time you save configuration changes to the user-workload-monitoring-config ConfigMap object, the pods in the openshift-user-workload-monitoring project are redeployed. It might sometimes take a while for these components to redeploy.
----

1. Edit the cluster-monitoring-config ConfigMap object:

```terminal
$ oc -n openshift-monitoring edit configmap cluster-monitoring-config
```

2. Add enableUserWorkload: true under data/config.yaml:

```yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-monitoring-config
  namespace: openshift-monitoring
data:
  config.yaml: |
    enableUserWorkload: true 1
```

When set to true, the enableUserWorkload parameter enables monitoring for user-defined projects in a cluster.
3. Save the file to apply the changes. Monitoring for user-defined projects is then enabled automatically.

[NOTE]
----
If you enable monitoring for user-defined projects, the user-workload-monitoring-config ConfigMap object is created by default.
----
4. Verify that the prometheus-operator, prometheus-user-workload, and thanos-ruler-user-workload pods are running in the openshift-user-workload-monitoring project. It might take a short while for the pods to start:

```terminal
$ oc -n openshift-user-workload-monitoring get pod
```

Example output

```terminal
NAME                                   READY   STATUS        RESTARTS   AGE
prometheus-operator-6f7b748d5b-t7nbg   2/2     Running       0          3h
prometheus-user-workload-0             4/4     Running       1          3h
prometheus-user-workload-1             4/4     Running       1          3h
thanos-ruler-user-workload-0           3/3     Running       0          3h
thanos-ruler-user-workload-1           3/3     Running       0          3h
```


* User workload monitoring first steps

## Granting users permission to configure monitoring for user-defined projects

As a cluster administrator, you can assign the user-workload-monitoring-config-edit role to a user. This grants permission to configure and manage monitoring for user-defined projects without giving them permission to configure and manage core {product-title} monitoring components.

* You have access to the cluster as a user with the cluster-admin cluster role.
* The user account that you are assigning the role to already exists.
* You have installed the OpenShift CLI (`oc`).

1. Assign the user-workload-monitoring-config-edit role to a user in the openshift-user-workload-monitoring project:

```terminal
$ oc -n openshift-user-workload-monitoring adm policy add-role-to-user \
  user-workload-monitoring-config-edit <user> \
  --role-namespace openshift-user-workload-monitoring
```

2. Verify that the user is correctly assigned to the user-workload-monitoring-config-edit role by displaying the related role binding:

```terminal
$ oc describe rolebinding <role_binding_name> -n openshift-user-workload-monitoring
```

Example command

```terminal
$ oc describe rolebinding user-workload-monitoring-config-edit -n openshift-user-workload-monitoring
```

Example output

```terminal
Name:         user-workload-monitoring-config-edit
Labels:       <none>
Annotations:  <none>
Role:
  Kind:  Role
  Name:  user-workload-monitoring-config-edit
Subjects:
  Kind  Name  Namespace
  ----  ----  ---------
  User  user1           1
```

In this example, user1 is assigned to the user-workload-monitoring-config-edit role.

# Enabling alert routing for user-defined projects

In {product-title}, an administrator can enable alert routing for user-defined projects.
This process consists of the following steps:

* Enable alert routing for user-defined projects:
* Use the default platform Alertmanager instance.
* Use a separate Alertmanager instance only for user-defined projects.
* Grant users permission to configure alert routing for user-defined projects.

After you complete these steps, developers and other users can configure custom alerts and alert routing for their user-defined projects.

* Understanding alert routing for user-defined projects

## Enabling the platform Alertmanager instance for user-defined alert routing

You can allow users to create user-defined alert routing configurations that use the main platform instance of Alertmanager.

* You have access to the cluster as a user with the cluster-admin cluster role.
* A cluster administrator has enabled monitoring for user-defined projects.
* You have installed the OpenShift CLI (`oc`).

1. Edit the cluster-monitoring-config ConfigMap object:

```terminal
$ oc -n openshift-monitoring edit configmap cluster-monitoring-config
```

2. Add enableUserAlertmanagerConfig: true in the alertmanagerMain section under data/config.yaml:

```yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-monitoring-config
  namespace: openshift-monitoring
data:
  config.yaml: |
    # ...
    alertmanagerMain:
      enableUserAlertmanagerConfig: true 1
    # ...
```

Set the enableUserAlertmanagerConfig value to true to allow users to create user-defined alert routing configurations that use the main platform instance of Alertmanager.
3. Save the file to apply the changes. The new configuration is applied automatically.

## Enabling a separate Alertmanager instance for user-defined alert routing

In some clusters, you might want to deploy a dedicated Alertmanager instance for user-defined projects, which can help reduce the load on the default platform Alertmanager instance and can better separate user-defined alerts from default platform alerts.
In these cases, you can optionally enable a separate instance of Alertmanager to send alerts for user-defined projects only.

* You have access to the cluster as a user with the cluster-admin cluster role.
* You have enabled monitoring for user-defined projects.
* You have installed the OpenShift CLI (`oc`).

1. Edit the user-workload-monitoring-config ConfigMap object:

```terminal
$ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config
```

2. Add enabled: true and enableAlertmanagerConfig: true in the alertmanager section under data/config.yaml:

```yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-workload-monitoring-config
  namespace: openshift-user-workload-monitoring
data:
  config.yaml: |
    alertmanager:
      enabled: true 1
      enableAlertmanagerConfig: true 2
```

Set the enabled value to true to enable a dedicated instance of the Alertmanager for user-defined projects in a cluster. Set the value to false or omit the key entirely to disable the Alertmanager for user-defined projects.
If you set this value to false or if the key is omitted, user-defined alerts are routed to the default platform Alertmanager instance.
Set the enableAlertmanagerConfig value to true to enable users to define their own alert routing configurations with AlertmanagerConfig objects.
3. Save the file to apply the changes. The dedicated instance of Alertmanager for user-defined projects starts automatically.

* Verify that the user-workload Alertmanager instance has started:

```terminal
$ oc -n openshift-user-workload-monitoring get alertmanager
```

Example output

```terminal
NAME            VERSION   REPLICAS   AGE
user-workload   0.24.0    2          100s
```


## Granting users permission to configure alert routing for user-defined projects

You can grant users permission to configure alert routing for user-defined projects.

* You have access to the cluster as a user with the cluster-admin cluster role.
* You have enabled monitoring for user-defined projects.
* The user account that you are assigning the role to already exists.
* You have installed the OpenShift CLI (`oc`).

* Assign the alert-routing-edit cluster role to a user in the user-defined project:

```terminal
$ oc -n <namespace> adm policy add-role-to-user alert-routing-edit <user> 1
```

For <namespace>, substitute the namespace for the user-defined project, such as ns1. For <user>, substitute the username for the account to which you want to assign the role.

* Configuring alert notifications

# Granting users permissions for monitoring for user-defined projects

As a cluster administrator, you can monitor all core {product-title} and user-defined projects.

You can also grant developers and other users different permissions:

* Monitoring user-defined projects
* Configuring the components that monitor user-defined projects
* Configuring alert routing for user-defined projects
* Managing alerts and silences for user-defined projects

You can grant the permissions by assigning one of the following monitoring roles or cluster roles:





* CMO services resources
* Granting users permission to configure monitoring for user-defined projects
* Granting users permission to configure alert routing for user-defined projects

## Granting user permissions by using the web console

You can grant users permissions for the openshift-monitoring project or their own projects, by using the {product-title} web console.

* You have access to the cluster as a user with the cluster-admin cluster role.
* The user account that you are assigning the role to already exists.

1. In the {product-title} web console, go to User Management -> RoleBindings -> Create binding.
2. In the Binding Type section, select the Namespace Role Binding type.
3. In the Name field, enter a name for the role binding.
4. In the Namespace field, select the project where you want to grant the access.

[IMPORTANT]
----
The monitoring role or cluster role permissions that you grant to a user by using this procedure apply only to the project that you select in the Namespace field.
----
5. Select a monitoring role or cluster role from the Role Name list.
6. In the Subject section, select User.
7. In the Subject Name field, enter the name of the user.
8. Select Create to apply the role binding.

## Granting user permissions by using the CLI

You can grant users permissions
to monitor
their own projects, by using the OpenShift CLI (`oc`).


[IMPORTANT]
----
Whichever role or cluster role you choose, you must bind it against a specific project as a cluster administrator.
----

* You have access to the cluster as a user with the cluster-admin cluster role.
* The user account that you are assigning the role to already exists.
* You have installed the OpenShift CLI (`oc`).

* To assign a monitoring role to a user for a project, enter the following command:

```terminal
$ oc adm policy add-role-to-user <role> <user> -n <namespace> --role-namespace <namespace> 1
```

Substitute <role> with the wanted monitoring role, <user> with the user to whom you want to assign the role, and <namespace> with the project where you want to grant the access.
* To assign a monitoring cluster role to a user for a project, enter the following command:

```terminal
$ oc adm policy add-cluster-role-to-user <cluster-role> <user> -n <namespace> 1
```

Substitute <cluster-role> with the wanted monitoring cluster role, <user> with the user to whom you want to assign the cluster role, and <namespace> with the project where you want to grant the access.

# Excluding a user-defined project from monitoring

Individual user-defined projects can be excluded from user workload monitoring. To do so, add the openshift.io/user-monitoring label to the project&#8217;s namespace with a value of false.

1. Add the label to the project namespace:

```terminal
$ oc label namespace my-project 'openshift.io/user-monitoring=false'
```

2. To re-enable monitoring, remove the label from the namespace:

```terminal
$ oc label namespace my-project 'openshift.io/user-monitoring-'
```


[NOTE]
----
If there were any active monitoring targets for the project, it may take a few minutes for Prometheus to stop scraping them after adding the label.
----

# Disabling monitoring for user-defined projects

After enabling monitoring for user-defined projects, you can disable it again by setting enableUserWorkload: false in the cluster monitoring ConfigMap object.


[NOTE]
----
Alternatively, you can remove enableUserWorkload: true to disable monitoring for user-defined projects.
----

1. Edit the cluster-monitoring-config ConfigMap object:

```terminal
$ oc -n openshift-monitoring edit configmap cluster-monitoring-config
```

1. Set enableUserWorkload: to false under data/config.yaml:

```yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-monitoring-config
  namespace: openshift-monitoring
data:
  config.yaml: |
    enableUserWorkload: false
```

2. Save the file to apply the changes. Monitoring for user-defined projects is then disabled automatically.
3. Check that the prometheus-operator, prometheus-user-workload and thanos-ruler-user-workload pods are terminated in the openshift-user-workload-monitoring project. This might take a short while:

```terminal
$ oc -n openshift-user-workload-monitoring get pod
```

Example output

```terminal
No resources found in openshift-user-workload-monitoring project.
```



[NOTE]
----
The user-workload-monitoring-config ConfigMap object in the openshift-user-workload-monitoring project is not automatically deleted when monitoring for user-defined projects is disabled. This is to preserve any custom configurations that you may have created in the ConfigMap object.
----