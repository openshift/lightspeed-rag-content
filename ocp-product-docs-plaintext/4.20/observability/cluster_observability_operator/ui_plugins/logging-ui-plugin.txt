# Logging UI plugin



[IMPORTANT]
----
Starting with {product-title} 4.19, the perspectives in the web console have unified. The Developer perspective is no longer enabled by default.
All users can interact with all {product-title} web console features. However, if you are not the cluster owner, you might need to request permission to access certain features from the cluster owner.
You can still enable the Developer perspective. On the Getting Started pane in the web console, you can take a tour of the console, find information on setting up your cluster, view a quick start for enabling the Developer perspective, and follow links to explore new features and capabilities.
----
The logging UI plugin surfaces logging data in the {product-title} web console on the Observe -> Logs page.
You can specify filters, queries, time ranges and refresh rates, with the results displayed as a list of collapsed logs, which can then be expanded to show more detailed information for each log.
If you also deploy the Troubleshooting UI plugin on {product-title} version 4.16+, it connects to the Korrel8r service and adds direct links to the web console, from the Observe -> Logs page, to the Observe -> Metrics page with a correlated PromQL query. The plugin also adds a See Related Logs link from the web console alerting detail page, at Observe -> Alerting,  to the Observe -> Logs page with a correlated filter set selected.
The features of the plugin are categorized as:
dev-console:: Adds the logging view to the web console.
alerts:: Merges the web console alerts with log-based alerts defined in the Loki ruler. Adds a log-based metrics chart in the alert detail view.
dev-alerts:: Merges the web console alerts with log-based alerts defined in the Loki ruler. Adds a log-based metrics chart in the alert detail view for the web console.
For Cluster Observability Operator (COO) versions, the support for these features in {product-title} versions is shown in the following table:

# Installing the Cluster Observability Operator logging UI plugin

* You have access to the cluster as a user with the cluster-admin role.
* You have logged in to the {product-title} web console.
* You have installed the Cluster Observability Operator.
* You have a LokiStack instance in your cluster.

1. In the {product-title} web console, click Operators -> Installed Operators and select Cluster Observability Operator.
2. Choose the UI Plugin tab (at the far right of the tab list) and click Create UIPlugin.
3. Select YAML view, enter the following content, and then click Create:

```yaml
apiVersion: observability.openshift.io/v1alpha1
kind: UIPlugin
metadata:
  name: logging
spec:
  type: Logging
  logging:
    lokiStack:
      name: logging-loki
    logsLimit: 50
    timeout: 30s
    schema: otel 1
```

schema is one of otel, viaq, or select. The default is viaq if no value is specified. When you choose select, you can select the mode in the UI when you run a query.

[NOTE]
----
These are the known issues for the logging UI plugin - for more information, see OU-587.
* The schema feature is only supported in {product-title} 4.15 and later. In earlier versions of {product-title}, the logging UI plugin will only use the viaq attribute, ignoring any other values that might be set.
* Non-administrator users cannot query logs using the otel attribute with logging for Red Hat OpenShift versions 5.8 to 6.2. This issue will be fixed in a future logging release. (LOG-6589)
* In logging for Red Hat OpenShift version 5.9, the severity_text Otel attribute is not set.
----