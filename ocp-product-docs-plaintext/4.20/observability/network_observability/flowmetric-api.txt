# FlowMetric configuration parameters


FlowMetric is the API allowing to create custom metrics from the collected flow logs.

# FlowMetric [flows.netobserv.io/v1alpha1]

Description:: 
FlowMetric is the API allowing to create custom metrics from the collected flow logs.
Type:: object



## .metadata

Description:: 
Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
Type:: object

## .spec

Description:: 
FlowMetricSpec defines the desired state of FlowMetric
The provided API allows you to customize these metrics according to your needs.
When adding new metrics or modifying existing labels, you must carefully monitor the memory
usage of Prometheus workloads as this could potentially have a high impact. Cf https://rhobs-handbook.netlify.app/products/openshiftmonitoring/telemetry.md/#what-is-the-cardinality-of-a-metric
To check the cardinality of all Network Observability metrics, run as promql: count({name=~"netobserv.*"}) by (name).
Type:: object
Required:: 
* metricName
* type



## .spec.charts

Description:: 
Charts configuration, for the {product-title} Console in the administrator view, Dashboards menu.
Type:: array

## .spec.charts[]

Description:: 
Configures charts / dashboard generation associated to a metric
Type:: object
Required:: 
* dashboardName
* queries
* title
* type



## .spec.charts[].queries

Description:: 
List of queries to be displayed on this chart. If type is SingleStat and multiple queries are provided,
this chart is automatically expanded in several panels (one per query).
Type:: array

## .spec.charts[].queries[]

Description:: 
Configures PromQL queries
Type:: object
Required:: 
* legend
* promQL
* top



## .spec.filters

Description:: 
filters is a list of fields and values used to restrict which flows are taken into account.
Refer to the documentation for the list of available fields: https://docs.openshift.com/container-platform/latest/observability/network_observability/json-flows-format-reference.html.
Type:: array

## .spec.filters[]

Description:: 

Type:: object
Required:: 
* field
* matchType

