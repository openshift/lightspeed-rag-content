# Upgrading the Migration Toolkit for Containers


You can upgrade the Migration Toolkit for Containers (MTC) on {product-title} {product-version} by using Operator Lifecycle Manager.
You can upgrade MTC on {product-title} 4.5, and earlier versions, by reinstalling the legacy Migration Toolkit for Containers Operator.

[IMPORTANT]
----
If you are upgrading from MTC version 1.3, you must perform an additional procedure to update the MigPlan custom resource (CR).
----

# Upgrading the Migration Toolkit for Containers on {product-title} {product-version}

You can upgrade the Migration Toolkit for Containers (MTC) on {product-title} {product-version} by using the Operator Lifecycle Manager.


[IMPORTANT]
----
When upgrading the MTC by using the Operator Lifecycle Manager, you must use a supported migration path.
----

* Migrating from {product-title} 3 to {product-title} 4 requires a legacy MTC Operator and MTC 1.7.x.
* Migrating from MTC 1.7.x to MTC 1.8.x is not supported.
* You must use MTC 1.7.x to migrate anything with a source of {product-title} 4.9 or earlier.
* MTC 1.7.x must be used on both source and destination.
* MTC 1.8.x only supports migrations from {product-title} 4.10 or later to {product-title} 4.10 or later. For migrations only involving cluster versions 4.10 and later, either 1.7.x or 1.8.x may be used. However, it must be the same MTC version on both source & destination.
* Migration from source MTC 1.7.x to destination MTC 1.8.x is unsupported.
* Migration from source MTC 1.8.x to destination MTC 1.7.x is unsupported.
* Migration from source MTC 1.7.x to destination MTC 1.7.x is supported.
* Migration from source MTC 1.8.x to destination MTC 1.8.x is supported

* You must be logged in as a user with cluster-admin privileges.

1. In the {product-title} console, navigate to Operators -> Installed Operators.

Operators that have a pending upgrade display an Upgrade available status.
2. Click Migration Toolkit for Containers Operator.
3. Click the Subscription tab. Any upgrades requiring approval are displayed next to Upgrade Status. For example, it might display 1 requires approval.
4. Click 1 requires approval, then click Preview Install Plan.
5. Review the resources that are listed as available for upgrade and click Approve.
6. Navigate back to the Operators -> Installed Operators page to monitor the progress of the upgrade. When complete, the status changes to Succeeded and Up to date.
7. Click Workloads -> Pods to verify that the MTC pods are running.

# Upgrading the Migration Toolkit for Containers to 1.8.0

To upgrade the Migration Toolkit for Containers to 1.8.0, complete the following steps.

1. Determine subscription names and current channels to work with for upgrading by using one of the following methods:
* Determine the subscription names and channels by running the following command:

```terminal
$ oc -n openshift-migration get sub
```

Example output

```terminal
NAME                                                                         PACKAGE                SOURCE                 CHANNEL
mtc-operator                                                                 mtc-operator           mtc-operator-catalog   release-v1.7
redhat-oadp-operator-stable-1.0-mtc-operator-catalog-openshift-marketplace   redhat-oadp-operator   mtc-operator-catalog   stable-1.0
```

* Or return the subscription names and channels in JSON by running the following command:

```terminal
$ oc -n openshift-migration get sub -o json | jq -r '.items[] | { name: .metadata.name, package: .spec.name, channel: .spec.channel }'
```

Example output

```terminal
{
  "name": "mtc-operator",
  "package": "mtc-operator",
  "channel": "release-v1.7"
}
{
  "name": "redhat-oadp-operator-stable-1.0-mtc-operator-catalog-openshift-marketplace",
  "package": "redhat-oadp-operator",
  "channel": "stable-1.0"
}
```

2. For each subscription, patch to move from the MTC 1.7 channel to the MTC 1.8 channel by running the following command:

```terminal
$ oc -n openshift-migration patch subscription mtc-operator --type merge --patch '{"spec": {"channel": "release-v1.8"}}'
```

Example output

```terminal
subscription.operators.coreos.com/mtc-operator patched
```


## Upgrading OADP 1.0 to 1.2 for Migration Toolkit for Containers 1.8.0

To upgrade OADP 1.0 to 1.2 for Migration Toolkit for Containers 1.8.0, complete the following steps.

* For each subscription, patch the OADP operator from OADP 1.0 to OADP 1.2 by running the following command:

```terminal
$ oc -n openshift-migration patch subscription redhat-oadp-operator-stable-1.0-mtc-operator-catalog-openshift-marketplace --type merge --patch '{"spec": {"channel":"stable-1.2"}}'
```


[NOTE]
----
Sections indicating the user-specific returned NAME values that are used for the installation of MTC & OADP, respectively.
----
Example output

```terminal
subscription.operators.coreos.com/redhat-oadp-operator-stable-1.0-mtc-operator-catalog-openshift-marketplace patched
```


[NOTE]
----
The returned value will be similar to redhat-oadp-operator-stable-1.0-mtc-operator-catalog-openshift-marketplace, which is used in this example.
----
* If the installPlanApproval parameter is set to Automatic, the Operator Lifecycle Manager (OLM) begins the upgrade process.
* If the installPlanApproval parameter is set to Manual, you must approve each installPlan before the OLM begins the upgrades.

1. Verify that the OLM has completed the upgrades of OADP and MTC by running the following command:

```terminal
$ oc -n openshift-migration get subscriptions.operators.coreos.com mtc-operator -o json | jq '.status | (."state"=="AtLatestKnown")'
```

2. When a value of true is returned, verify the channel used for each subscription by running the following command:

```terminal
$ oc -n openshift-migration get sub -o json | jq -r '.items[] | {name: .metadata.name, channel: .spec.channel }'
```

Example output

```terminal
{
  "name": "mtc-operator",
  "channel": "release-v1.8"
}
{
  "name": "redhat-oadp-operator-stable-1.0-mtc-operator-catalog-openshift-marketplace",
  "channel": "stable-1.2"
}
```


Confirm that the `mtc-operator.v1.8.0` and `oadp-operator.v1.2.x` packages are installed by running the following command:

```terminal
$ oc -n openshift-migration get csv
```

Example output

```terminal
NAME                     DISPLAY                                     VERSION   REPLACES                 PHASE
mtc-operator.v1.8.0      Migration Toolkit for Containers Operator   1.8.0     mtc-operator.v1.7.13     Succeeded
oadp-operator.v1.2.2     OADP Operator                               1.2.2     oadp-operator.v1.0.13    Succeeded
```


# Upgrading the Migration Toolkit for Containers on {product-title} versions 4.2 to 4.5

You can upgrade Migration Toolkit for Containers (MTC) on {product-title} versions 4.2 to 4.5 by manually installing the legacy Migration Toolkit for Containers Operator.

* You must be logged in as a user with cluster-admin privileges.
* You must have access to registry.redhat.io.
* You must have podman installed.

1. Log in to registry.redhat.io with your Red Hat Customer Portal credentials by entering the following command:

```terminal
$ podman login registry.redhat.io
```

2. Download the operator.yml file by entering the following command:

```terminal
$ podman cp $(podman create registry.redhat.io/rhmtc/openshift-migration-legacy-rhel8-operator:v1.7:/operator.yml ./
```

3. Replace the Migration Toolkit for Containers Operator by entering the following command:

```terminal
$ oc replace --force -f operator.yml
```

4. Scale the migration-operator deployment to 0 to stop the deployment by entering the following command:

```terminal
$ oc scale -n openshift-migration --replicas=0 deployment/migration-operator
```

5. Scale the migration-operator deployment to 1 to start the deployment and apply the changes by entering the following command:

```terminal
$ oc scale -n openshift-migration --replicas=1 deployment/migration-operator
```

6. Verify that the migration-operator was upgraded by entering the following command:

```terminal
$ oc -o yaml -n openshift-migration get deployment/migration-operator | grep image: | awk -F ":" '{ print $NF }'
```

7. Download the controller.yml file by entering the following command:

```terminal
$ podman cp $(podman create registry.redhat.io/rhmtc/openshift-migration-legacy-rhel8-operator:v1.7):/operator.yml ./
```

8. Create the migration-controller object by entering the following command:

```terminal
$ oc create -f controller.yml
```

9. Verify that the MTC pods are running by entering the following command:

```terminal
$ oc get pods -n openshift-migration
```


# Upgrading MTC 1.3 to 1.8

If you are upgrading Migration Toolkit for Containers (MTC) version 1.3.x to 1.8, you must update the MigPlan custom resource (CR) manifest on the cluster on which the MigrationController pod is running.

Because the indirectImageMigration and indirectVolumeMigration parameters do not exist in MTC 1.3, their default value in version 1.4 is false, which means that direct image migration and direct volume migration are enabled. Because the direct migration requirements are not fulfilled, the migration plan cannot reach a Ready state unless these parameter values are changed to true.


[IMPORTANT]
----
* Migrating from {product-title} 3 to {product-title} 4 requires a legacy MTC Operator and MTC 1.7.x.
* Upgrading MTC 1.7.x to 1.8.x requires manually updating the OADP channel from stable-1.0 to stable-1.2 in order to successfully complete the upgrade from 1.7.x to 1.8.x.
----

* You must be logged in as a user with cluster-admin privileges.

1. Log in to the cluster on which the MigrationController pod is running.
2. Get the MigPlan CR manifest:

```terminal
$ oc get migplan <migplan> -o yaml -n openshift-migration
```

3. Update the following parameter values and save the file as migplan.yaml:

```yaml
...
spec:
  indirectImageMigration: true
  indirectVolumeMigration: true
```

4. Replace the MigPlan CR manifest to apply the changes:

```terminal
$ oc replace -f migplan.yaml -n openshift-migration
```

5. Get the updated MigPlan CR manifest to verify the changes:

```terminal
$ oc get migplan <migplan> -o yaml -n openshift-migration
```
