# Introduction to OpenShift Container Platform


{product-title} is a cloud-based Kubernetes container platform. The foundation of {product-title} is based on Kubernetes and therefore shares the same technology. It is designed to allow applications and the data centers that support them to expand from just a few machines and applications to thousands of machines that serve millions of clients.
{product-title} enables you to do the following:
* Provide developers and IT organizations with cloud application platforms that can be used for deploying applications on secure and scalable resources.
* Require minimal configuration and management overhead.
* Bring the Kubernetes platform to customer data centers and cloud.
* Meet security, privacy, compliance, and governance requirements.
With its foundation in Kubernetes, {product-title} incorporates the same technology that serves as the engine for massive telecommunications, streaming video, gaming, banking, and other applications. Its implementation in open Red Hat technologies lets you extend your containerized applications beyond a single cloud to on-premise and multi-cloud environments.
{product-title} is a platform for developing and running containerized applications. It is designed to allow applications and the data centers that support them to expand from just a few machines and applications to thousands of machines that serve millions of clients.

# Understanding {product-title}

{product-title} is a Kubernetes environment for managing the lifecycle of container-based applications and their dependencies on various computing platforms, such as bare metal, virtualized, on-premise, and in cloud. {product-title} deploys, configures and manages containers. {product-title} offers usability, stability, and customization of its components.

{product-title} utilises a number of computing resources, known as nodes. A node has a lightweight, secure operating system based on Red Hat Enterprise Linux (RHEL), known as Red Hat Enterprise Linux CoreOS (RHCOS).

After a node is booted and configured, it obtains a container runtime, such as CRI-O or Docker, for managing and running the images of container workloads scheduled to it. The Kubernetes agent, or kubelet schedules container workloads on the node. The kubelet is responsible for registering the node with the cluster and receiving the details of container workloads.

{product-title} configures and manages the networking, load balancing and routing of the cluster. {product-title} adds cluster services for monitoring the cluster health and performance, logging, and for managing upgrades.

The container image registry and OperatorHub provide Red Hat certified products and community built softwares for providing various application services within the cluster. These applications and services manage the applications deployed in the cluster, databases, frontends and user interfaces, application runtimes and business automation, and developer services for development and testing of container applications.

You can manage applications within the cluster either manually by configuring deployments of containers running from pre-built images or through resources known as Operators. You can build custom images from pre-build images and source code, and store these custom images locally in an internal, private or public registry.

The Multicluster Management layer can manage multiple clusters including their deployment, configuration, compliance and distribution of workloads in a single console.

![Red Hat OpenShift Kubernetes Engine]

## Use cases

Red Hat OpenShift is widely adopted across industries to support various use cases, enabling organizations to modernize applications, optimize infrastructure, and enhance operational efficiency.

OpenShift virtualization:: 
* Provides a unified platform for managing virtual machines (VMs) and containers in parallel, which streamlines operations and reduces complexity.
* Provides a robust infrastructure to scale VM workloads efficiently.
* Provides enhanced security features to protect VM environments, ensuring compliance and data integrity.

For detailed implementation guidelines and a sample architecture, refer to the OpenShift Virtualization - Reference Implementation Guide. This document offers best practices for deploying OpenShift as a hosting solution for virtualization workloads, designed for environments transitioning from platforms such as VMware Cloud Foundation, VMware vSphere Foundation, Red Hat Virtualization, and OpenStack to OpenShift Virtualization.
Application modernization including artificial intelligence and machine learning (AI/ML) operations:: 
* Enables containerization and refactoring of legacy applications.
* Preserves business logic while making applications cloud-ready and maintainable.
* Supports model training and inference workloads with standardized ML infrastructure.
* Seamlessly integrates with data science workflows.
Multi-cloud and hybrid cloud deployments:: 
* Provides a consistent platform across on-premises data centers and multiple public clouds.
* Helps avoid vendor lock-in and optimize workload placement.
DevOps enablement:: 
* Built-in continuous delivery and continuous integration (CI/CD) pipelines and GitOps workflows streamline software development.
* Offers developer self-service capabilities to accelerate software delivery.
Edge computing:: 
* Enables distributed computing closer to data sources in industries such as telecommunications, retail, and manufacturing.
* Supports lightweight deployment patterns, including three-node clusters, single-node clusters and Red Hat Device Edge or MicroShift.
* Provides support for on-premises deployments.
Regulatory compliance:: Provides robust security features to meet compliance requirements for financial services, healthcare, and government agencies.
Microservices architecture:: Supports cloud-native application development using service mesh, API management, and serverless capabilities.
Enterprise SaaS delivery:: 
* Facilitates multi-tenant SaaS application deployment with consistent operations.
* Includes features like Hosted Control Planes, cluster-as-a-service, and fleet-level management with Advanced Cluster Management (ACM) and Advanced Cluster Security (ACS).

To explore more use cases, see Use cases.

For additional recommended solutions tailored to various use cases, see Solution Patterns from Red Hat.

* Preparing to install on a single node