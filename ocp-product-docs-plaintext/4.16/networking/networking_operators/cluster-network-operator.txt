# Cluster Network Operator in Red Hat OpenShift Container Platform


You can use the Cluster Network Operator (CNO) to deploy and manage cluster network components on an Red Hat OpenShift Container Platform cluster, including the Container Network Interface (CNI) network plugin selected for the cluster during installation.

# Cluster Network Operator

The Cluster Network Operator implements the network API from the operator.openshift.io API group.
The Operator deploys the OVN-Kubernetes network plugin, or the network provider plugin that you selected during cluster installation, by using a daemon set.

The Cluster Network Operator is deployed during installation as a Kubernetes
Deployment.

1. Run the following command to view the Deployment status:

```terminal
$ oc get -n openshift-network-operator deployment/network-operator
```

Example output

```terminal
NAME               READY   UP-TO-DATE   AVAILABLE   AGE
network-operator   1/1     1            1           56m
```

2. Run the following command to view the state of the Cluster Network Operator:

```terminal
$ oc get clusteroperator/network
```

Example output

```terminal
NAME      VERSION   AVAILABLE   PROGRESSING   DEGRADED   SINCE
network   4.16.1     True        False         False      50m
```


The following fields provide information about the status of the operator:
AVAILABLE, PROGRESSING, and DEGRADED. The AVAILABLE field is True when
the Cluster Network Operator reports an available status condition.

# Viewing the cluster network configuration

Every new Red Hat OpenShift Container Platform installation has a network.config object named
cluster.

* Use the oc describe command to view the cluster network configuration:

```terminal
$ oc describe network.config/cluster
```

Example output

```terminal
Name:         cluster
Namespace:
Labels:       <none>
Annotations:  <none>
API Version:  config.openshift.io/v1
Kind:         Network
Metadata:
  Self Link:           /apis/config.openshift.io/v1/networks/cluster
Spec: 1
  Cluster Network:
    Cidr:         10.128.0.0/14
    Host Prefix:  23
  Network Type:   OpenShiftSDN
  Service Network:
    172.30.0.0/16
Status: 2
  Cluster Network:
    Cidr:               10.128.0.0/14
    Host Prefix:        23
  Cluster Network MTU:  8951
  Network Type:         OpenShiftSDN
  Service Network:
    172.30.0.0/16
Events:  <none>
```

The Spec field displays the configured state of the cluster network.
The Status field displays the current state of the cluster network
configuration.

# Viewing Cluster Network Operator status

You can inspect the status and view the details of the Cluster Network Operator
using the oc describe command.

* Run the following command to view the status of the Cluster Network Operator:

```terminal
$ oc describe clusteroperators/network
```


# Enabling IP forwarding globally

From Red Hat OpenShift Container Platform 4.14 onward, global IP address forwarding is disabled on OVN-Kubernetes based cluster deployments to prevent undesirable effects for cluster administrators with nodes acting as routers. However, in some cases where an administrator expects traffic to be forwarded a new configuration parameter ipForwarding is available to allow forwarding of all IP traffic.

To re-enable IP forwarding for all traffic on OVN-Kubernetes managed interfaces set the gatewayConfig.ipForwarding specification in the Cluster Network Operator to Global following this procedure:

1. Backup the existing network configuration by running the following command:

```terminal
$ oc get network.operator cluster -o yaml > network-config-backup.yaml
```

2. Run the following command to modify the existing network configuration:

```terminal
$ oc edit network.operator cluster
```

1. Add or update the following block under spec as illustrated in the following example:

```yaml
spec:
  clusterNetwork:
  - cidr: 10.128.0.0/14
    hostPrefix: 23
  serviceNetwork:
  - 172.30.0.0/16
  networkType: OVNKubernetes
  clusterNetworkMTU: 8900
  defaultNetwork:
    ovnKubernetesConfig:
      gatewayConfig:
        ipForwarding: Global
```

2. Save and close the file.
3. After applying the changes, the OpenShift Cluster Network Operator (CNO) applies the update across the cluster. You can monitor the progress by using the following command:

```terminal
$ oc get clusteroperators network
```


The status should eventually report as Available, Progressing=False, and Degraded=False.
4. Alternatively, you can enable IP forwarding globally by running the following command:

```terminal
$ oc patch network.operator cluster -p '{"spec":{"defaultNetwork":{"ovnKubernetesConfig":{"gatewayConfig":{"ipForwarding": "Global"}}}}}' --type=merge
```


[NOTE]
----
The other valid option for this parameter is Restricted in case you want to revert this change. Restricted is the default and with that setting global IP address forwarding is disabled.
----

# Viewing Cluster Network Operator logs

You can view Cluster Network Operator logs by using the oc logs command.

* Run the following command to view the logs of the Cluster Network Operator:

```terminal
$ oc logs --namespace=openshift-network-operator deployment/network-operator
```


# Cluster Network Operator configuration

The configuration for the cluster network is specified as part of the Cluster Network Operator (CNO) configuration and stored in a custom resource (CR) object that is named cluster. The CR specifies the fields for the Network API in the operator.openshift.io API group.

The CNO configuration inherits the following fields during cluster installation from the Network API in the Network.config.openshift.io API group:

clusterNetwork:: IP address pools from which pod IP addresses are allocated.
serviceNetwork:: IP address pool for services.
defaultNetwork.type:: Cluster network plugin. OVNKubernetes is the only supported plugin during installation.


[NOTE]
----
After cluster installation, you can only modify the clusterNetwork IP address range. The default network type can only be changed from OpenShift SDN to OVN-Kubernetes through migration.
----

You can specify the cluster network plugin configuration for your cluster by setting the fields for the defaultNetwork object in the CNO object named cluster.

## Cluster Network Operator configuration object

The fields for the Cluster Network Operator (CNO) are described in the following table:




[IMPORTANT]
----
For a cluster that needs to deploy objects across multiple networks, ensure that you specify the same value for the clusterNetwork.hostPrefix parameter for each network type that is defined in the install-config.yaml file. Setting a different value for each clusterNetwork.hostPrefix parameter can impact the OVN-Kubernetes network plugin, where the plugin cannot effectively route object traffic among different nodes.
----

## defaultNetwork object configuration

The values for the defaultNetwork object are defined in the following table:



## Configuration for the OpenShift SDN network plugin

The following table describes the configuration fields for the OpenShift SDN network plugin:




```yaml
defaultNetwork:
  type: OpenShiftSDN
  openshiftSDNConfig:
    mode: NetworkPolicy
    mtu: 1450
    vxlanPort: 4789
```


## Configuration for the OVN-Kubernetes network plugin

The following table describes the configuration fields for the OVN-Kubernetes network plugin:


















[NOTE]
----
You can only change the configuration for your cluster network plugin during cluster installation, except for the gatewayConfig field that can be changed at runtime as a postinstallation activity.
----


```yaml
defaultNetwork:
  type: OVNKubernetes
  ovnKubernetesConfig:
    mtu: 1400
    genevePort: 6081
    ipsecConfig:
      mode: Full
```



[IMPORTANT]
----
Using OVNKubernetes can lead to a stack exhaustion problem on IBM Power(R).
----

## kubeProxyConfig object configuration (OpenShiftSDN container network interface only)

The values for the kubeProxyConfig object are defined in the following table:



## Cluster Network Operator example configuration

A complete CNO configuration is specified in the following example:


```yaml
apiVersion: operator.openshift.io/v1
kind: Network
metadata:
  name: cluster
spec:
  clusterNetwork:
  - cidr: 10.128.0.0/14
    hostPrefix: 23
  serviceNetwork:
  - 172.30.0.0/16
  networkType: OVNKubernetes
```


# Additional resources

* Network API in the operator.openshift.io API group
* Expanding the cluster network IP address range