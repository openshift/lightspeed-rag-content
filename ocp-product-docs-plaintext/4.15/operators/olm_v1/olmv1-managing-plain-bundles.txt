Managing plain bundles in OLM 1.0 (Technology Preview)

In Operator Lifecycle Manager (OLM) 1.0, a plain bundle is a static collection of arbitrary Kubernetes manifests in YAML format. The experimental olm.bundle.mediatype property of the olm.bundle schema object differentiates a plain bundle (plain+v0) from a regular (registry+v1) bundle.

OLM 1.0 is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.

For more information about the support scope of Red Hat Technology Preview features, see Technology Preview Features Support Scope.
As a cluster administrator, you can build and publish a file-based catalog that includes a plain bundle image by completing the following procedures:

Build a plain bundle image.

Create a file-based catalog.

Add the plain bundle image to your file-based catalog.

Build your catalog as an image.

Publish your catalog image.


RukPak component and packaging format
Prerequisites
Access to an Red Hat OpenShift Container Platform cluster using an account with cluster-admin permissions

The TechPreviewNoUpgrades feature set enabled on the cluster

The OpenShift CLI (oc) installed on your workstation

The opm CLI installed on your workstation

Docker or Podman installed on your workstation

Push access to a container registry, such as Quay

Kubernetes manifests for your bundle in a flat directory at the root of your project similar to the following structure:


Enabling features using feature gates
Building a plain bundle image from an image source
The Operator Controller currently supports installing plain bundles created only from a plain bundle image.

At the root of your project, create a Dockerfile that can build a bundle image:

Build an Open Container Initiative (OCI)-compliant image by using your preferred build tool, similar to the following example:

Push the image to your remote registry by running the following command:
Creating a file-based catalog
If you do not have a file-based catalog, you must perform the following steps to initialize the catalog.

Create a directory for the catalog by running the following command:

Generate a Dockerfile that can build a catalog image by running the opm generate dockerfile command in the same directory level as the previous step:

Populate the catalog with the package definition for your extension by running the opm init command:
Adding a plain bundle to a file-based catalog
The opm render command does not support adding plain bundles to catalogs. You must manually add plain bundles to your file-based catalog, as shown in the following procedure.

Verify that the index.json or index.yaml file for your catalog is similar to the following example:

To create an olm.bundle blob, edit your index.json or index.yaml file, similar to the following example:

To create an olm.channel blob, edit your index.json or index.yaml file, similar to the following example:


Open your index.json or index.yaml file and ensure it is similar to the following example:

Validate your catalog by running the following command:
Building and publishing a file-based catalog
Build your file-based catalog as an image by running the following command:

Push your catalog image by running the following command: