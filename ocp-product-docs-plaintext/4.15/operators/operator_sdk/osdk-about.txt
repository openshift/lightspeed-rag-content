About the Operator SDK

The Operator Framework is an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way. Operators take advantage of Kubernetes extensibility to deliver the automation advantages of cloud services, like provisioning, scaling, and backup and restore, while being able to run anywhere that Kubernetes can run.

Operators make it easy to manage complex, stateful applications on top of Kubernetes. However, writing an Operator today can be difficult because of challenges such as using low-level APIs, writing boilerplate, and a lack of modularity, which leads to duplication.

The Operator SDK, a component of the Operator Framework, provides a command-line interface (CLI) tool that Operator developers can use to build, test, and deploy an Operator.

Why use the Operator SDK?

The Operator SDK simplifies this process of building Kubernetes-native applications, which can require deep, application-specific operational knowledge. The Operator SDK not only lowers that barrier, but it also helps reduce the amount of boilerplate code required for many common management capabilities, such as metering or monitoring.

The Operator SDK is a framework that uses the controller-runtime library to make writing Operators easier by providing the following features:

High-level APIs and abstractions to write the operational logic more intuitively

Tools for scaffolding and code generation to quickly bootstrap a new project

Integration with Operator Lifecycle Manager (OLM) to streamline packaging, installing, and running Operators on a cluster

Extensions to cover common Operator use cases

Metrics set up automatically in any generated Go-based Operator for use on clusters where the Prometheus Operator is deployed


Operator authors with cluster administrator access to a Kubernetes-based cluster (such as Red Hat OpenShift Container Platform) can use the Operator SDK CLI to develop their own Operators based on Go, Ansible, Java, or Helm. Kubebuilder is embedded into the Operator SDK as the scaffolding solution for Go-based Operators, which means existing Kubebuilder projects can be used as is with the Operator SDK and continue to work.

Red Hat OpenShift Container Platform 4.15 supports Operator SDK 1.31.0.
What are Operators?
For an overview about basic Operator concepts and terminology, see Understanding Operators.
Development workflow
The Operator SDK provides the following workflow to develop a new Operator:

Create an Operator project by using the Operator SDK command-line interface (CLI).

Define new resource APIs by adding custom resource definitions (CRDs).

Specify resources to watch by using the Operator SDK API.

Define the Operator reconciling logic in a designated handler and use the Operator SDK API to interact with resources.

Use the Operator SDK CLI to build and generate the Operator deployment manifests.



At a high level, an Operator that uses the Operator SDK processes events for watched resources in an Operator author-defined handler and takes actions to reconcile the state of the application.
Additional resources
Certified Operator Build Guide