Updating a cluster in a disconnected environment without the OpenShift Update Service

Use the following procedures to update a cluster in a disconnected environment without access to the OpenShift Update Service.
Prerequisites
You must have the oc command-line interface (CLI) tool installed.

You must provision a local container image registry with the container images for your update, as described in Mirroring Red Hat OpenShift Container Platform images.

You must have access to the cluster as a user with admin privileges.
See Using RBAC to define and apply permissions.

You must have a recent etcd backup in case your update fails and you must restore your cluster to a previous state.

You have updated all Operators previously installed through Operator Lifecycle Manager (OLM) to a version that is compatible with your target release. Updating the Operators ensures they have a valid update path when the default OperatorHub catalogs switch from the current minor version to the next during a cluster update. See Updating installed Operators for more information on how to check compatibility and, if necessary, update the installed Operators.

You must ensure that all machine config pools (MCPs) are running and not paused. Nodes associated with a paused MCP are skipped during the update process. You can pause the MCPs if you are performing a canary rollout update strategy.

If your cluster uses manually maintained credentials, update the cloud provider resources for the new release. For more information, including how to determine if this is a requirement for your cluster, see Preparing to update a cluster with manually maintained credentials.

If you run an Operator or you have configured any application with the pod disruption budget, you might experience an interruption during the update process. If minAvailable is set to 1 in PodDisruptionBudget, the nodes are drained to apply pending machine configs which might block the eviction process. If several nodes are rebooted, all the pods might run on only one node, and the PodDisruptionBudget field can prevent the node drain.


If you run an Operator or you have configured any application with the pod disruption budget, you might experience an interruption during the update process. If minAvailable is set to 1 in PodDisruptionBudget, the nodes are drained to apply pending machine configs which might block the eviction process. If several nodes are rebooted, all the pods might run on only one node, and the PodDisruptionBudget field can prevent the node drain.
Pausing a MachineHealthCheck resource
During the update process, nodes in the cluster might become temporarily unavailable. In the case of worker nodes, the machine health check might identify such nodes as unhealthy and reboot them. To avoid rebooting such nodes, pause all the MachineHealthCheck resources before updating the cluster.

Install the OpenShift CLI (oc).


To list all the available MachineHealthCheck resources that you want to pause, run the following command:

To pause the machine health checks, add the cluster.x-k8s.io/paused="" annotation to the MachineHealthCheck resource. Run the following command:
Retrieving a release image digest
In order to update a cluster in a disconnected environment using the oc adm upgrade command with the --to-image option, you must reference the sha256 digest that corresponds to your targeted release image.

Run the following command on a device that is connected to the internet:

Copy the sha256 digest for use when updating your cluster.
Updating the disconnected cluster
Update the disconnected cluster to the Red Hat OpenShift Container Platform version that you downloaded the release images for.

If you have a local OpenShift Update Service, you can update by using the connected web console or CLI instructions instead of this procedure.
You mirrored the images for the new release to your registry.

You applied the release image signature ConfigMap for the new release to your cluster.

You obtained the sha256 digest for your targeted release image.

You installed the OpenShift CLI (oc).

You paused all MachineHealthCheck resources.


Update the cluster:


Mirroring Red Hat OpenShift Container Platform images
Understanding image registry repository mirroring
Setting up container registry repository mirroring enables you to perform the following tasks:

Configure your Red Hat OpenShift Container Platform cluster to redirect requests to pull images from a repository on a source image registry and have it resolved by a repository on a mirrored image registry.

Identify multiple mirrored repositories for each target repository, to make sure that if one mirror is down, another can be used.


Repository mirroring in Red Hat OpenShift Container Platform includes the following attributes:

Image pulls are resilient to registry downtimes.

Clusters in disconnected environments can pull images from critical locations, such as quay.io, and have registries behind a company firewall provide the requested images.

A particular order of registries is tried when an image pull request is made, with the permanent registry typically being the last one tried.

The mirror information you enter is added to the /etc/containers/registries.conf file on every node in the Red Hat OpenShift Container Platform cluster.

When a node makes a request for an image from the source repository, it tries each mirrored repository in turn until it finds the requested content. If all mirrors fail, the cluster tries the source repository. If successful, the image is pulled to the node.


Setting up repository mirroring can be done in the following ways:

At Red Hat OpenShift Container Platform installation:

After Red Hat OpenShift Container Platform installation:


Each of these custom resource objects identify the following information:

The source of the container image repository you want to mirror.

A separate entry for each mirror repository you want to offer the content
requested from the source repository.
For new clusters, you can use IDMS, ITMS, and ICSP CRs objects as desired. However, using IDMS and ITMS is recommended.

If you upgraded a cluster, any existing ICSP objects remain stable, and both IDMS and ICSP objects are supported. Workloads using ICSP objects continue to function as expected. However, if you want to take advantage of the fallback policies introduced in the IDMS CRs, you can migrate current workloads to IDMS objects by using the oc adm migrate icsp command as shown in the Converting ImageContentSourcePolicy (ICSP) files for image registry repository mirroring section that follows. Migrating to IDMS objects does not require a cluster reboot.

If your cluster uses an ImageDigestMirrorSet, ImageTagMirrorSet, or ImageContentSourcePolicy object to configure repository mirroring, you can use only global pull secrets for mirrored registries. You cannot add a pull secret to a project.
Configuring image registry repository mirroring
You can create postinstallation mirror configuration custom resources (CR) to redirect image pull requests from a source image registry to a mirrored image registry.

Access to the cluster as a user with the cluster-admin role.


Configure mirrored repositories, by either:

Log in to your Red Hat OpenShift Container Platform cluster.

Create a postinstallation mirror configuration CR, by using one of the following examples:

Create the new object:

To check that the mirrored configuration settings are applied, do the following on one of the nodes.


If the repository mirroring procedure does not work as described, use the following information about how repository mirroring works to help troubleshoot the problem.

The first working mirror is used to supply the pulled image.

The main registry is only used if no other mirror works.

From the system context, the Insecure flags are used as fallback.

The format of the /etc/containers/registries.conf file has changed recently. It is now version 2 and in TOML format.
Converting ImageContentSourcePolicy (ICSP) files for image registry repository mirroring
Using an ImageContentSourcePolicy (ICSP) object to configure repository mirroring is a deprecated feature. This functionality is still included in Red Hat OpenShift Container Platform and continues to be supported; however, it will be removed in a future release of this product and is not recommended for new deployments.

ICSP objects are being replaced by ImageDigestMirrorSet and ImageTagMirrorSet objects to configure repository mirroring. If you have existing YAML files that you used to create ImageContentSourcePolicy objects, you can use the oc adm migrate icsp command to convert those files to an ImageDigestMirrorSet YAML file. The command updates the API to the current version, changes the kind value to ImageDigestMirrorSet, and changes spec.repositoryDigestMirrors to spec.imageDigestMirrors. The rest of the file is not changed.

Because the migration does not change the registries.conf file, the cluster does not need to reboot.

For more information about ImageDigestMirrorSet or ImageTagMirrorSet objects, see "Configuring image registry repository mirroring" in the previous section.

Access to the cluster as a user with the cluster-admin role.

Ensure that you have ImageContentSourcePolicy objects on your cluster.


Use the following command to convert one or more ImageContentSourcePolicy YAML files to an ImageDigestMirrorSet YAML file:

Create the CR object by running the following command:

Remove the ICSP objects after the IDMS objects are rolled out.
Widening the scope of the mirror image catalog to reduce the frequency of cluster node reboots
You can scope the mirrored image catalog at the repository level or the wider registry level. A widely scoped ImageContentSourcePolicy resource reduces the number of times the nodes need to reboot in response to changes to the resource.

To widen the scope of the mirror image catalog in the ImageContentSourcePolicy resource, perform the following procedure.

Install the Red Hat OpenShift Container Platform CLI oc.

Log in as a user with cluster-admin privileges.

Configure a mirrored image catalog for use in your disconnected cluster.


Run the following command, specifying values for <local_registry>, <pull_spec>, and <pull_secret_file>:

Apply the new ImageContentSourcePolicy resource to the cluster:


Verify that oc apply successfully applied the change to ImageContentSourcePolicy:


After you update the ImageContentSourcePolicy resource, Red Hat OpenShift Container Platform deploys the new settings to each node and the cluster starts using the mirrored repository for requests to the source repository.
Additional resources
Using Operator Lifecycle Manager on restricted networks

Machine Config Overview