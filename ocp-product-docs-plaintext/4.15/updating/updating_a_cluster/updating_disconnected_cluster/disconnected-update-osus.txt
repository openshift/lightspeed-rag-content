Updating a cluster in a disconnected environment using the OpenShift Update Service

To get an update experience similar to connected clusters, you can use the following procedures to install and configure the OpenShift Update Service (OSUS) in a disconnected environment.

The following steps outline the high-level workflow on how to update a cluster in a disconnected environment using OSUS:

Configure access to a secured registry.

Update the global cluster pull secret to access your mirror registry.

Install the OSUS Operator.

Create a graph data container image for the OpenShift Update Service.

Install the OSUS application and configure your clusters to use the local OpenShift Update Service.

Perform a supported update procedure from the documentation as you would with a connected cluster.
Using the OpenShift Update Service in a disconnected environment
The OpenShift Update Service (OSUS) provides update recommendations to Red Hat OpenShift Container Platform clusters. Red Hat publicly hosts the OpenShift Update Service, and clusters in a connected environment can connect to the service through public APIs to retrieve update recommendations.

However, clusters in a disconnected environment cannot access these public APIs to retrieve update information. To have a similar update experience in a disconnected environment, you can install and configure the OpenShift Update Service locally so that it is available within the disconnected environment.

A single OSUS instance is capable of serving recommendations to thousands of clusters. OSUS can be scaled horizontally to cater to more clusters by changing the replica value. So for most disconnected use cases, one OSUS instance is enough. For example, Red Hat hosts just one OSUS instance for the entire fleet of connected clusters.

If you want to keep update recommendations separate in different environments, you can run one OSUS instance for each environment. For example, in a case where you have separate test and stage environments, you might not want a cluster in a stage environment to receive update recommendations to version A if that version has not been tested in the test environment yet.

The following sections describe how to install a local OSUS instance and configure it to provide update recommendations to a cluster.

About the OpenShift Update Service

Understanding update channels and releases
Prerequisites
You must have the oc command-line interface (CLI) tool installed.

You must provision a local container image registry with the container images for your update, as described in Mirroring Red Hat OpenShift Container Platform images.
Configuring access to a secured registry for the OpenShift Update Service
If the release images are contained in a registry whose HTTPS X.509 certificate is signed by a custom certificate authority, complete the steps in Configuring additional trust stores for image registry access along with following changes for the update service.

The OpenShift Update Service Operator needs the config map key name updateservice-registry in the registry CA cert.

apiVersion: v1
kind: ConfigMap
metadata:
  name: my-registry-ca
data:
  updateservice-registry: | 1
    -----BEGIN CERTIFICATE-----
    ...
    -----END CERTIFICATE-----
  registry-with-port.example.com..5000: | 2
    -----BEGIN CERTIFICATE-----
    ...
    -----END CERTIFICATE-----
The OpenShift Update Service Operator requires the config map key name updateservice-registry in the registry CA cert.

If the registry has the port, such as registry-with-port.example.com:5000, : should be replaced with &#8230;&#8203;
Updating the global cluster pull secret
You can update the global pull secret for your cluster by either replacing the current pull secret or appending a new pull secret.

The procedure is required when users use a separate registry to store images than the registry used during installation.

You have access to the cluster as a user with the cluster-admin role.


Optional: To append a new pull secret to the existing pull secret, complete the following steps:

Enter the following command to update the global pull secret for your cluster:
Installing the OpenShift Update Service Operator
To install the OpenShift Update Service, you must first install the OpenShift Update Service Operator by using the Red Hat OpenShift Container Platform web console or CLI.

For clusters that are installed in disconnected environments, also known as disconnected clusters, Operator Lifecycle Manager by default cannot access the Red Hat-provided OperatorHub sources hosted on remote registries because those remote sources require full internet connectivity. For more information, see Using Operator Lifecycle Manager on restricted networks.
Installing the OpenShift Update Service Operator by using the web console
You can use the web console to install the OpenShift Update Service Operator.

In the web console, click Operators -> OperatorHub.

Choose OpenShift Update Service from the list of available Operators, and click Install.

Go to Operators -> Installed Operators and verify that the OpenShift Update Service Operator is installed.

Ensure that OpenShift Update Service is listed in the correct namespace with a Status of Succeeded.
Installing the OpenShift Update Service Operator by using the CLI
You can use the OpenShift CLI (oc) to install the OpenShift Update Service Operator.

Create a namespace for the OpenShift Update Service Operator:

Install the OpenShift Update Service Operator by creating the following objects:

Verify the Operator installation:


Installing Operators in your namespace.
Creating the OpenShift Update Service graph data container image
The OpenShift Update Service requires a graph data container image, from which the OpenShift Update Service retrieves information about channel membership and blocked update edges. Graph data is typically fetched directly from the update graph data repository. In environments where an internet connection is unavailable, loading this information from an init container is another way to make the graph data available to the OpenShift Update Service. The role of the init container is to provide a local copy of the graph data, and during pod initialization, the init container copies the data to a volume that is accessible by the service.

The oc-mirror OpenShift CLI (oc) plugin creates this graph data container image in addition to mirroring release images. If you used the oc-mirror plugin to mirror your release images, you can skip this procedure.
Create a Dockerfile, for example, ./Dockerfile, containing the following:

Use the docker file created in the above step to build a graph data container image, for example, registry.example.com/openshift/graph-data:latest:

Push the graph data container image created in the previous step to a repository that is accessible to the OpenShift Update Service, for example, registry.example.com/openshift/graph-data:latest:
Creating an OpenShift Update Service application
You can create an OpenShift Update Service application by using the Red Hat OpenShift Container Platform web console or CLI.

Creating an OpenShift Update Service application by using the web console
You can use the Red Hat OpenShift Container Platform web console to create an OpenShift Update Service application by using the OpenShift Update Service Operator.

The OpenShift Update Service Operator has been installed.

The OpenShift Update Service graph data container image has been created and pushed to a repository that is accessible to the OpenShift Update Service.

The current release and update target releases have been mirrored to a locally accessible registry.


In the web console, click Operators -> Installed Operators.

Choose OpenShift Update Service from the list of installed Operators.

Click the Update Service tab.

Click Create UpdateService.

Enter a name in the Name field, for example, service.

Enter the local pullspec in the Graph Data Image field to the graph data container image created in "Creating the OpenShift Update Service graph data container image", for example, registry.example.com/openshift/graph-data:latest.

In the Releases field, enter the local registry and repository created to contain the release images in "Mirroring the OpenShift Container Platform image repository", for example, registry.example.com/ocp4/openshift4-release-images.

Enter 2 in the Replicas field.

Click Create to create the OpenShift Update Service application.

Verify the OpenShift Update Service application:
Creating an OpenShift Update Service application by using the CLI
You can use the OpenShift CLI (oc) to create an OpenShift Update Service application.

The OpenShift Update Service Operator has been installed.

The OpenShift Update Service graph data container image has been created and pushed to a repository that is accessible to the OpenShift Update Service.

The current release and update target releases have been mirrored to a locally accessible registry.


Configure the OpenShift Update Service target namespace, for example, openshift-update-service:

Configure the name of the OpenShift Update Service application, for example, service:

Configure the local registry and repository for the release images as configured in "Mirroring the Red Hat OpenShift Container Platform image repository", for example, registry.example.com/ocp4/openshift4-release-images:

Set the local pullspec for the graph data image to the graph data container image created in "Creating the OpenShift Update Service graph data container image", for example, registry.example.com/openshift/graph-data:latest:

Create an OpenShift Update Service application object:

Verify the OpenShift Update Service application:


The policy engine route name must not be more than 63 characters based on RFC-1123. If you see ReconcileCompleted status as false  with the reason CreateRouteFailed caused by host must conform to DNS 1123 naming convention and must be no more than 63 characters, try creating the Update Service with a shorter name.
Configuring the Cluster Version Operator (CVO)
After the OpenShift Update Service Operator has been installed and the OpenShift Update Service application has been created, the Cluster Version Operator (CVO) can be updated to pull graph data from the locally installed OpenShift Update Service.

The OpenShift Update Service Operator has been installed.

The OpenShift Update Service graph data container image has been created and pushed to a repository that is accessible to the OpenShift Update Service.

The current release and update target releases have been mirrored to a locally accessible registry.

The OpenShift Update Service application has been created.


Set the OpenShift Update Service target namespace, for example, openshift-update-service:

Set the name of the OpenShift Update Service application, for example, service:

Obtain the policy engine route:

Set the patch for the pull graph data:

Patch the CVO to use the local OpenShift Update Service:


See Configuring the cluster-wide proxy to configure the CA to trust the update server.
Next steps
Before updating your cluster, confirm that the following conditions are met:

The Cluster Version Operator (CVO) is configured to use your locally-installed OpenShift Update Service application.

The release image signature config map for the new release is applied to your cluster.

The current release and update target release images are mirrored to a locally accessible registry.

A recent graph data container image has been mirrored to your local registry.

A recent version of the OpenShift Update Service Operator is installed.


After you configure your cluster to use the locally-installed OpenShift Update Service and local mirror registry, you can use any of the following update methods:

Updating a cluster using the web console

Updating a cluster using the CLI

Performing an EUS-to-EUS update

Performing a canary rollout update

Updating a cluster that includes RHEL compute machines