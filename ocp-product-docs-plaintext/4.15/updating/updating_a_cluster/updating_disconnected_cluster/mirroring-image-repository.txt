Mirroring "Red Hat OpenShift Container Platform" images

You must mirror container images onto a mirror registry before you can update a cluster in a disconnected environment. You can also use this procedure in connected environments to ensure your clusters run only approved container images that have satisfied your organizational controls for external content.

Your mirror registry must be running at all times while the cluster is running.
The following steps outline the high-level workflow on how to mirror images to a mirror registry:

Install the OpenShift CLI (oc) on all devices being used to retrieve and push release images.

Download the registry pull secret and add it to your cluster.

If you use the oc-mirror OpenShift CLI (oc) plugin:

If you use the oc adm release mirror command:


Compared to using the oc adm release mirror command, the oc-mirror plugin has the following advantages:

It can mirror content other than container images.

After mirroring images for the first time, it is easier to update images in the registry.

The oc-mirror plugin provides an automated way to mirror the release payload from Quay, and also builds the latest graph data image for the OpenShift Update Service running in the disconnected environment.
Prerequisites
You must have a container image registry that supports Docker v2-2 in the location that will host the "Red Hat OpenShift Container Platform" cluster, such as Red Hat Quay.
Preparing your mirror host
Before you perform the mirror procedure, you must prepare the host to retrieve content and push it to the remote location.

Installing the OpenShift CLI by downloading the binary
You can install the OpenShift CLI (oc) to interact with "Red Hat OpenShift Container Platform" from a command-line interface. You can install oc on Linux, Windows, or macOS.

If you installed an earlier version of oc, you cannot use it to complete all of the commands in "Red Hat OpenShift Container Platform" "4.15". Download and install the new version of oc. If you are updating a cluster in a disconnected environment, install the oc version that you plan to update to.

You can install the OpenShift CLI (oc) binary on Linux by using the following procedure.

Navigate to the "Red Hat OpenShift Container Platform" downloads page on the Red Hat Customer Portal.

Select the architecture from the Product Variant drop-down list.

Select the appropriate version from the Version drop-down list.

Click Download Now next to the OpenShift v"4.15" Linux Client entry and save the file.

Unpack the archive:

Place the oc binary in a directory that is on your PATH.


After you install the OpenShift CLI, it is available using the oc command:



You can install the OpenShift CLI (oc) binary on Windows by using the following procedure.

Navigate to the "Red Hat OpenShift Container Platform" downloads page on the Red Hat Customer Portal.

Select the appropriate version from the Version drop-down list.

Click Download Now next to the OpenShift v"4.15" Windows Client entry and save the file.

Unzip the archive with a ZIP program.

Move the oc binary to a directory that is on your PATH.


After you install the OpenShift CLI, it is available using the oc command:



You can install the OpenShift CLI (oc) binary on macOS by using the following procedure.

Navigate to the "Red Hat OpenShift Container Platform" downloads page on the Red Hat Customer Portal.

Select the appropriate version from the Version drop-down list.

Click Download Now next to the OpenShift v"4.15" macOS Client entry and save the file.

Unpack and unzip the archive.

Move the oc binary to a directory on your PATH.


After you install the OpenShift CLI, it is available using the oc command:


Installing and using CLI plugins
Configuring credentials that allow images to be mirrored
Create a container image registry credentials file that allows mirroring images from Red Hat to your mirror.

Do not use this image registry credentials file as the pull secret when you install a cluster. If you provide this file when you install cluster, all of the machines in the cluster will have write access to your mirror registry.
This process requires that you have write access to a container image registry on the mirror registry and adds the credentials to a registry pull secret.
You configured a mirror registry to use in your disconnected environment.

You identified an image repository location on your mirror registry to mirror images into.

You provisioned a mirror registry account that allows images to be uploaded to that image repository.


Complete the following steps on the installation host:

Download your registry.redhat.io pull secret from Red Hat OpenShift Cluster Manager.

Make a copy of your pull secret in JSON format:

Optional: If using the oc-mirror plugin, save the file either as ~/.docker/config.json or $XDG_RUNTIME_DIR/containers/auth.json.

Generate the base64-encoded user name and password or token for your mirror registry:

Edit the JSON
file and add a section that describes your registry to it:
Mirroring resources using the oc-mirror plugin
You can use the oc-mirror OpenShift CLI (oc) plugin to mirror images to a mirror registry in your fully or partially disconnected environments. You must run oc-mirror from a system with internet connectivity to download the required images from the official Red Hat registries.

About the oc-mirror plugin
You can use the oc-mirror OpenShift CLI (oc) plugin to mirror all required "Red Hat OpenShift Container Platform" content and other images to your mirror registry by using a single tool. It provides the following features:

Provides a centralized method to mirror "Red Hat OpenShift Container Platform" releases, Operators, helm charts, and other images.

Maintains update paths for "Red Hat OpenShift Container Platform" and Operators.

Uses a declarative image set configuration file to include only the "Red Hat OpenShift Container Platform" releases, Operators, and images that your cluster needs.

Performs incremental mirroring, which reduces the size of future image sets.

Prunes images from the target mirror registry that were excluded from the image set configuration since the previous execution.

Optionally generates supporting artifacts for OpenShift Update Service (OSUS) usage.


When using the oc-mirror plugin, you specify which content to mirror in an image set configuration file. In this YAML file, you can fine-tune the configuration to only include the "Red Hat OpenShift Container Platform" releases and Operators that your cluster needs. This reduces the amount of data that you need to download and transfer. The oc-mirror plugin can also mirror arbitrary helm charts and additional container images to assist users in seamlessly synchronizing their workloads onto mirror registries.

The first time you run the oc-mirror plugin, it populates your mirror registry with the required content to perform your disconnected cluster installation or update. In order for your disconnected cluster to continue receiving updates, you must keep your mirror registry updated. To update your mirror registry, you run the oc-mirror plugin using the same configuration as the first time you ran it. The oc-mirror plugin references the metadata from the storage backend and only downloads what has been released since the last time you ran the tool. This provides update paths for "Red Hat OpenShift Container Platform" and Operators and performs dependency resolution as required.

When using the oc-mirror CLI plugin to populate a mirror registry, any further updates to the mirror registry must be made using the oc-mirror tool.
oc-mirror compatibility and support
The oc-mirror plugin supports mirroring "Red Hat OpenShift Container Platform" payload images and Operator catalogs for "Red Hat OpenShift Container Platform" versions 4.10 and later.

On aarch64, ppc64le, and s390x architectures the oc-mirror plugin is only supported for "Red Hat OpenShift Container Platform" versions 4.14 and later.
Use the latest available version of the oc-mirror plugin regardless of which versions of "Red Hat OpenShift Container Platform" you need to mirror.

If you used the Technology Preview OCI local catalogs feature for the oc-mirror plugin for "Red Hat OpenShift Container Platform" 4.12, you can no longer use the OCI local catalogs feature of the oc-mirror plugin to copy a catalog locally and convert it to OCI format as a first step to mirroring to a fully disconnected cluster.
About the mirror registry
You can mirror the images that are required for "Red Hat OpenShift Container Platform" installation and subsequent product updates to a container mirror registry that supports Docker v2-2, such as Red Hat Quay. If you do not have access to a large-scale container registry, you can use the mirror registry for Red Hat OpenShift, which is a small-scale container registry included with "Red Hat OpenShift Container Platform" subscriptions.

Regardless of your chosen registry, the procedure to mirror content from Red Hat hosted sites on the internet to an isolated image registry is the same. After you mirror the content, you configure each cluster to retrieve this content from your mirror registry.

The OpenShift image registry cannot be used as the target registry because it does not support pushing without a tag, which is required during the mirroring process.
If choosing a container registry that is not the mirror registry for Red Hat OpenShift, it must be reachable by every machine in the clusters that you provision. If the registry is unreachable, installation, updating, or normal operations such as workload relocation might fail. For that reason, you must run mirror registries in a highly available way, and the mirror registries must at least match the production availability of your "Red Hat OpenShift Container Platform" clusters.

When you populate your mirror registry with "Red Hat OpenShift Container Platform" images, you can follow two scenarios. If you have a host that can access both the internet and your mirror registry, but not your cluster nodes, you can directly mirror the content from that machine. This process is referred to as connected mirroring. If you have no such host, you must mirror the images to a file system and then bring that host or removable media into your restricted environment. This process is referred to as disconnected mirroring.

For mirrored registries, to view the source of pulled images, you must review the Trying to access log entry in the CRI-O logs. Other methods to view the image pull source, such as using the crictl images command on a node, show the non-mirrored image name, even though the image is pulled from the mirrored location.

Red Hat does not test third party registries with "Red Hat OpenShift Container Platform".
For information about viewing the CRI-O logs to view the image source, see Viewing the image pull source.
Installing the oc-mirror OpenShift CLI plugin
To use the oc-mirror OpenShift CLI plugin to mirror registry images, you must install the plugin. If you are mirroring image sets in a fully disconnected environment, ensure that you install the oc-mirror plugin on the host with internet access and the host in the disconnected environment with access to the mirror registry.

You have installed the OpenShift CLI (oc).

You have set the umask parameter to 0022 on the operating system that uses oc-mirror.

You have installed the correct binary for the RHEL version that you are using.


Download the oc-mirror CLI plugin.

Extract the archive:

If necessary, update the plugin file to be executable:

Install the oc-mirror CLI plugin by placing the file in your PATH, for example, /usr/local/bin:


Run oc mirror help to verify that the plugin was successfully installed:
Creating the image set configuration
Before you can use the oc-mirror plugin to mirror image sets, you must create an image set configuration file. This image set configuration file defines which "Red Hat OpenShift Container Platform" releases, Operators, and other images to mirror, along with other configuration settings for the oc-mirror plugin.

You must specify a storage backend in the image set configuration file. This storage backend can be a local directory or a registry that supports Docker v2-2. The oc-mirror plugin stores metadata in this storage backend during image set creation.

Do not delete or modify the metadata that is generated by the oc-mirror plugin. You must use the same storage backend every time you run the oc-mirror plugin for the same mirror registry.
You have created a container image registry credentials file. For instructions, see Configuring credentials that allow images to be mirrored.


Use the oc mirror init command to create a template for the image set configuration and save it to a file called imageset-config.yaml:

Edit the file and adjust the settings as necessary:

Save the updated file.


Image set configuration parameters

Image set configuration examples

About the OpenShift Update Service
Mirroring an image set to a mirror registry
You can use the oc-mirror CLI plugin to mirror images to a mirror registry in a partially disconnected environment or in a fully disconnected environment.

The following procedures assume that you already have your mirror registry set up.

Mirroring an image set in a partially disconnected environment
In a partially disconnected environment, you can mirror an image set directly to the target mirror registry.

Mirroring from mirror to mirror
You can use the oc-mirror plugin to mirror an image set directly to a target mirror registry that is accessible during image set creation.

You are required to specify a storage backend in the image set configuration file. This storage backend can be a local directory or a Docker v2 registry. The oc-mirror plugin stores metadata in this storage backend during image set creation.

Do not delete or modify the metadata that is generated by the oc-mirror plugin. You must use the same storage backend every time you run the oc-mirror plugin for the same mirror registry.
You have access to the internet to get the necessary container images.

You have installed the OpenShift CLI (oc).

You have installed the oc-mirror CLI plugin.

You have created the image set configuration file.


Run the oc mirror command to mirror the images from the specified image set configuration to a specified registry:


Navigate into the oc-mirror-workspace/ directory that was generated.

Navigate into the results directory, for example, results-1639608409/.

Verify that YAML files are present for the ImageContentSourcePolicy and CatalogSource resources.


The repositoryDigestMirrors section of the ImageContentSourcePolicy YAML file is used for the install-config.yaml file during installation.
Configure your cluster to use the resources generated by oc-mirror.


Unable to retrieve source image.
Mirroring an image set in a fully disconnected environment
To mirror an image set in a fully disconnected environment, you must first mirror the image set to disk, then mirror the image set file on disk to a mirror.

Mirroring from mirror to disk
You can use the oc-mirror plugin to generate an image set and save the contents to disk. The generated image set can then be transferred to the disconnected environment and mirrored to the target registry.

Depending on the configuration specified in the image set configuration file, using oc-mirror to mirror images might download several hundreds of gigabytes of data to disk.

The initial image set download when you populate the mirror registry is often the largest. Because you only download the images that changed since the last time you ran the command, when you run the oc-mirror plugin again, the generated image set is often smaller.
You are required to specify a storage backend in the image set configuration file. This storage backend can be a local directory or a docker v2 registry. The oc-mirror plugin stores metadata in this storage backend during image set creation.

Do not delete or modify the metadata that is generated by the oc-mirror plugin. You must use the same storage backend every time you run the oc-mirror plugin for the same mirror registry.
You have access to the internet to obtain the necessary container images.

You have installed the OpenShift CLI (oc).

You have installed the oc-mirror CLI plugin.

You have created the image set configuration file.


Run the oc mirror command to mirror the images from the specified image set configuration to disk:


Navigate to your output directory:

Verify that an image set .tar file was created:


Transfer the image set .tar file to the disconnected environment.


Unable to retrieve source image.
Mirroring from disk to mirror
You can use the oc-mirror plugin to mirror the contents of a generated image set to the target mirror registry.

You have installed the OpenShift CLI (oc) in the disconnected environment.

You have installed the oc-mirror CLI plugin in the disconnected environment.

You have generated the image set file by using the oc mirror command.

You have transferred the image set file to the disconnected environment.


Run the oc mirror command to process the image set file on disk and mirror the contents to a target mirror registry:


Navigate into the oc-mirror-workspace/ directory that was generated.

Navigate into the results directory, for example, results-1639608409/.

Verify that YAML files are present for the ImageContentSourcePolicy and CatalogSource resources.


Configure your cluster to use the resources generated by oc-mirror.


Unable to retrieve source image.
Configuring your cluster to use the resources generated by oc-mirror
After you have mirrored your image set to the mirror registry, you must apply the generated ImageContentSourcePolicy, CatalogSource, and release image signature resources into the cluster.

The ImageContentSourcePolicy resource associates the mirror registry with the source registry and redirects image pull requests from the online registries to the mirror registry. The CatalogSource resource is used by Operator Lifecycle Manager (OLM) to retrieve information about the available Operators in the mirror registry. The release image signatures are used to verify the mirrored release images.

You have mirrored the image set to the registry mirror in the disconnected environment.

You have access to the cluster as a user with the cluster-admin role.


Log in to the OpenShift CLI as a user with the cluster-admin role.

Apply the YAML files from the results directory to the cluster by running the following command:

If you mirrored release images, apply the release image signatures to the cluster by running the following command:


Verify that the ImageContentSourcePolicy resources were successfully installed by running the following command:

Verify that the CatalogSource resources were successfully installed by running the following command:
Keeping your mirror registry content updated
After you populate your target mirror registry with the initial image set, you must update it regularly so that it has the latest content. If possible, you can set up a cron job to update the mirror registry on a regular basis.

Update your image set configuration to add or remove "Red Hat OpenShift Container Platform" and Operator releases as necessary. Removed images are pruned from the mirror registry.

About updating your mirror registry content
When you run the oc-mirror plugin again, it generates an image set that only contains new and updated images since the previous execution. Because it only pulls in the differences since the previous image set was created, the generated image set is often smaller and faster to process than the initial image set.

Generated image sets are sequential and must be pushed to the target mirror registry in order. You can derive the sequence number from the file name of the generated image set archive file.

Depending on the settings in your image set configuration, future executions of oc-mirror can mirror additional new and updated images. Review the settings in your image set configuration to ensure that you are retrieving new versions as necessary. For example, you can set the minimum and maximum versions of Operators to mirror if you want to restrict to specific versions. Alternatively, you can set the minimum version as a starting point to mirror, but keep the version range open so you keep receiving new Operator versions on future executions of oc-mirror. Omitting any minimum or maximum version gives you the full version history of an Operator in a channel. Omitting explicitly named channels gives you all releases in all channels of the specified Operator. Omitting any named Operator gives you the entire catalog of all Operators and all their versions ever released.

All these constraints and conditions are evaluated against the publicly released content by Red Hat on every invocation of oc-mirror. This way, it automatically picks up new releases and entirely new Operators. Constraints can be specified by only listing a desired set of Operators, which will not automatically add other newly released Operators into the mirror set. You can also specify a particular release channel, which limits mirroring to just this channel and not any new channels that have been added. This is important for Operator products, such as Red Hat Quay, that use different release channels for their minor releases. Lastly, you can specify a maximum version of a particular Operator, which causes the tool to only mirror the specified version range so that you do not automatically get any newer releases past the maximum version mirrored. In all these cases, you must update the image set configuration file to broaden the scope of the mirroring of Operators to get other Operators, new channels, and newer versions of Operators to be available in your target registry.

It is recommended to align constraints like channel specification or version ranges with the release strategy that a particular Operator has chosen. For example, when the Operator uses a stable channel, you should restrict mirroring to that channel and potentially a minimum version to find the right balance between download volume and getting stable updates regularly. If the Operator chooses a release version channel scheme, for example stable-3.7, you should mirror all releases in that channel. This allows you to keep receiving patch versions of the Operator, for example 3.7.1. You can also regularly adjust the image set configuration to add channels for new product releases, for example stable-3.8.


Images are pruned automatically from the target mirror registry if they are no longer included in the latest image set that was generated and mirrored. This allows you to easily manage and clean up unneeded content and reclaim storage resources.

If there are "Red Hat OpenShift Container Platform" releases or Operator versions that you no longer need, you can modify your image set configuration to exclude them, and they will be pruned from the mirror registry upon mirroring. This can be done by adjusting a minimum or maximum version range setting per Operator in the image set configuration file or by deleting the Operator from the list of Operators to mirror from the catalog. You can also remove entire Operator catalogs or entire "Red Hat OpenShift Container Platform" releases from the configuration file.

If there are no new or updated images to mirror, the excluded images are not pruned from the target mirror registry. Additionally, if an Operator publisher removes an Operator version from a channel, the removed versions are pruned from the target mirror registry.
To disable automatic pruning of images from the target mirror registry, pass the --skip-pruning flag to the oc mirror command.
Updating your mirror registry content
After you publish the initial image set to the mirror registry, you can use the oc-mirror plugin to keep your disconnected clusters updated.

Depending on your image set configuration, oc-mirror automatically detects newer releases of "Red Hat OpenShift Container Platform" and your selected Operators that have been released after you completed the initial mirror. It is recommended to run oc-mirror at regular intervals, for example in a nightly cron job, to receive product and security updates on a timely basis.

You have used the oc-mirror plugin to mirror the initial image set to your mirror registry.

You have access to the storage backend that was used for the initial execution of the oc-mirror plugin.


If necessary, update your image set configuration file to pick up new "Red Hat OpenShift Container Platform" and Operator versions. See Image set configuration examples for example mirroring use cases.

Follow the same steps that you used to mirror your initial image set to the mirror registry. For instructions, see Mirroring an image set in a partially disconnected environment or Mirroring an image set in a fully disconnected environment.

Configure your cluster to use the resources generated by oc-mirror.


Image set configuration examples

Mirroring an image set in a partially disconnected environment

Mirroring an image set in a fully disconnected environment

Configuring your cluster to use the resources generated by oc-mirror
Performing a dry run
You can use oc-mirror to perform a dry run, without actually mirroring any images. This allows you to review the list of images that would be mirrored, as well as any images that would be pruned from the mirror registry. A dry run also allows you to catch any errors with your image set configuration early or use the generated list of images with other tools to carry out the mirroring operation.

You have access to the internet to obtain the necessary container images.

You have installed the OpenShift CLI (oc).

You have installed the oc-mirror CLI plugin.

You have created the image set configuration file.


Run the oc mirror command with the --dry-run flag to perform a dry run:

Navigate into the workspace directory that was generated:

Review the mapping.txt file that was generated.

Review the pruning-plan.json file that was generated.
Including local OCI Operator catalogs
While mirroring "Red Hat OpenShift Container Platform" releases, Operator catalogs, and additional images from a registry to a partially disconnected cluster, you can include Operator catalog images from a local file-based catalog on disk. The local catalog must be in the Open Container Initiative (OCI) format.

The local catalog and its contents are mirrored to your target mirror registry based on the filtering information in the image set configuration file.

When mirroring local OCI catalogs, any "Red Hat OpenShift Container Platform" releases or additional images that you want to mirror along with the local OCI-formatted catalog must be pulled from a registry.

You cannot mirror OCI catalogs along with an oc-mirror image set file on disk.
One example use case for using the OCI feature is if you have a CI/CD system building an OCI catalog to a location on disk, and you want to mirror that OCI catalog along with an "Red Hat OpenShift Container Platform" release to your mirror registry.

If you used the Technology Preview OCI local catalogs feature for the oc-mirror plugin for "Red Hat OpenShift Container Platform" 4.12, you can no longer use the OCI local catalogs feature of the oc-mirror plugin to copy a catalog locally and convert it to OCI format as a first step to mirroring to a fully disconnected cluster.
You have access to the internet to obtain the necessary container images.

You have installed the OpenShift CLI (oc).

You have installed the oc-mirror CLI plugin.


Create the image set configuration file and adjust the settings as necessary.

Run the oc mirror command to mirror the OCI catalog to a target mirror registry:


Configure your cluster to use the resources generated by oc-mirror.


File-based catalogs
Image set configuration parameters
The oc-mirror plugin requires an image set configuration file that defines what images to mirror. The following table lists the available parameters for the ImageSetConfiguration resource.


Using the minVersion and maxVersion properties to filter for a specific Operator version range can result in a multiple channel heads error. The error message states that there are multiple channel heads. This is because when the filter is applied, the update graph of the Operator is truncated.

Operator Lifecycle Manager requires that every Operator channel contains versions that form an update graph with exactly one end point, that is, the latest version of the Operator. When the filter range is applied, that graph can turn into two or more separate graphs or a graph that has more than one end point.

To avoid this error, do not filter out the latest version of an Operator. If you still run into the error, depending on the Operator, either the maxVersion property must be increased or the minVersion property must be decreased. Because every Operator graph can be different, you might need to adjust these values until the error resolves.
Image set configuration examples
The following ImageSetConfiguration file examples show the configuration for various mirroring use cases.


The following ImageSetConfiguration file uses a local storage backend and includes all "Red Hat OpenShift Container Platform" versions along the shortest update path from the minimum version of 4.11.37 to the maximum version of 4.12.15.

apiVersion: mirror.openshift.io/v1alpha2
kind: ImageSetConfiguration
storageConfig:
  local:
    path: /home/user/metadata
mirror:
  platform:
    channels:
      - name: stable-4.12
        minVersion: 4.11.37
        maxVersion: 4.12.15
        shortestPath: true

The following ImageSetConfiguration file uses a registry storage backend and includes all "Red Hat OpenShift Container Platform" versions starting at a minimum version of 4.13.4 to the latest version in the channel. On every invocation of oc-mirror with this image set configuration, the latest release of the stable-4.13 channel is evaluated, so running oc-mirror at regular intervals ensures that you automatically receive the latest releases of "Red Hat OpenShift Container Platform" images.

By setting the value of platform.architectures to multi, you can ensure that the mirroring is supported for multi-architecture releases.

apiVersion: mirror.openshift.io/v1alpha2
kind: ImageSetConfiguration
storageConfig:
  registry:
    imageURL: example.com/mirror/oc-mirror-metadata
    skipTLS: false
mirror:
  platform:
    architectures:
      - "multi"
    channels:
      - name: stable-4.13
        minVersion: 4.13.4
        maxVersion: 4.13.6

The following ImageSetConfiguration file uses a local storage backend and includes only the Red Hat Advanced Cluster Security for Kubernetes Operator, versions starting at 4.0.1 and later in the stable channel.

When you specify a minimum or maximum version range, you might not receive all Operator versions in that range.

By default, oc-mirror excludes any versions that are skipped or replaced by a newer version in the Operator Lifecycle Manager (OLM) specification. Operator versions that are skipped might be affected by a CVE or contain bugs. Use a newer version instead. For more information on skipped and replaced versions, see Creating an update graph with OLM.

To receive all Operator versions in a specified range, you can set the mirror.operators.full field to true.
apiVersion: mirror.openshift.io/v1alpha2
kind: ImageSetConfiguration
storageConfig:
  local:
    path: /home/user/metadata
mirror:
  operators:
    - catalog: registry.redhat.io/redhat/redhat-operator-index:v"4.15"
      packages:
        - name: rhacs-operator
          channels:
          - name: stable
            minVersion: 4.0.1
To specify a maximum version instead of the latest, set the mirror.operators.packages.channels.maxVersion field.

The following ImageSetConfiguration file uses a local storage backend and includes the Nutanix CSI Operator, the OpenShift Update Service (OSUS) graph image, and an additional Red Hat Universal Base Image (UBI).

kind: ImageSetConfiguration
apiVersion: mirror.openshift.io/v1alpha2
storageConfig:
  registry:
    imageURL: mylocalregistry/ocp-mirror/openshift4
    skipTLS: false
mirror:
  platform:
    channels:
    - name: stable-4.11
      type: ocp
    graph: true
  operators:
  - catalog: registry.redhat.io/redhat/certified-operator-index:v"4.15"
    packages:
    - name: nutanixcsioperator
      channels:
      - name: stable
  additionalImages:
  - name: registry.redhat.io/ubi9/ubi:latest

The following ImageSetConfiguration file includes the stable-5.7 and stable channels for the OpenShift Elasticsearch Operator. Even if only the packages from the stable-5.7 channel are needed, the stable channel must also be included in the ImageSetConfiguration file, because it is the default channel for the Operator. You must always include the default channel for the Operator package even if you do not use the bundles in that channel.

You can find the default channel by running the following command: oc mirror list operators --catalog=<catalog_name> --package=<package_name>.
apiVersion: mirror.openshift.io/v1alpha2
kind: ImageSetConfiguration
storageConfig:
  registry:
    imageURL: example.com/mirror/oc-mirror-metadata
    skipTLS: false
mirror:
  operators:
  - catalog: registry.redhat.io/redhat/redhat-operator-index:v"4.15"
    packages:
    - name: elasticsearch-operator
      channels:
      - name: stable-5.7
      - name: stable

The following ImageSetConfiguration file sets the mirror.operators.full field to true to include all versions for an entire Operator catalog.

apiVersion: mirror.openshift.io/v1alpha2
kind: ImageSetConfiguration
storageConfig:
  registry:
    imageURL: example.com/mirror/oc-mirror-metadata
    skipTLS: false
mirror:
  operators:
    - catalog: registry.redhat.io/redhat/redhat-operator-index:v"4.15"
      full: true

The following ImageSetConfiguration file includes the channel heads for an entire Operator catalog.

By default, for each Operator in the catalog, oc-mirror includes the latest Operator version (channel head) from the default channel. If you want to mirror all Operator versions, and not just the channel heads, you must set the mirror.operators.full field to true.

This example also uses the targetCatalog field to specify an alternative namespace and name to mirror the catalog as.

apiVersion: mirror.openshift.io/v1alpha2
kind: ImageSetConfiguration
storageConfig:
  registry:
    imageURL: example.com/mirror/oc-mirror-metadata
    skipTLS: false
mirror:
  operators:
  - catalog: registry.redhat.io/redhat/redhat-operator-index:v"4.15"
    targetCatalog: my-namespace/my-operator-catalog

The following ImageSetConfiguration file uses a registry storage backend and includes helm charts and an additional Red Hat Universal Base Image (UBI).

apiVersion: mirror.openshift.io/v1alpha2
kind: ImageSetConfiguration
archiveSize: 4
storageConfig:
  registry:
    imageURL: example.com/mirror/oc-mirror-metadata
    skipTLS: false
mirror:
 platform:
   architectures:
     - "s390x"
   channels:
     - name: stable-"4.15"
 operators:
   - catalog: registry.redhat.io/redhat/redhat-operator-index:v"4.15"
 helm:
   repositories:
     - name: redhat-helm-charts
       url: https://raw.githubusercontent.com/redhat-developer/redhat-helm-charts/master
       charts:
         - name: ibm-mongodb-enterprise-helm
           version: 0.2.0
 additionalImages:
   - name: registry.redhat.io/ubi9/ubi:latest
Command reference for oc-mirror
The following tables describe the oc mirror subcommands and flags:
Mirroring images using the oc adm release mirror command
To avoid excessive memory usage by the OpenShift Update Service application, you must mirror release images to a separate repository as described in the following procedure.
You configured a mirror registry to use in your disconnected environment and can access the certificate and credentials that you configured.

You downloaded the pull secret from Red Hat OpenShift Cluster Manager and modified it to include authentication to your mirror repository.

If you use self-signed certificates, you have specified a Subject Alternative Name in the certificates.


Use the Red Hat "Red Hat OpenShift Container Platform" Update Graph visualizer and update planner to plan an update from one version to another. The OpenShift Update Graph provides channel graphs and a way to confirm that there is an update path between your current and intended cluster versions.

Set the required environment variables:

Review the images and configuration manifests to mirror:

Mirror the version images to the mirror registry.