Installing a cluster on Azure using ARM templates

In Red Hat OpenShift Container Platform version 4.15, you can install a cluster on Microsoft Azure by using infrastructure that you provide.

Several Azure Resource Manager (ARM) templates are provided to assist in completing these steps or to help model your own.

The steps for performing a user-provisioned infrastructure installation are provided as an example only. Installing a cluster with infrastructure you provide requires knowledge of the cloud provider and the installation process of Red Hat OpenShift Container Platform. Several ARM templates are provided to assist in completing these steps or to help model your own. You are also free to create the required resources through other methods; the templates are just an example.
Prerequisites
You reviewed details about the Red Hat OpenShift Container Platform installation and update processes.

You read the documentation on selecting a cluster installation method and preparing it for users.

You configured an Azure account to host the cluster.

You downloaded the Azure CLI and installed it on your computer. See Install the Azure CLI in the Azure documentation. The documentation below was last tested using version 2.38.0 of the Azure CLI. Azure CLI commands might perform differently based on the version you use.

If the cloud identity and access management (IAM) APIs are not accessible in your environment, or if you do not want to store an administrator-level credential secret in the kube-system namespace, see Alternatives to storing administrator-level secrets in the kube-system project.

If you use a firewall and plan to use the Telemetry service, you configured the firewall to allow the sites that your cluster requires access to.
Internet access for Red Hat OpenShift Container Platform
In Red Hat OpenShift Container Platform 4.15, you require access to the internet to install your cluster.

You must have internet access to:

Access https://console.redhat.com/openshift [OpenShift Cluster Manager Hybrid Cloud Console] to download the installation program and perform subscription management. If the cluster has internet access and you do not disable Telemetry, that service automatically entitles your cluster.

Access Quay.io to obtain the packages that are required to install your cluster.

Obtain the packages that are required to perform cluster updates.
Configuring your Azure project
Before you can install Red Hat OpenShift Container Platform, you must configure an Azure project to host it.

All Azure resources that are available through public endpoints are subject to resource name restrictions, and you cannot create resources that use certain terms. For a list of terms that Azure restricts, see Resolve reserved resource name errors in the Azure documentation.
Azure account limits
The Red Hat OpenShift Container Platform cluster uses a number of Microsoft Azure components, and the default Azure subscription and service limits, quotas, and constraints affect your ability to install Red Hat OpenShift Container Platform clusters.

Default limits vary by offer category types, such as Free Trial and Pay-As-You-Go, and by series, such as Dv2, F, and G. For example, the default for Enterprise Agreement subscriptions is 350 cores.

Check the limits for your subscription type and if necessary, increase quota limits for your account before you install a default cluster on Azure.
The following table summarizes the Azure components whose limits can impact your ability to install and run Red Hat OpenShift Container Platform clusters.


Optimizing storage
Configuring a public DNS zone in Azure
To install Red Hat OpenShift Container Platform, the Microsoft Azure account you use must have a dedicated public hosted DNS zone in your account. This zone must be authoritative for the domain. This service provides cluster DNS resolution and name lookup for external connections to the cluster.

Identify your domain, or subdomain, and registrar. You can transfer an
existing domain and registrar or obtain a new one through Azure or another source.

If you are using an existing domain and registrar, migrate its DNS to Azure. See
Migrate an active DNS name to Azure App Service
in the Azure documentation.

Configure DNS for your domain. Follow the steps in the
Tutorial: Host your domain in Azure DNS
in the Azure documentation to create a public hosted zone for your domain or
subdomain, extract the new authoritative name servers, and update the registrar
records for the name servers that your domain uses.

If you use a subdomain, follow your company's procedures to add its delegation
records to the parent domain.


You can view Azure's DNS solution by visiting this example for creating DNS zones.
Increasing Azure account limits
To increase an account limit, file a support request on the Azure portal.

You can increase only one type of quota per support request.
From the Azure portal, click Help + support in the lower left corner.

Click New support request and then select the required values:

On the Problem Details page, provide the required information for your quota
increase:

Click Next: Review + create and then click Create.
Certificate signing requests management
Because your cluster has limited access to automatic machine management when you use infrastructure that you provision, you must provide a mechanism for approving cluster certificate signing requests (CSRs) after installation. The kube-controller-manager only approves the kubelet client CSRs. The machine-approver cannot guarantee the validity of a serving certificate that is requested by using kubelet credentials because it cannot confirm that the correct machine issued the request. You must determine and implement a method of verifying the validity of the kubelet serving certificate requests and approving them.
Recording the subscription and tenant IDs
The installation program requires the subscription and tenant IDs that are associated with your Azure account. You can use the Azure CLI to gather this information.

You have installed or updated the Azure CLI.


Log in to the Azure CLI by running the following command:

Ensure that you are using the right subscription:

If you are not using the right subscription:

Record the id and tenantId parameter values from the output. You require these values to install an Red Hat OpenShift Container Platform cluster.
Supported identities to access Azure resources
An Red Hat OpenShift Container Platform cluster requires an Azure identity to create and manage Azure resources. As such, you need one of the following types of identities to complete the installation:

A service principal

A system-assigned managed identity

A user-assigned managed identity
Required Azure permissions for user-provisioned infrastructure
The installation program requires access to an Azure service principal or managed identity with the necessary permissions to deploy the cluster and to maintain its daily operation. These permissions must be granted to the Azure subscription that is associated with the identity.

The following options are available to you:

You can assign the identity the Contributor and User Access Administrator roles. Assigning these roles is the quickest way to grant all of the required permissions.

If your organization's security policies require a more restrictive set of permissions, you can create a custom role with the necessary permissions.


The following permissions are required for creating an Red Hat OpenShift Container Platform cluster on Microsoft Azure.

Microsoft.Authorization/policies/audit/action

Microsoft.Authorization/policies/auditIfNotExists/action

Microsoft.Authorization/roleAssignments/read

Microsoft.Authorization/roleAssignments/write
Microsoft.Compute/images/read

Microsoft.Compute/images/write

Microsoft.Compute/images/delete

Microsoft.Compute/availabilitySets/read

Microsoft.Compute/disks/beginGetAccess/action

Microsoft.Compute/disks/delete

Microsoft.Compute/disks/read

Microsoft.Compute/disks/write

Microsoft.Compute/galleries/images/read

Microsoft.Compute/galleries/images/versions/read

Microsoft.Compute/galleries/images/versions/write

Microsoft.Compute/galleries/images/write

Microsoft.Compute/galleries/read

Microsoft.Compute/galleries/write

Microsoft.Compute/snapshots/read

Microsoft.Compute/snapshots/write

Microsoft.Compute/snapshots/delete

Microsoft.Compute/virtualMachines/delete

Microsoft.Compute/virtualMachines/powerOff/action

Microsoft.Compute/virtualMachines/read

Microsoft.Compute/virtualMachines/write

Microsoft.Compute/virtualMachines/deallocate/action
Microsoft.ManagedIdentity/userAssignedIdentities/assign/action

Microsoft.ManagedIdentity/userAssignedIdentities/read

Microsoft.ManagedIdentity/userAssignedIdentities/write
Microsoft.Network/dnsZones/A/write

Microsoft.Network/dnsZones/CNAME/write

Microsoft.Network/dnszones/CNAME/read

Microsoft.Network/dnszones/read

Microsoft.Network/loadBalancers/backendAddressPools/join/action

Microsoft.Network/loadBalancers/backendAddressPools/read

Microsoft.Network/loadBalancers/backendAddressPools/write

Microsoft.Network/loadBalancers/read

Microsoft.Network/loadBalancers/write

Microsoft.Network/networkInterfaces/delete

Microsoft.Network/networkInterfaces/join/action

Microsoft.Network/networkInterfaces/read

Microsoft.Network/networkInterfaces/write

Microsoft.Network/networkSecurityGroups/join/action

Microsoft.Network/networkSecurityGroups/read

Microsoft.Network/networkSecurityGroups/securityRules/delete

Microsoft.Network/networkSecurityGroups/securityRules/read

Microsoft.Network/networkSecurityGroups/securityRules/write

Microsoft.Network/networkSecurityGroups/write

Microsoft.Network/privateDnsZones/A/read

Microsoft.Network/privateDnsZones/A/write

Microsoft.Network/privateDnsZones/A/delete

Microsoft.Network/privateDnsZones/SOA/read

Microsoft.Network/privateDnsZones/read

Microsoft.Network/privateDnsZones/virtualNetworkLinks/read

Microsoft.Network/privateDnsZones/virtualNetworkLinks/write

Microsoft.Network/privateDnsZones/write

Microsoft.Network/publicIPAddresses/delete

Microsoft.Network/publicIPAddresses/join/action

Microsoft.Network/publicIPAddresses/read

Microsoft.Network/publicIPAddresses/write

Microsoft.Network/virtualNetworks/join/action

Microsoft.Network/virtualNetworks/read

Microsoft.Network/virtualNetworks/subnets/join/action

Microsoft.Network/virtualNetworks/subnets/read

Microsoft.Network/virtualNetworks/subnets/write

Microsoft.Network/virtualNetworks/write
Microsoft.Resourcehealth/healthevent/Activated/action

Microsoft.Resourcehealth/healthevent/InProgress/action

Microsoft.Resourcehealth/healthevent/Pending/action

Microsoft.Resourcehealth/healthevent/Resolved/action

Microsoft.Resourcehealth/healthevent/Updated/action
Microsoft.Resources/subscriptions/resourceGroups/read

Microsoft.Resources/subscriptions/resourcegroups/write
Microsoft.Resources/tags/write
Microsoft.Storage/storageAccounts/blobServices/read

Microsoft.Storage/storageAccounts/blobServices/containers/write

Microsoft.Storage/storageAccounts/fileServices/read

Microsoft.Storage/storageAccounts/fileServices/shares/read

Microsoft.Storage/storageAccounts/fileServices/shares/write

Microsoft.Storage/storageAccounts/fileServices/shares/delete

Microsoft.Storage/storageAccounts/listKeys/action

Microsoft.Storage/storageAccounts/read

Microsoft.Storage/storageAccounts/write
Microsoft.Resources/deployments/read

Microsoft.Resources/deployments/write

Microsoft.Resources/deployments/validate/action

Microsoft.Resources/deployments/operationstatuses/read
Microsoft.Compute/availabilitySets/write
Microsoft.MarketplaceOrdering/offertypes/publishers/offers/plans/agreements/read

Microsoft.MarketplaceOrdering/offertypes/publishers/offers/plans/agreements/write
Microsoft.Compute/diskEncryptionSets/read

Microsoft.Compute/diskEncryptionSets/write

Microsoft.Compute/diskEncryptionSets/delete

Microsoft.KeyVault/vaults/read

Microsoft.KeyVault/vaults/write

Microsoft.KeyVault/vaults/delete

Microsoft.KeyVault/vaults/deploy/action

Microsoft.KeyVault/vaults/keys/read

Microsoft.KeyVault/vaults/keys/write

Microsoft.Features/providers/features/register/action
The following permissions are required for deleting an Red Hat OpenShift Container Platform cluster on Microsoft Azure.

Microsoft.Authorization/roleAssignments/delete
Microsoft.Compute/disks/delete

Microsoft.Compute/galleries/delete

Microsoft.Compute/galleries/images/delete

Microsoft.Compute/galleries/images/versions/delete

Microsoft.Compute/virtualMachines/delete

Microsoft.Compute/images/delete
Microsoft.ManagedIdentity/userAssignedIdentities/delete
Microsoft.Network/dnszones/read

Microsoft.Network/dnsZones/A/read

Microsoft.Network/dnsZones/A/delete

Microsoft.Network/dnsZones/CNAME/read

Microsoft.Network/dnsZones/CNAME/delete

Microsoft.Network/loadBalancers/delete

Microsoft.Network/networkInterfaces/delete

Microsoft.Network/networkSecurityGroups/delete

Microsoft.Network/privateDnsZones/read

Microsoft.Network/privateDnsZones/A/read

Microsoft.Network/privateDnsZones/delete

Microsoft.Network/privateDnsZones/virtualNetworkLinks/delete

Microsoft.Network/publicIPAddresses/delete

Microsoft.Network/virtualNetworks/delete
Microsoft.Resourcehealth/healthevent/Activated/action

Microsoft.Resourcehealth/healthevent/Resolved/action

Microsoft.Resourcehealth/healthevent/Updated/action
Microsoft.Resources/subscriptions/resourcegroups/delete
Microsoft.Storage/storageAccounts/delete

Microsoft.Storage/storageAccounts/listKeys/action
To install Red Hat OpenShift Container Platform on Azure, you must scope the permissions related to resource group creation to your subscription. After the resource group is created, you can scope the rest of the permissions to the created resource group. If the public DNS zone is present in a different resource group, then the network DNS zone related permissions must always be applied to your subscription.

You can scope all the permissions to your subscription when deleting an Red Hat OpenShift Container Platform cluster.
Using Azure managed identities
The installation program requires an Azure identity to complete the installation. You can use either a system-assigned or user-assigned managed identity.

If you are unable to use a managed identity, you can use a service principal.

If you are using a system-assigned managed identity, enable it on the virtual machine that you will run the installation program from.

If you are using a user-assigned managed identity:

Verify that the required permissions are assigned to the managed identity.
Creating a service principal
The installation program requires an Azure identity to complete the installation. You can use a service principal.

If you are unable to use a service principal, you can use a managed identity.

You have installed or updated the Azure CLI.

You have an Azure subscription ID.

If you are not going to assign the Contributor and User Administrator Access roles to the service principal, you have created a custom role with the required Azure permissions.


Create the service principal for your account by running the following command:

Record the values of the appId and password parameters from the output. You require these values when installing the cluster.

If you applied the Contributor role to your service principal, assign the User Administrator Access role by running the following command:


For more information about CCO modes, see About the Cloud Credential Operator.
Supported Azure regions
The installation program dynamically generates the list of available Microsoft Azure regions based on your subscription.


australiacentral (Australia Central)

australiaeast (Australia East)

australiasoutheast (Australia South East)

brazilsouth (Brazil South)

canadacentral (Canada Central)

canadaeast (Canada East)

centralindia (Central India)

centralus (Central US)

eastasia (East Asia)

eastus (East US)

eastus2 (East US 2)

francecentral (France Central)

germanywestcentral (Germany West Central)

israelcentral (Israel Central)

italynorth (Italy North)

japaneast (Japan East)

japanwest (Japan West)

koreacentral (Korea Central)

koreasouth (Korea South)

northcentralus (North Central US)

northeurope (North Europe)

norwayeast (Norway East)

polandcentral (Poland Central)

qatarcentral (Qatar Central)

southafricanorth (South Africa North)

southcentralus (South Central US)

southeastasia (Southeast Asia)

southindia (South India)

swedencentral (Sweden Central)

switzerlandnorth (Switzerland North)

uaenorth (UAE North)

uksouth (UK South)

ukwest (UK West)

westcentralus (West Central US)

westeurope (West Europe)

westindia (West India)

westus (West US)

westus2 (West US 2)

westus3 (West US 3)



Support for the following Microsoft Azure Government (MAG) regions was added in Red Hat OpenShift Container Platform version 4.6:

usgovtexas (US Gov Texas)

usgovvirginia (US Gov Virginia)


You can reference all available MAG regions in the Azure documentation. Other provided MAG regions are expected to work with Red Hat OpenShift Container Platform, but have not been tested.
Requirements for a cluster with user-provisioned infrastructure
For a cluster that contains user-provisioned infrastructure, you must deploy all of the required machines.

This section describes the requirements for deploying Red Hat OpenShift Container Platform on user-provisioned infrastructure.

Required machines for cluster installation
The smallest Red Hat OpenShift Container Platform clusters require the following hosts:


To maintain high availability of your cluster, use separate physical hosts for these cluster machines.
The bootstrap and control plane machines must use Red Hat Enterprise Linux CoreOS (RHCOS) as the operating system. However, the compute machines can choose between Red Hat Enterprise Linux CoreOS (RHCOS), Red Hat Enterprise Linux (RHEL) 8.6 and later.

Note that RHCOS is based on Red Hat Enterprise Linux (RHEL) 9.2 and inherits all of its hardware certifications and requirements. See Red Hat Enterprise Linux technology capabilities and limits.
Minimum resource requirements for cluster installation
Each cluster machine must meet the following minimum requirements:


One vCPU is equivalent to one physical core when simultaneous multithreading (SMT), or hyperthreading, is not enabled. When enabled, use the following formula to calculate the corresponding ratio: (threads per core × cores) × sockets = vCPUs.

Red Hat OpenShift Container Platform and Kubernetes are sensitive to disk performance, and faster storage is recommended, particularly for etcd on the control plane nodes which require a 10 ms p99 fsync duration. Note that on many cloud platforms, storage size and IOPS scale together, so you might need to over-allocate storage volume to obtain sufficient performance.

As with all user-provisioned installations, if you choose to use RHEL compute machines in your cluster, you take responsibility for all operating system life cycle management and maintenance, including performing system updates, applying patches, and completing all other required tasks. Use of RHEL 7 compute machines is deprecated and has been removed in Red Hat OpenShift Container Platform 4.10 and later.
You are required to use Azure virtual machines that have the premiumIO parameter set to true.
If an instance type for your platform meets the minimum requirements for cluster machines, it is supported to use in Red Hat OpenShift Container Platform.

Optimizing storage
Tested instance types for Azure
The following Microsoft Azure instance types have been tested with Red Hat OpenShift Container Platform.

https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_x86_64.md
Tested instance types for Azure on 64-bit ARM infrastructures
The following Microsoft Azure ARM64 instance types have been tested with Red Hat OpenShift Container Platform.

https://raw.githubusercontent.com/openshift/installer/master/docs/user/azure/tested_instance_types_aarch64.md
Using the Azure Marketplace offering
Using the Azure Marketplace offering lets you deploy an Red Hat OpenShift Container Platform cluster, which is billed on pay-per-use basis (hourly, per core) through Azure, while still being supported directly by Red Hat.

To deploy an Red Hat OpenShift Container Platform cluster using the Azure Marketplace offering, you must first obtain the Azure Marketplace image. The installation program uses this image to deploy worker nodes. When obtaining your image, consider the following:

While the images are the same, the Azure Marketplace publisher is different depending on your region. If you are located in North America, specify redhat as the publisher. If you are located in EMEA, specify redhat-limited as the publisher.

The offer includes a rh-ocp-worker SKU and a rh-ocp-worker-gen1 SKU. The rh-ocp-worker SKU represents a Hyper-V generation version 2 VM image. The default instance types used in Red Hat OpenShift Container Platform are version 2 compatible. If you plan to use an instance type that is only version 1 compatible, use the image associated with the rh-ocp-worker-gen1 SKU. The rh-ocp-worker-gen1 SKU represents a Hyper-V version 1 VM image.


Installing images with the Azure marketplace is not supported on clusters with 64-bit ARM instances.
You have installed the Azure CLI client (az).

Your Azure account is entitled for the offer and you have logged into this account with the Azure CLI client.


Display all of the available Red Hat OpenShift Container Platform images by running one of the following commands:

Inspect the image for your offer by running one of the following commands:

Review the terms of the offer by running one of the following commands:

Accept the terms of the offering by running one of the following commands:

Record the image details of your offer. If you use the Azure Resource Manager (ARM) template to deploy your worker nodes:
Obtaining the installation program
Before you install Red Hat OpenShift Container Platform, download the installation file on  the host you are using for installation.

You have a computer that runs Linux or macOS, with 500 MB of local disk space.


Access the Infrastructure Provider page on the OpenShift Cluster Manager site. If you have a Red Hat account, log in with your credentials. If you do not, create an account.

Select your infrastructure provider.

Navigate to the page for your installation type, download the installation program that corresponds with your host operating system and architecture, and place the file in the directory where you will store the installation configuration files.

Extract the installation program. For example, on a computer that uses a Linux
operating system, run the following command:

Download your installation https://console.redhat.com/openshift/install/pull-secret [pull secret from the Red Hat OpenShift Cluster Manager]. This pull secret allows you to authenticate with the services that are provided by the included authorities, including Quay.io, which serves the container images for Red Hat OpenShift Container Platform components.
Generating a key pair for cluster node SSH access
During an Red Hat OpenShift Container Platform installation, you can provide an SSH public key to the installation program. The key is passed to the Red Hat Enterprise Linux CoreOS (RHCOS) nodes through their Ignition config files and is used to authenticate SSH access to the nodes. The key is added to the ~/.ssh/authorized_keys list for the core user on each node, which enables password-less authentication.

After the key is passed to the nodes, you can use the key pair to SSH in to the RHCOS nodes as the user core. To access the nodes through SSH, the private key identity must be managed by SSH for your local user.

If you want to SSH in to your cluster nodes to perform installation debugging or disaster recovery, you must provide the SSH public key during the installation process. The ./openshift-install gather command also requires the SSH public key to be in place on the cluster nodes.

Do not skip this procedure in production environments, where disaster recovery and debugging is required.
You must use a local key, not one that you configured with platform-specific approaches such as AWS key pairs.
If you do not have an existing SSH key pair on your local machine to use for authentication onto your cluster nodes, create one. For example, on a computer that uses a Linux operating system, run the following command:

View the public SSH key:

Add the SSH private key identity to the SSH agent for your local user, if it has not already been added. SSH agent management of the key is required for password-less SSH authentication onto your cluster nodes, or if you want to use the ./openshift-install gather command.

Add your SSH private key to the ssh-agent:


When you install Red Hat OpenShift Container Platform, provide the SSH public key to the installation program.
If you install a cluster on infrastructure that you provision, you must provide the key to the installation program.
Creating the installation files for Azure
To install Red Hat OpenShift Container Platform on Microsoft Azure using user-provisioned infrastructure, you must generate the files that the installation program needs to deploy your cluster and modify them so that the cluster creates only the machines that it will use. You generate and customize the install-config.yaml file, Kubernetes manifests, and Ignition config files. You also have the option to first set up a separate var partition during the preparation phases of installation.

Optional: Creating a separate /var partition
It is recommended that disk partitioning for Red Hat OpenShift Container Platform be left to the installer. However, there are cases where you might want to create separate partitions in a part of the filesystem that you expect to grow.

Red Hat OpenShift Container Platform supports the addition of a single partition to attach storage to either the /var partition or a subdirectory of /var. For example:

/var/lib/containers: Holds container-related content that can grow as more images and containers are added to a system.

/var/lib/etcd: Holds data that you might want to keep separate for purposes such as performance optimization of etcd storage.

/var: Holds data that you might want to keep separate for purposes such as auditing.


Storing the contents of a /var directory separately makes it easier to grow storage for those areas as needed and reinstall Red Hat OpenShift Container Platform at a later date and keep that data intact. With this method, you will not have to pull all your containers again, nor will you have to copy massive log files when you update systems.

Because /var must be in place before a fresh installation of Red Hat Enterprise Linux CoreOS (RHCOS), the following procedure sets up the separate /var partition by creating a machine config manifest that is inserted during the openshift-install preparation phases of an Red Hat OpenShift Container Platform installation.

If you follow the steps to create a separate /var partition in this procedure, it is not necessary to create the Kubernetes manifest and Ignition config files again as described later in this section.
Create a directory to hold the Red Hat OpenShift Container Platform installation files:

Run openshift-install to create a set of files in the manifest and openshift subdirectories. Answer the system questions as you are prompted:

Optional: Confirm that the installation program created manifests in the clusterconfig/openshift directory:

Create a Butane config that configures the additional partition. For example, name the file $HOME/clusterconfig/98-var-partition.bu, change the disk device name to the name of the storage device on the worker systems, and set the storage size as appropriate. This example places the /var directory on a separate partition:

Create a manifest from the Butane config and save it to the clusterconfig/openshift directory. For example, run the following command:

Run openshift-install again to create Ignition configs from a set of files in the manifest and openshift subdirectories:


Now you can use the Ignition config files as input to the installation procedures to install Red Hat Enterprise Linux CoreOS (RHCOS) systems.
Creating the installation configuration file
You can customize the Red Hat OpenShift Container Platform cluster you install on Microsoft Azure.

You have the Red Hat OpenShift Container Platform installation program and the pull secret for your cluster.

You have an Azure subscription ID and tenant ID.

If you are installing the cluster using a service principal, you have its application ID and password.

If you are installing the cluster using a system-assigned managed identity, you have enabled it on the virtual machine that you will run the installation program from.

If you are installing the cluster using a user-assigned managed identity, you have met these prerequisites:


Optional: If you have run the installation program on this computer before, and want to use an alternative service principal or managed identity, go to the ~/.azure/ directory and delete the osServicePrincipal.json configuration file.

Create the install-config.yaml file.

Modify the install-config.yaml file. You can find more information about the available parameters in the "Installation configuration parameters" section.

Back up the install-config.yaml file so that you can use
it to install multiple clusters.


If previously not detected, the installation program creates an osServicePrincipal.json configuration file and stores this file in the ~/.azure/ directory on your computer. This ensures that the installation program can load the profile when it is creating an Red Hat OpenShift Container Platform cluster on the target platform.
Configuring the cluster-wide proxy during installation
Production environments can deny direct access to the internet and instead have an HTTP or HTTPS proxy available. You can configure a new Red Hat OpenShift Container Platform cluster to use a proxy by configuring the proxy settings in the install-config.yaml file.

You have an existing install-config.yaml file.

You reviewed the sites that your cluster requires access to and determined whether any of them need to bypass the proxy. By default, all cluster egress traffic is proxied, including calls to hosting cloud provider APIs. You added sites to the Proxy object's spec.noProxy field to bypass the proxy if necessary.


Edit your install-config.yaml file and add the proxy settings. For example:

Save the file and reference it when installing Red Hat OpenShift Container Platform.


The installation program creates a cluster-wide proxy that is named cluster that uses the proxy settings in the provided install-config.yaml file. If no proxy settings are provided, a cluster Proxy object is still created, but it will have a nil spec.

Only the Proxy object named cluster is supported, and no additional proxies can be created.
Exporting common variables for ARM templates
You must export a common set of variables that are used with the provided Azure Resource Manager (ARM) templates used to assist in completing a user-provided infrastructure install on Microsoft Azure.

Specific ARM templates can also require additional exported variables, which are detailed in their related procedures.
Obtain the Red Hat OpenShift Container Platform installation program and the pull secret for your cluster.


Export common variables found in the install-config.yaml to be used by the
provided ARM templates:

Export the kubeadmin credentials:
Creating the Kubernetes manifest and Ignition config files
Because you must modify some cluster definition files and manually start the cluster machines, you must generate the Kubernetes manifest and Ignition config files that the cluster needs to configure the machines.

The installation configuration file transforms into the Kubernetes manifests. The manifests wrap into the Ignition configuration files, which are later used to configure the cluster machines.

The Ignition config files that the Red Hat OpenShift Container Platform installation program generates contain certificates that expire after 24 hours, which are then renewed at that time. If the cluster is shut down before renewing the certificates and the cluster is later restarted after the 24 hours have elapsed, the cluster automatically recovers the expired certificates. The exception is that you must manually approve the pending node-bootstrapper certificate signing requests (CSRs) to recover kubelet certificates. See the documentation for Recovering from expired control plane certificates for more information.

It is recommended that you use Ignition config files within 12 hours after they are generated because the 24-hour certificate rotates from 16 to 22 hours after the cluster is installed. By using the Ignition config files within 12 hours, you can avoid installation failure if the certificate update runs during installation.
You obtained the Red Hat OpenShift Container Platform installation program.

You created the install-config.yaml installation configuration file.


Change to the directory that contains the Red Hat OpenShift Container Platform installation program and generate the Kubernetes manifests for the cluster:

Remove the Kubernetes manifest files that define the control plane machines:

Remove the Kubernetes manifest files that define the control plane machine set:

Remove the Kubernetes manifest files that define the worker machines:

Check that the mastersSchedulable parameter in the <installation_directory>/manifests/cluster-scheduler-02-config.yml Kubernetes manifest file is set to false. This setting prevents pods from being scheduled on the control plane machines:

Optional: If you do not want
the Ingress Operator
to create DNS records on your behalf, remove the privateZone and publicZone
sections from the <installation_directory>/manifests/cluster-dns-02-config.yml DNS configuration file:

When configuring Azure on user-provisioned infrastructure, you must export
some common variables defined in the manifest files to use later in the Azure
Resource Manager (ARM) templates:

To create the Ignition configuration files, run the following command from the directory that contains the installation program:
Creating the Azure resource group
You must create a Microsoft Azure resource group and an identity for that resource group. These are both used during the installation of your Red Hat OpenShift Container Platform cluster on Azure.

Configure an Azure account.

Generate the Ignition config files for your cluster.


Create the resource group in a supported Azure region:

Create an Azure identity for the resource group:

Grant the Contributor role to the Azure identity:
Uploading the RHCOS cluster image and bootstrap Ignition config file
The Azure client does not support deployments based on files existing locally. You must copy and store the RHCOS virtual hard disk (VHD) cluster image and bootstrap Ignition config file in a storage container so they are accessible during deployment.

Configure an Azure account.

Generate the Ignition config files for your cluster.


Create an Azure storage account to store the VHD cluster image:

Export the storage account key as an environment variable:

Export the URL of the RHCOS VHD to an environment variable:

Create the storage container for the VHD:

Copy the local VHD to a blob:

Create a blob storage container and upload the generated bootstrap.ign file:
Example for creating DNS zones
DNS records are required for clusters that use user-provisioned infrastructure. You should choose the DNS strategy that fits your scenario.

For this example, Azure's DNS solution is used, so you will create a new public DNS zone for external (internet) visibility and a private DNS zone for internal cluster resolution.

The public DNS zone is not required to exist in the same resource group as the cluster deployment and might already exist in your organization for the desired base domain. If that is the case, you can skip creating the public DNS zone; be sure the installation config you generated earlier reflects that scenario.
Configure an Azure account.

Generate the Ignition config files for your cluster.


Create the new public DNS zone in the resource group exported in the
BASE_DOMAIN_RESOURCE_GROUP environment variable:

Create the private DNS zone in the same resource group as the rest of this
deployment:


You can learn more about configuring a public DNS zone in Azure by visiting that section.
Creating a VNet in Azure
You must create a virtual network (VNet) in Microsoft Azure for your Red Hat OpenShift Container Platform cluster to use. You can customize the VNet to meet your requirements. One way to create the VNet is to modify the provided Azure Resource Manager (ARM) template.

If you do not use the provided ARM template to create your Azure infrastructure, you must review the provided information and manually create the infrastructure. If your cluster does not initialize correctly, you might have to contact Red Hat support with your installation logs.
Configure an Azure account.

Generate the Ignition config files for your cluster.


Copy the template from the ARM template for the VNet section of this topic
and save it as 01_vnet.json in your cluster's installation directory. This template describes the
VNet that your cluster requires.

Create the deployment by using the az CLI:

Link the VNet template to the private DNS zone:


ARM template for the VNet
You can use the following Azure Resource Manager (ARM) template to deploy the VNet that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/01_vnet.json[role=include]
Deploying the RHCOS cluster image for the Azure infrastructure
You must use a valid Red Hat Enterprise Linux CoreOS (RHCOS) image for Microsoft Azure for your Red Hat OpenShift Container Platform nodes.

Configure an Azure account.

Generate the Ignition config files for your cluster.

Store the RHCOS virtual hard disk (VHD) cluster image in an Azure storage container.

Store the bootstrap Ignition config file in an Azure storage container.


Copy the template from the ARM template for image storage section of
this topic and save it as 02_storage.json in your cluster's installation directory. This template
describes the image storage that your cluster requires.

Export the RHCOS VHD blob URL as a variable:

Deploy the cluster image:


ARM template for image storage
You can use the following Azure Resource Manager (ARM) template to deploy the stored Red Hat Enterprise Linux CoreOS (RHCOS) image that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/02_storage.json[role=include]
Networking requirements for user-provisioned infrastructure
All the Red Hat Enterprise Linux CoreOS (RHCOS) machines require networking to be configured in initramfs during boot to fetch their Ignition config files.

Network connectivity requirements
You must configure the network connectivity between machines to allow Red Hat OpenShift Container Platform cluster components to communicate. Each machine must be able to resolve the hostnames of all other machines in the cluster.

This section provides details about the ports that are required.

In connected Red Hat OpenShift Container Platform environments, all nodes are required to have internet access to pull images for platform containers and provide telemetry data to Red Hat.
Creating networking and load balancing components in Azure
You must configure networking and load balancing in Microsoft Azure for your Red Hat OpenShift Container Platform cluster to use. One way to create these components is to modify the provided Azure Resource Manager (ARM) template.

If you do not use the provided ARM template to create your Azure infrastructure, you must review the provided information and manually create the infrastructure. If your cluster does not initialize correctly, you might have to contact Red Hat support with your installation logs.
Configure an Azure account.

Generate the Ignition config files for your cluster.

Create and configure a VNet and associated subnets in Azure.


Copy the template from the ARM template for the network and load balancers
section of this topic and save it as 03_infra.json in your cluster's installation directory. This
template describes the networking and load balancing objects that your cluster
requires.

Create the deployment by using the az CLI:

Create an api DNS record in the public zone for the API public load
balancer. The ${BASE_DOMAIN_RESOURCE_GROUP} variable must point to the
resource group where the public DNS zone exists.


ARM template for the network and load balancers
You can use the following Azure Resource Manager (ARM) template to deploy the networking objects and load balancers that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/03_infra.json[role=include]
Creating the bootstrap machine in Azure
You must create the bootstrap machine in Microsoft Azure to use during Red Hat OpenShift Container Platform cluster initialization. One way to create this machine is to modify the provided Azure Resource Manager (ARM) template.

If you do not use the provided ARM template to create your bootstrap machine, you must review the provided information and manually create the infrastructure. If your cluster does not initialize correctly, you might have to contact Red Hat support with your installation logs.
Configure an Azure account.

Generate the Ignition config files for your cluster.

Create and configure a VNet and associated subnets in Azure.

Create and configure networking and load balancers in Azure.

Create control plane and compute roles.


Copy the template from the ARM template for the bootstrap machine section of
this topic and save it as 04_bootstrap.json in your cluster's installation directory. This template
describes the bootstrap machine that your cluster requires.

Export the bootstrap URL variable:

Export the bootstrap ignition variable:

Create the deployment by using the az CLI:


ARM template for the bootstrap machine
You can use the following Azure Resource Manager (ARM) template to deploy the bootstrap machine that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/04_bootstrap.json[role=include]
Creating the control plane machines in Azure
You must create the control plane machines in Microsoft Azure for your cluster to use. One way to create these machines is to modify the provided Azure Resource Manager (ARM) template.

By default, Microsoft Azure places control plane machines and compute machines in a pre-set availability zone. You can manually set an availability zone for a compute node or control plane node. To do this, modify a vendor's Azure Resource Manager (ARM) template by specifying each of your availability zones in the zones parameter of the virtual machine resource.
If you do not use the provided ARM template to create your control plane machines, you must review the provided information and manually create the infrastructure. If your cluster does not initialize correctly, consider contacting Red Hat support with your installation logs.

Configure an Azure account.

Generate the Ignition config files for your cluster.

Create and configure a VNet and associated subnets in Azure.

Create and configure networking and load balancers in Azure.

Create control plane and compute roles.

Create the bootstrap machine.


Copy the template from the ARM template for control plane machines
section of this topic and save it as 05_masters.json in your cluster's installation directory.
This template describes the control plane machines that your cluster requires.

Export the following variable needed by the control plane machine deployment:

Create the deployment by using the az CLI:


ARM template for control plane machines
You can use the following Azure Resource Manager (ARM) template to deploy the control plane machines that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/05_masters.json[role=include]
Wait for bootstrap completion and remove bootstrap resources in Azure
After you create all of the required infrastructure in Microsoft Azure, wait for the bootstrap process to complete on the machines that you provisioned by using the Ignition config files that you generated with the installation program.

Configure an Azure account.

Generate the Ignition config files for your cluster.

Create and configure a VNet and associated subnets in Azure.

Create and configure networking and load balancers in Azure.

Create control plane and compute roles.

Create the bootstrap machine.

Create the control plane machines.


Change to the directory that contains the installation program and run the
following command:

Delete the bootstrap resources:


If you do not delete the bootstrap server, installation may not succeed due to API traffic being routed to the bootstrap server.
Creating additional worker machines in Azure
You can create worker machines in Microsoft Azure for your cluster to use by launching individual instances discretely or by automated processes outside the cluster, such as auto scaling groups. You can also take advantage of the built-in cluster scaling mechanisms and the machine API in Red Hat OpenShift Container Platform.

If you are installing a three-node cluster, skip this step. A three-node cluster consists of three control plane machines, which also act as compute machines.
In this example, you manually launch one instance by using the Azure Resource Manager (ARM) template. Additional instances can be launched by including additional resources of type 06_workers.json in the file.

By default, Microsoft Azure places control plane machines and compute machines in a pre-set availability zone. You can manually set an availability zone for a compute node or control plane node. To do this, modify a vendor's ARM template by specifying each of your availability zones in the zones parameter of the virtual machine resource.
If you do not use the provided ARM template to create your control plane machines, you must review the provided information and manually create the infrastructure. If your cluster does not initialize correctly, consider contacting Red Hat support with your installation logs.

Configure an Azure account.

Generate the Ignition config files for your cluster.

Create and configure a VNet and associated subnets in Azure.

Create and configure networking and load balancers in Azure.

Create control plane and compute roles.

Create the bootstrap machine.

Create the control plane machines.


Copy the template from the ARM template for worker machines
section of this topic and save it as 06_workers.json in your cluster's installation directory. This
template describes the worker machines that your cluster requires.

Export the following variable needed by the worker machine deployment:

Create the deployment by using the az CLI:


ARM template for worker machines
You can use the following Azure Resource Manager (ARM) template to deploy the worker machines that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/azure/06_workers.json[role=include]
Installing the OpenShift CLI by downloading the binary
You can install the OpenShift CLI (`oc`) to interact with Red Hat OpenShift Container Platform from a command-line interface. You can install oc on Linux, Windows, or macOS.

If you installed an earlier version of oc, you cannot use it to complete all of the commands in Red Hat OpenShift Container Platform 4.15. Download and install the new version of oc.

You can install the OpenShift CLI (oc) binary on Linux by using the following procedure.

Navigate to the Red Hat OpenShift Container Platform downloads page on the Red Hat Customer Portal.

Select the architecture from the Product Variant drop-down list.

Select the appropriate version from the Version drop-down list.

Click Download Now next to the OpenShift v4.15 Linux Client entry and save the file.

Unpack the archive:

Place the oc binary in a directory that is on your PATH.


After you install the OpenShift CLI, it is available using the oc command:



You can install the OpenShift CLI (oc) binary on Windows by using the following procedure.

Navigate to the Red Hat OpenShift Container Platform downloads page on the Red Hat Customer Portal.

Select the appropriate version from the Version drop-down list.

Click Download Now next to the OpenShift v4.15 Windows Client entry and save the file.

Unzip the archive with a ZIP program.

Move the oc binary to a directory that is on your PATH.


After you install the OpenShift CLI, it is available using the oc command:



You can install the OpenShift CLI (oc) binary on macOS by using the following procedure.

Navigate to the Red Hat OpenShift Container Platform downloads page on the Red Hat Customer Portal.

Select the appropriate version from the Version drop-down list.

Click Download Now next to the OpenShift v4.15 macOS Client entry and save the file.

Unpack and unzip the archive.

Move the oc binary to a directory on your PATH.


After you install the OpenShift CLI, it is available using the oc command:
Logging in to the cluster by using the CLI
You can log in to your cluster as a default system user by exporting the cluster kubeconfig file. The kubeconfig file contains information about the cluster that is used by the CLI to connect a client to the correct cluster and API server. The file is specific to a cluster and is created during Red Hat OpenShift Container Platform installation.

You deployed an Red Hat OpenShift Container Platform cluster.

You installed the oc CLI.


Export the kubeadmin credentials:

Verify you can run oc commands successfully using the exported configuration:
Approving the certificate signing requests for your machines
When you add machines to a cluster, two pending certificate signing requests (CSRs) are generated for each machine that you added. You must confirm that these CSRs are approved or, if necessary, approve them yourself. The client requests must be approved first, followed by the server requests.

You added machines to your cluster.


Confirm that the cluster recognizes the machines:

Review the pending CSRs and ensure that you see the client requests with the Pending or Approved status for each machine that you added to the cluster:

If the CSRs were not approved, after all of the pending CSRs for the machines you added are in Pending status, approve the CSRs for your cluster machines:

Now that your client requests are approved, you must review the server requests for each machine that you added to the cluster:

If the remaining CSRs are not approved, and are in the Pending status, approve the CSRs for your cluster machines:

After all client and server CSRs have been approved, the machines have the Ready status. Verify this by running the following command:


For more information on CSRs, see Certificate Signing Requests.
Adding the Ingress DNS records
If you removed the DNS Zone configuration when creating Kubernetes manifests and generating Ignition configs, you must manually create DNS records that point at the Ingress load balancer. You can create either a wildcard *.apps.{baseDomain}. or specific records. You can use A, CNAME, and other records per your requirements.

You deployed an Red Hat OpenShift Container Platform cluster on Microsoft Azure by using infrastructure that you provisioned.

Install the OpenShift CLI (oc).

Install or update the Azure CLI.


Confirm the Ingress router has created a load balancer and populated the
EXTERNAL-IP field:

Export the Ingress router IP as a variable:

Add a *.apps record to the public DNS zone.

Add a *.apps record to the private DNS zone:


If you prefer to add explicit domains instead of using a wildcard, you can create entries for each of the cluster's current routes:

$ oc get --all-namespaces -o jsonpath='{range .items[*]}{range .status.ingress[*]}{.host}{"\n"}{end}{end}' routes
oauth-openshift.apps.cluster.basedomain.com
console-openshift-console.apps.cluster.basedomain.com
downloads-openshift-console.apps.cluster.basedomain.com
alertmanager-main-openshift-monitoring.apps.cluster.basedomain.com
prometheus-k8s-openshift-monitoring.apps.cluster.basedomain.com
Completing an Azure installation on user-provisioned infrastructure
After you start the Red Hat OpenShift Container Platform installation on Microsoft Azure user-provisioned infrastructure, you can monitor the cluster events until the cluster is ready.

Deploy the bootstrap machine for an Red Hat OpenShift Container Platform cluster on user-provisioned Azure infrastructure.

Install the oc CLI and log in.


Complete the cluster installation:
Telemetry access for Red Hat OpenShift Container Platform
In Red Hat OpenShift Container Platform 4.15, the Telemetry service, which runs by default to provide metrics about cluster health and the success of updates, requires internet access. If your cluster is connected to the internet, Telemetry runs automatically, and your cluster is registered to https://console.redhat.com/openshift [OpenShift Cluster Manager Hybrid Cloud Console].

After you confirm that your https://console.redhat.com/openshift [OpenShift Cluster Manager Hybrid Cloud Console] inventory is correct, either maintained automatically by Telemetry or manually by using OpenShift Cluster Manager, use subscription watch to track your Red Hat OpenShift Container Platform subscriptions at the account or multi-cluster level.

See About remote health monitoring for more information about the Telemetry service