Installing a cluster on OpenStack with customizations

In Red Hat OpenShift Container Platform version 4.15, you can install a customized cluster on OpenStack. To customize the installation, modify parameters in the install-config.yaml before you install the cluster.
Prerequisites
You reviewed details about the Red Hat OpenShift Container Platform installation and update processes.

You read the documentation on selecting a cluster installation method and preparing it for users.

You verified that Red Hat OpenShift Container Platform 4.15 is compatible with your OpenStack version by using the Supported platforms for OpenShift clusters section. You can also compare platform support across different versions by viewing the Red Hat OpenShift Container Platform on OpenStack support matrix.

You have a storage service installed in OpenStack, such as block storage (Cinder) or object storage (Swift). Object storage is the recommended storage technology for Red Hat OpenShift Container Platform registry cluster deployment. For more information, see Optimizing storage.

You understand performance and scalability practices for cluster scaling, control plane sizing, and etcd. For more information, see Recommended practices for scaling the cluster.

You have the metadata service enabled in OpenStack.
Resource guidelines for installing Red Hat OpenShift Container Platform on OpenStack
To support an Red Hat OpenShift Container Platform installation, your OpenStack quota must meet the following requirements:


A cluster might function with fewer than recommended resources, but its performance is not guaranteed.

If OpenStack object storage (Swift) is available and operated by a user account with the swiftoperator role, it is used as the default backend for the Red Hat OpenShift Container Platform image registry. In this case, the volume storage requirement is 175 GB. Swift space requirements vary depending on the size of the image registry.
By default, your security group and security group rule quotas might be low. If you encounter problems, run openstack quota set --secgroups 3 --secgroup-rules 60 <project> as an administrator to increase them.
An Red Hat OpenShift Container Platform deployment comprises control plane machines, compute machines, and a bootstrap machine.

Control plane machines
By default, the Red Hat OpenShift Container Platform installation process creates three control plane machines.

Each machine requires:

An instance from the OpenStack quota

A port from the OpenStack quota

A flavor with at least 16 GB memory and 4 vCPUs

At least 100 GB storage space from the OpenStack quota
Compute machines
By default, the Red Hat OpenShift Container Platform installation process creates three compute machines.

Each machine requires:

An instance from the OpenStack quota

A port from the OpenStack quota

A flavor with at least 8 GB memory and 2 vCPUs

At least 100 GB storage space from the OpenStack quota


Compute machines host the applications that you run on Red Hat OpenShift Container Platform; aim to run as many as you can.
Bootstrap machine
During installation, a bootstrap machine is temporarily provisioned to stand up the control plane. After the production control plane is ready, the bootstrap machine is deprovisioned.

The bootstrap machine requires:

An instance from the OpenStack quota

A port from the OpenStack quota

A flavor with at least 16 GB memory and 4 vCPUs

At least 100 GB storage space from the OpenStack quota
Load balancing requirements for user-provisioned infrastructure
Before you install Red Hat OpenShift Container Platform, you can provision your own API and application ingress load balancing infrastructure to use in place of the default, internal load balancing solution. In production scenarios, you can deploy the API and application Ingress load balancers separately so that you can scale the load balancer infrastructure for each in isolation.

If you want to deploy the API and application Ingress load balancers with a Red Hat Enterprise Linux (RHEL) instance, you must purchase the RHEL subscription separately.
The load balancing infrastructure must meet the following requirements:

API load balancer: Provides a common endpoint for users, both human and machine, to interact with and configure the platform. Configure the following conditions:

Application Ingress load balancer: Provides an ingress point for application traffic flowing in from outside the cluster. A working configuration for the Ingress router is required for an Red Hat OpenShift Container Platform cluster.


Example load balancer configuration for clusters that are deployed with user-managed load balancers
This section provides an example API and application Ingress load balancer configuration that meets the load balancing requirements for clusters that are deployed with user-managed load balancers. The sample is an /etc/haproxy/haproxy.cfg configuration for an HAProxy load balancer. The example is not meant to provide advice for choosing one load balancing solution over another.

In the example, the same load balancer is used for the Kubernetes API and application ingress traffic. In production scenarios, you can deploy the API and application ingress load balancers separately so that you can scale the load balancer infrastructure for each in isolation.

If you are using HAProxy as a load balancer and SELinux is set to enforcing, you must ensure that the HAProxy service can bind to the configured TCP port by running setsebool -P haproxy_connect_any=1.
global
  log         127.0.0.1 local2
  pidfile     /var/run/haproxy.pid
  maxconn     4000
  daemon
defaults
  mode                    http
  log                     global
  option                  dontlognull
  option http-server-close
  option                  redispatch
  retries                 3
  timeout http-request    10s
  timeout queue           1m
  timeout connect         10s
  timeout client          1m
  timeout server          1m
  timeout http-keep-alive 10s
  timeout check           10s
  maxconn                 3000
listen api-server-6443 1
  bind *:6443
  mode tcp
  option  httpchk GET /readyz HTTP/1.0
  option  log-health-checks
  balance roundrobin
  server bootstrap bootstrap.ocp4.example.com:6443 verify none check check-ssl inter 10s fall 2 rise 3 backup 2
  server master0 master0.ocp4.example.com:6443 weight 1 verify none check check-ssl inter 10s fall 2 rise 3
  server master1 master1.ocp4.example.com:6443 weight 1 verify none check check-ssl inter 10s fall 2 rise 3
  server master2 master2.ocp4.example.com:6443 weight 1 verify none check check-ssl inter 10s fall 2 rise 3
listen machine-config-server-22623 3
  bind *:22623
  mode tcp
  server bootstrap bootstrap.ocp4.example.com:22623 check inter 1s backup 2
  server master0 master0.ocp4.example.com:22623 check inter 1s
  server master1 master1.ocp4.example.com:22623 check inter 1s
  server master2 master2.ocp4.example.com:22623 check inter 1s
listen ingress-router-443 4
  bind *:443
  mode tcp
  balance source
  server compute0 compute0.ocp4.example.com:443 check inter 1s
  server compute1 compute1.ocp4.example.com:443 check inter 1s
listen ingress-router-80 5
  bind *:80
  mode tcp
  balance source
  server compute0 compute0.ocp4.example.com:80 check inter 1s
  server compute1 compute1.ocp4.example.com:80 check inter 1s
Port 6443 handles the Kubernetes API traffic and points to the control plane machines.

The bootstrap entries must be in place before the Red Hat OpenShift Container Platform cluster installation and they must be removed after the bootstrap process is complete.

Port 22623 handles the machine config server traffic and points to the control plane machines.

Port 443 handles the HTTPS traffic and points to the machines that run the Ingress Controller pods. The Ingress Controller pods run on the compute machines by default.

Port 80 handles the HTTP traffic and points to the machines that run the Ingress Controller pods. The Ingress Controller pods run on the compute machines by default.
If you are using HAProxy as a load balancer, you can check that the haproxy process is listening on ports 6443, 22623, 443, and 80 by running netstat -nltupe on the HAProxy node.
Internet access for Red Hat OpenShift Container Platform
In Red Hat OpenShift Container Platform 4.15, you require access to the internet to install your cluster.

You must have internet access to:

Access https://console.redhat.com/openshift [OpenShift Cluster Manager Hybrid Cloud Console] to download the installation program and perform subscription management. If the cluster has internet access and you do not disable Telemetry, that service automatically entitles your cluster.

Access Quay.io to obtain the packages that are required to install your cluster.

Obtain the packages that are required to perform cluster updates.
Enabling Swift on OpenStack
Swift is operated by a user account with the swiftoperator role. Add the role to an account before you run the installation program.

If the OpenStack object storage service, commonly known as Swift, is available, Red Hat OpenShift Container Platform uses it as the image registry storage. If it is unavailable, the installation program relies on the OpenStack block storage service, commonly known as Cinder.

If Swift is present and you want to use it, you must enable access to it. If it is not present, or if you do not want to use it, skip this section.
OpenStack 17 sets the rgw_max_attr_size parameter of Ceph RGW to 256 characters. This setting causes issues with uploading container images to the Red Hat OpenShift Container Platform registry. You must set the value of rgw_max_attr_size to at least 1024 characters.

Before installation, check if your OpenStack deployment is affected by this problem. If it is, reconfigure Ceph RGW.
You have a OpenStack administrator account on the target environment.

The Swift service is installed.

On Ceph RGW, the account in url option is enabled.


To enable Swift on OpenStack:

As an administrator in the OpenStack CLI, add the swiftoperator role to the account that will access Swift:


Your OpenStack deployment can now use Swift for the image registry.
Configuring an image registry with custom storage on clusters that run on OpenStack
After you install a cluster on OpenStack, you can use a Cinder volume that is in a specific availability zone for registry storage.

Create a YAML file that specifies the storage class and availability zone to use. For example:

From a command line, apply the configuration:

Create a YAML file that specifies a persistent volume claim (PVC) that uses your storage class and the openshift-image-registry namespace. For example:

From a command line, apply the configuration:

Replace the original persistent volume claim in the image registry configuration with the new claim:


To confirm that the registry is using the resources that you defined:

Verify that the PVC claim value is identical to the name that you provided in your PVC definition:

Verify that the status of the PVC is Bound:
Verifying external network access
The Red Hat OpenShift Container Platform installation process requires external network access. You must provide an external network value to it, or deployment fails. Before you begin the process, verify that a network with the external router type exists in OpenStack.

Configure OpenStack's networking service to have DHCP agents forward instances' DNS queries


Using the OpenStack CLI, verify the name and ID of the 'External' network:


A network with an external router type appears in the network list. If at least one does not, see Creating a default floating IP network and Creating a default provider network.

If the external network's CIDR range overlaps one of the default network ranges, you must change the matching network ranges in the install-config.yaml file before you start the installation process.

The default network ranges are:
If the installation program finds multiple networks with the same name, it sets one of them at random. To avoid this behavior, create unique names for resources in OpenStack.
If the Neutron trunk service plugin is enabled, a trunk port is created by default. For more information, see Neutron trunk port.
Defining parameters for the installation program
The Red Hat OpenShift Container Platform installation program relies on a file that is called clouds.yaml. The file describes OpenStack configuration parameters, including the project name, log in information, and authorization service URLs.

Create the clouds.yaml file:

If your OpenStack installation uses self-signed certificate authority (CA) certificates for endpoint authentication:

Place the clouds.yaml file in one of the following locations:
Setting OpenStack Cloud Controller Manager options
Optionally, you can edit the OpenStack Cloud Controller Manager (CCM) configuration for your cluster. This configuration controls how Red Hat OpenShift Container Platform interacts with OpenStack.

For a complete list of configuration parameters, see the "OpenStack Cloud Controller Manager reference guide" page in the "Installing on OpenStack" documentation.

If you have not already generated manifest files for your cluster, generate them by running the following command:

In a text editor, open the cloud-provider configuration manifest file. For example:

Modify the options according to the CCM reference guide.

Save the changes to the file and proceed with installation.
Obtaining the installation program
Before you install Red Hat OpenShift Container Platform, download the installation file on  the host you are using for installation.

You have a computer that runs Linux or macOS, with 500 MB of local disk space.


Access the Infrastructure Provider page on the OpenShift Cluster Manager site. If you have a Red Hat account, log in with your credentials. If you do not, create an account.

Select your infrastructure provider.

Navigate to the page for your installation type, download the installation program that corresponds with your host operating system and architecture, and place the file in the directory where you will store the installation configuration files.

Extract the installation program. For example, on a computer that uses a Linux
operating system, run the following command:

Download your installation https://console.redhat.com/openshift/install/pull-secret [pull secret from the Red Hat OpenShift Cluster Manager]. This pull secret allows you to authenticate with the services that are provided by the included authorities, including Quay.io, which serves the container images for Red Hat OpenShift Container Platform components.
Creating the installation configuration file
You can customize the Red Hat OpenShift Container Platform cluster you install on OpenStack.

You have the Red Hat OpenShift Container Platform installation program and the pull secret for your cluster.


Create the install-config.yaml file.

Modify the install-config.yaml file. You can find more information about the available parameters in the "Installation configuration parameters" section.

Back up the install-config.yaml file so that you can use
it to install multiple clusters.


Installation configuration parameters for OpenStack


Configuring the cluster-wide proxy during installation
Production environments can deny direct access to the internet and instead have an HTTP or HTTPS proxy available. You can configure a new Red Hat OpenShift Container Platform cluster to use a proxy by configuring the proxy settings in the install-config.yaml file.

You have an existing install-config.yaml file.

You reviewed the sites that your cluster requires access to and determined whether any of them need to bypass the proxy. By default, all cluster egress traffic is proxied, including calls to hosting cloud provider APIs. You added sites to the Proxy object's spec.noProxy field to bypass the proxy if necessary.


Edit your install-config.yaml file and add the proxy settings. For example:

Save the file and reference it when installing Red Hat OpenShift Container Platform.


The installation program creates a cluster-wide proxy that is named cluster that uses the proxy settings in the provided install-config.yaml file. If no proxy settings are provided, a cluster Proxy object is still created, but it will have a nil spec.

Only the Proxy object named cluster is supported, and no additional proxies can be created.
Custom subnets in OpenStack deployments
Optionally, you can deploy a cluster on a OpenStack subnet of your choice. The subnet's GUID is passed as the value of platform.openstack.machinesSubnet in the install-config.yaml file.

This subnet is used as the cluster's primary subnet. By default, nodes and ports are created on it. You can create nodes and ports on a different OpenStack subnet by setting the value of the platform.openstack.machinesSubnet property to the subnet's UUID.

Before you run the Red Hat OpenShift Container Platform installer with a custom subnet, verify that your configuration meets the following requirements:

The subnet that is used by platform.openstack.machinesSubnet has DHCP enabled.

The CIDR of platform.openstack.machinesSubnet matches the CIDR of networking.machineNetwork.

The installation program user has permission to create ports on this network, including ports with fixed IP addresses.


Clusters that use custom subnets have the following limitations:

If you plan to install a cluster that uses floating IP addresses, the platform.openstack.machinesSubnet subnet must be attached to a router that is connected to the externalNetwork network.

If the platform.openstack.machinesSubnet value is set in the install-config.yaml file, the installation program does not create a private network or subnet for your OpenStack machines.

You cannot use the platform.openstack.externalDNS property at the same time as a custom subnet. To add DNS to a cluster that uses a custom subnet, configure DNS on the OpenStack network.


By default, the API VIP takes x.x.x.5 and the Ingress VIP takes x.x.x.7 from your network's CIDR block. To override these default values, set values for platform.openstack.apiVIPs and platform.openstack.ingressVIPs that are outside of the DHCP allocation pool.
The CIDR ranges for networks are not adjustable after cluster installation. Red Hat does not provide direct guidance on determining the range during cluster installation because it requires careful consideration of the number of created pods per namespace.
Deploying a cluster with bare metal machines
If you want your cluster to use bare metal machines, modify the install-config.yaml file. Your cluster can have both control plane and compute machines running on bare metal, or just compute machines.

Be sure that your install-config.yaml file reflects whether the OpenStack network that you use for bare metal workers supports floating IP addresses or not.
The OpenStack Bare Metal service (Ironic) is enabled and accessible via the OpenStack Compute API.

Bare metal is available as a OpenStack flavor.

If your cluster runs on an OpenStack version that is more than 16.1.6 and less than 16.2.4, bare metal workers do not function due to a known issue that causes the metadata service to be unavailable for services on Red Hat OpenShift Container Platform nodes.

The OpenStack network supports both VM and bare metal server attachment.

Your network configuration does not rely on a provider network. Provider networks are not supported.

If you want to deploy the machines on a pre-existing network, a OpenStack subnet is provisioned.

If you want to deploy the machines on an installer-provisioned network, the OpenStack Bare Metal service (Ironic) is able to listen for and interact with Preboot eXecution Environment (PXE) boot machines that run on tenant networks.

You created an install-config.yaml file as part of the Red Hat OpenShift Container Platform installation process.


In the install-config.yaml file, edit the flavors for machines:


Use the updated install-config.yaml file to complete the installation process. The compute machines that are created during deployment use the flavor that you added to the file.

The installer may time out while waiting for bare metal machines to boot.

If the installer times out, restart and then complete the deployment by using the wait-for command of the installer. For example:

$ ./openshift-install wait-for install-complete --log-level debug
Cluster deployment on OpenStack provider networks
You can deploy your Red Hat OpenShift Container Platform clusters on OpenStack with a primary network interface on a provider network. Provider networks are commonly used to give projects direct access to a public network that can be used to reach the internet. You can also share provider networks among projects as part of the network creation process.

OpenStack provider networks map directly to an existing physical network in the data center. A OpenStack administrator must create them.

In the following example, Red Hat OpenShift Container Platform workloads are connected to a data center by using a provider network:


Red Hat OpenShift Container Platform clusters that are installed on provider networks do not require tenant networks or floating IP addresses. The installer does not create these resources during installation.

Example provider network types include flat (untagged) and VLAN (802.1Q tagged).

A cluster can support as many provider network connections as the network type allows. For example, VLAN networks typically support up to 4096 connections.
You can learn more about provider and tenant networks in the OpenStack documentation.

OpenStack provider network requirements for cluster installation
Before you install an Red Hat OpenShift Container Platform cluster, your OpenStack deployment and provider network must meet a number of conditions:

The OpenStack networking service (Neutron) is enabled and accessible through the OpenStack networking API.

The OpenStack networking service has the port security and allowed address pairs extensions enabled.

The provider network can be shared with other tenants.

The OpenStack project that you use to install the cluster must own the provider network, as well as an appropriate subnet.

Verify that the provider network can reach the OpenStack metadata service IP address, which is 169.254.169.254 by default.

Optional: To secure the network, create role-based access control (RBAC) rules that limit network access to a single project.
Deploying a cluster that has a primary interface on a provider network
You can deploy an Red Hat OpenShift Container Platform cluster that has its primary network interface on an OpenStack provider network.

Your OpenStack deployment is configured as described by "OpenStack provider network requirements for cluster installation".


In a text editor, open the install-config.yaml file.

Set the value of the platform.openstack.apiVIPs property to the IP address for the API VIP.

Set the value of the platform.openstack.ingressVIPs property to the IP address for the Ingress VIP.

Set the value of the platform.openstack.machinesSubnet property to the UUID of the provider network subnet.

Set the value of the networking.machineNetwork.cidr property to the CIDR block of the provider network subnet.


The platform.openstack.apiVIPs and platform.openstack.ingressVIPs properties must both be unassigned IP addresses from the networking.machineNetwork.cidr block.
        ...
        platform:
          openstack:
            apiVIPs: 1
              - 192.0.2.13
            ingressVIPs: 1
              - 192.0.2.23
            machinesSubnet: fa806b2f-ac49-4bce-b9db-124bc64209bf
            # ...
        networking:
          machineNetwork:
          - cidr: 192.0.2.0/24
In Red Hat OpenShift Container Platform 4.12 and later, the apiVIP and ingressVIP configuration settings are deprecated. Instead, use a list format to enter values in the apiVIPs and ingressVIPs configuration settings.


You cannot set the platform.openstack.externalNetwork or platform.openstack.externalDNS parameters while using a provider network for the primary network interface.
When you deploy the cluster, the installer uses the install-config.yaml file to deploy the cluster on the provider network.

You can add additional networks, including provider networks, to the platform.openstack.additionalNetworkIDs list.

After you deploy your cluster, you can attach pods to additional networks. For more information, see Understanding multiple networks.
Sample customized install-config.yaml file for OpenStack
The following example install-config.yaml files demonstrate all of the possible OpenStack customization options.

This sample file is provided for reference only. You must obtain your install-config.yaml file by using the installation program.
apiVersion: v1
baseDomain: example.com
controlPlane:
  name: master
  platform: {}
  replicas: 3
compute:
- name: worker
  platform:
    openstack:
      type: ml.large
  replicas: 3
metadata:
  name: example
networking:
  clusterNetwork:
  - cidr: 10.128.0.0/14
    hostPrefix: 23
  machineNetwork:
  - cidr: 10.0.0.0/16
  serviceNetwork:
  - 172.30.0.0/16
  networkType: OVNKubernetes
platform:
  openstack:
    cloud: mycloud
    externalNetwork: external
    computeFlavor: m1.xlarge
    apiFloatingIP: 128.0.0.1
fips: false
pullSecret: '{"auths": ...}'
sshKey: ssh-ed25519 AAAA...
apiVersion: v1
baseDomain: example.com
controlPlane:
  name: master
  platform: {}
  replicas: 3
compute:
- name: worker
  platform:
    openstack:
      type: ml.large
  replicas: 3
metadata:
  name: example
networking:
  clusterNetwork:
  - cidr: 10.128.0.0/14
    hostPrefix: 23
  - cidr: fd01::/48
    hostPrefix: 64
  machineNetwork:
  - cidr: 192.168.25.0/24
  - cidr: fd2e:6f44:5dd8:c956::/64
  serviceNetwork:
  - 172.30.0.0/16
  - fd02::/112
  networkType: OVNKubernetes
platform:
  openstack:
    cloud: mycloud
    externalNetwork: external
    computeFlavor: m1.xlarge
    apiVIPs:
    - 192.168.25.10
    - fd2e:6f44:5dd8:c956:f816:3eff:fec3:5955
    ingressVIPs:
    - 192.168.25.132
    - fd2e:6f44:5dd8:c956:f816:3eff:fe40:aecb
    controlPlanePort:
      fixedIPs:
      - subnet:
          name: openshift-dual4
      - subnet:
          name: openshift-dual6
      network:
        name: openshift-dual
fips: false
pullSecret: '{"auths": ...}'
sshKey: ssh-ed25519 AAAA...
Optional: Configuring a cluster with dual-stack networking
You can create a dual-stack cluster on OpenStack. However, the dual-stack configuration is enabled only if you are using an OpenStack network with IPv4 and IPv6 subnets.

OpenStack does not support the conversion of an IPv4 single-stack cluster to a dual-stack cluster network.
Deploying the dual-stack cluster
Create a network with IPv4 and IPv6 subnets. The available address modes for the ipv6-ra-mode and ipv6-address-mode fields are: dhcpv6-stateful, dhcpv6-stateless, and slaac.

Create the API and Ingress VIPs ports.

Add the IPv6 subnet to the router to enable router advertisements. If you are using a provider network, you can enable router advertisements by adding the network as an external gateway, which also enables external connectivity.

To configure IPv4 and IPv6 address endpoints for cluster nodes, edit the install-config.yaml file. The following is an example of an install-config.yaml file:
Installation configuration for a cluster on OpenStack with a user-managed load balancer
The following example install-config.yaml file demonstrates how to configure a cluster that uses an external, user-managed load balancer rather than the default internal load balancer.

apiVersion: v1
baseDomain: mydomain.test
compute:
- name: worker
  platform:
    openstack:
      type: m1.xlarge
  replicas: 3
controlPlane:
  name: master
  platform:
    openstack:
      type: m1.xlarge
  replicas: 3
metadata:
  name: mycluster
networking:
  clusterNetwork:
  - cidr: 10.128.0.0/14
    hostPrefix: 23
  machineNetwork:
  - cidr: 192.168.10.0/24
platform:
  openstack:
    cloud: mycloud
    machinesSubnet: 8586bf1a-cc3c-4d40-bdf6-c243decc603a 1
    apiVIPs:
    - 192.168.10.5
    ingressVIPs:
    - 192.168.10.7
    loadBalancer:
      type: UserManaged 2
Regardless of which load balancer you use, the load balancer is deployed to this subnet.

The UserManaged value indicates that you are using an user-managed load balancer.
Generating a key pair for cluster node SSH access
During an Red Hat OpenShift Container Platform installation, you can provide an SSH public key to the installation program. The key is passed to the Red Hat Enterprise Linux CoreOS (RHCOS) nodes through their Ignition config files and is used to authenticate SSH access to the nodes. The key is added to the ~/.ssh/authorized_keys list for the core user on each node, which enables password-less authentication.

After the key is passed to the nodes, you can use the key pair to SSH in to the RHCOS nodes as the user core. To access the nodes through SSH, the private key identity must be managed by SSH for your local user.

If you want to SSH in to your cluster nodes to perform installation debugging or disaster recovery, you must provide the SSH public key during the installation process. The ./openshift-install gather command also requires the SSH public key to be in place on the cluster nodes.

Do not skip this procedure in production environments, where disaster recovery and debugging is required.
If you do not have an existing SSH key pair on your local machine to use for authentication onto your cluster nodes, create one. For example, on a computer that uses a Linux operating system, run the following command:

View the public SSH key:

Add the SSH private key identity to the SSH agent for your local user, if it has not already been added. SSH agent management of the key is required for password-less SSH authentication onto your cluster nodes, or if you want to use the ./openshift-install gather command.

Add your SSH private key to the ssh-agent:


When you install Red Hat OpenShift Container Platform, provide the SSH public key to the installation program.
Enabling access to the environment
At deployment, all Red Hat OpenShift Container Platform machines are created in a OpenStack-tenant network. Therefore, they are not accessible directly in most OpenStack deployments.

You can configure Red Hat OpenShift Container Platform API and application access by using floating IP addresses (FIPs) during installation. You can also complete an installation without configuring FIPs, but the installer will not configure a way to reach the API or applications externally.

Enabling access with floating IP addresses
Create floating IP (FIP) addresses for external access to the Red Hat OpenShift Container Platform API and cluster applications.

Using the OpenStack CLI, create the API FIP:

Using the OpenStack CLI, create the apps, or Ingress, FIP:

Add records that follow these patterns to your DNS server for the API and Ingress FIPs:

Add the FIPs to the
install-config.yaml
file as the values of the following
parameters:


If you use these values, you must also enter an external network as the value of the platform.openstack.externalNetwork parameter in the install-config.yaml file.

You can make Red Hat OpenShift Container Platform resources available outside of the cluster by assigning a floating IP address and updating your firewall configuration.
Completing installation without floating IP addresses
You can install Red Hat OpenShift Container Platform on OpenStack without providing floating IP addresses.

In the install-config.yaml file, do not define the following parameters:

platform.openstack.ingressFloatingIP

platform.openstack.apiFloatingIP


If you cannot provide an external network, you can also leave platform.openstack.externalNetwork blank. If you do not provide a value for platform.openstack.externalNetwork, a router is not created for you, and, without additional action, the installer will fail to retrieve an image from Glance. You must configure external connectivity on your own.

If you run the installer from a system that cannot reach the cluster API due to a lack of floating IP addresses or name resolution, installation fails. To prevent installation failure in these cases, you can use a proxy network or run the installer from a system that is on the same network as your machines.

You can enable name resolution by creating DNS records for the API and Ingress ports. For example:

api.<cluster_name>.<base_domain>.  IN  A  <api_port_IP>
*.apps.<cluster_name>.<base_domain>. IN  A <ingress_port_IP>
If you do not control the DNS server, you can add the record to your /etc/hosts file. This action makes the API accessible to only you, which is not suitable for production deployment but does allow installation for development and testing.
Deploying the cluster
You can install Red Hat OpenShift Container Platform on a compatible cloud platform.

You can run the create cluster command of the installation program only once, during initial installation.
You have the Red Hat OpenShift Container Platform installation program and the pull secret for your cluster.

You have verified that the cloud provider account on your host has the correct permissions to deploy the cluster. An account with incorrect permissions causes the installation process to fail with an error message that displays the missing permissions.


Change to the directory that contains the installation program and initialize the cluster deployment:


When the cluster deployment completes successfully:

The terminal displays directions for accessing your cluster, including a link to the web console and credentials for the kubeadmin user.

Credential information also outputs to <installation_directory>/.openshift_install.log.


Do not delete the installation program or the files that the installation program creates. Both are required to delete the cluster.
...
INFO Install complete!
INFO To access the cluster as the system:admin user when using 'oc', run 'export KUBECONFIG=/home/myuser/install_dir/auth/kubeconfig'
INFO Access the OpenShift web-console here: https://console-openshift-console.apps.mycluster.example.com
INFO Login to the console with user: "kubeadmin", and password: "password"
INFO Time elapsed: 36m22s
The Ignition config files that the installation program generates contain certificates that expire after 24 hours, which are then renewed at that time. If the cluster is shut down before renewing the certificates and the cluster is later restarted after the 24 hours have elapsed, the cluster automatically recovers the expired certificates. The exception is that you must manually approve the pending node-bootstrapper certificate signing requests (CSRs) to recover kubelet certificates. See the documentation for Recovering from expired control plane certificates for more information.

It is recommended that you use Ignition config files within 12 hours after they are generated because the 24-hour certificate rotates from 16 to 22 hours after the cluster is installed. By using the Ignition config files within 12 hours, you can avoid installation failure if the certificate update runs during installation.
Verifying cluster status
You can verify your Red Hat OpenShift Container Platform cluster's status during or after installation.

In the cluster environment, export the administrator's kubeconfig file:

View the control plane and compute machines created after a deployment:

View your cluster's version:

View your Operators' status:

View all running pods in the cluster:
Logging in to the cluster by using the CLI
You can log in to your cluster as a default system user by exporting the cluster kubeconfig file. The kubeconfig file contains information about the cluster that is used by the CLI to connect a client to the correct cluster and API server. The file is specific to a cluster and is created during Red Hat OpenShift Container Platform installation.

You deployed an Red Hat OpenShift Container Platform cluster.

You installed the oc CLI.


Export the kubeadmin credentials:

Verify you can run oc commands successfully using the exported configuration:


See Accessing the web console for more details about accessing and understanding the Red Hat OpenShift Container Platform web console.
Telemetry access for Red Hat OpenShift Container Platform
In Red Hat OpenShift Container Platform 4.15, the Telemetry service, which runs by default to provide metrics about cluster health and the success of updates, requires internet access. If your cluster is connected to the internet, Telemetry runs automatically, and your cluster is registered to https://console.redhat.com/openshift [OpenShift Cluster Manager Hybrid Cloud Console].

After you confirm that your https://console.redhat.com/openshift [OpenShift Cluster Manager Hybrid Cloud Console] inventory is correct, either maintained automatically by Telemetry or manually by using OpenShift Cluster Manager, use subscription watch to track your Red Hat OpenShift Container Platform subscriptions at the account or multi-cluster level.

See About remote health monitoring for more information about the Telemetry service
Next steps
Customize your cluster.

If necessary, you can
opt out of remote health reporting.

If you need to enable external access to node ports, configure ingress cluster traffic by using a node port.

If you did not configure OpenStack to accept application traffic over floating IP addresses, configure OpenStack access with floating IP addresses.