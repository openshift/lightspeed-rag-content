Installing a cluster on GCP in a restricted network with user-provisioned infrastructure

In Red Hat OpenShift Container Platform version 4.15, you can install a cluster on Google Cloud Platform (GCP) that uses infrastructure that you provide and an internal mirror of the installation release content.

While you can install an Red Hat OpenShift Container Platform cluster by using mirrored installation release content, your cluster still requires internet access to use the GCP APIs.
The steps for performing a user-provided infrastructure install are outlined here. Several Deployment Manager templates are provided to assist in completing these steps or to help model your own. You are also free to create the required resources through other methods.

The steps for performing a user-provisioned infrastructure installation are provided as an example only. Installing a cluster with infrastructure you provide requires knowledge of the cloud provider and the installation process of Red Hat OpenShift Container Platform. Several Deployment Manager templates are provided to assist in completing these steps or to help model your own. You are also free to create the required resources through other methods; the templates are just an example.
Prerequisites
You reviewed details about the Red Hat OpenShift Container Platform installation and update processes.

You read the documentation on selecting a cluster installation method and preparing it for users.

You created a registry on your mirror host and obtained the imageContentSources data for your version of Red Hat OpenShift Container Platform.

If you use a firewall, you configured it to allow the sites that your cluster requires access to. While you might need to grant access to more sites, you must grant access to *.googleapis.com and accounts.google.com.

If the cloud identity and access management (IAM) APIs are not accessible in your environment, or if you do not want to store an administrator-level credential secret in the kube-system namespace, you can manually create and maintain long-term credentials.
About installations in restricted networks
In Red Hat OpenShift Container Platform 4.15, you can perform an installation that does not require an active connection to the internet to obtain software components. Restricted network installations can be completed using installer-provisioned infrastructure or user-provisioned infrastructure, depending on the cloud platform to which you are installing the cluster.

If you choose to perform a restricted network installation on a cloud platform, you still require access to its cloud APIs. Some cloud functions, like Amazon Web Service's Route 53 DNS and IAM services, require internet access. Depending on your network, you might require less internet access for an installation on bare metal hardware, Nutanix, or on VMware vSphere.

To complete a restricted network installation, you must create a registry that mirrors the contents of the OpenShift image registry and contains the installation media. You can create this registry on a mirror host, which can access both the internet and your closed network, or by using other methods that meet your restrictions.

Because of the complexity of the configuration for user-provisioned installations, consider completing a standard user-provisioned infrastructure installation before you attempt a restricted network installation using user-provisioned infrastructure. Completing this test installation might make it easier to isolate and troubleshoot any issues that might arise during your installation in a restricted network.
Additional limits
Clusters in restricted networks have the following additional limitations and restrictions:

The ClusterVersion status includes an Unable to retrieve available updates
error.

By default, you cannot use the contents of the Developer Catalog because
you cannot access the required image stream tags.
Internet access for Red Hat OpenShift Container Platform
In Red Hat OpenShift Container Platform 4.15, you require access to the internet to obtain the images that are necessary to install your cluster.

You must have internet access to:

Access https://console.redhat.com/openshift [OpenShift Cluster Manager Hybrid Cloud Console] to download the installation program and perform subscription management. If the cluster has internet access and you do not disable Telemetry, that service automatically entitles your cluster.

Access Quay.io to obtain the packages that are required to install your cluster.

Obtain the packages that are required to perform cluster updates.
Configuring your GCP project
Before you can install Red Hat OpenShift Container Platform, you must configure a Google Cloud Platform (GCP) project to host it.

Creating a GCP project
To install Red Hat OpenShift Container Platform, you must create a project in your Google Cloud Platform (GCP) account to host the cluster.

Create a project to host your Red Hat OpenShift Container Platform cluster. See
Creating and Managing Projects in the GCP documentation.
Enabling API services in GCP
Your Google Cloud Platform (GCP) project requires access to several API services to complete Red Hat OpenShift Container Platform installation.

You created a project to host your cluster.


Enable the following required API services in the project that hosts your
cluster. You may also enable optional API services which are not required for installation. See
Enabling services
in the GCP documentation.
Configuring DNS for GCP
To install Red Hat OpenShift Container Platform, the Google Cloud Platform (GCP) account you use must have a dedicated public hosted zone in the same project that you host the Red Hat OpenShift Container Platform cluster. This zone must be authoritative for the domain. The DNS service provides cluster DNS resolution and name lookup for external connections to the cluster.

Identify your domain, or subdomain, and registrar. You can transfer an existing domain and
registrar or obtain a new one through GCP or another source.

Create a public hosted zone for your domain or subdomain in your GCP project. See
Creating public zones
in the GCP documentation.

Extract the new authoritative name servers from the hosted zone records. See
Look up your Cloud DNS name servers
in the GCP documentation.

Update the registrar records for the name servers that your domain
uses. For example, if you registered your domain to Google Domains, see the
following topic in the Google Domains Help:
How to switch to custom name servers.

If you migrated your root domain to Google Cloud DNS, migrate your DNS records. See Migrating to Cloud DNS in the GCP documentation.

If you use a subdomain, follow your company's procedures to add its delegation records to the parent domain. This process might include a request to your company's IT department or the division that controls the root domain and DNS services for your company.
GCP account limits
The Red Hat OpenShift Container Platform cluster uses a number of Google Cloud Platform (GCP) components, but the default Quotas do not affect your ability to install a default Red Hat OpenShift Container Platform cluster.

A default cluster, which contains three compute and three control plane machines, uses the following resources. Note that some resources are required only during the bootstrap process and are removed after the cluster deploys.


If any of the quotas are insufficient during installation, the installation program displays an error that states both which quota was exceeded and the region.
Be sure to consider your actual cluster size, planned cluster growth, and any usage from other clusters that are associated with your account. The CPU, static IP addresses, and persistent disk SSD (storage) quotas are the ones that are most likely to be insufficient.

If you plan to deploy your cluster in one of the following regions, you will exceed the maximum storage quota and are likely to exceed the CPU quota limit:

asia-east2

asia-northeast2

asia-south1

australia-southeast1

europe-north1

europe-west2

europe-west3

europe-west6

northamerica-northeast1

southamerica-east1

us-west2


You can increase resource quotas from the GCP console, but you might need to file a support ticket. Be sure to plan your cluster size early so that you can allow time to resolve the support ticket before you install your Red Hat OpenShift Container Platform cluster.
Creating a service account in GCP
Red Hat OpenShift Container Platform requires a Google Cloud Platform (GCP) service account that provides authentication and authorization to access data in the Google APIs. If you do not have an existing IAM service account that contains the required roles in your project, you must create one.

You created a project to host your cluster.


Create a service account in the project that you use to host your
Red Hat OpenShift Container Platform cluster. See
Creating a service account
in the GCP documentation.

Grant the service account the appropriate permissions. You can either
grant the individual permissions that follow or assign the Owner role to it.
See Granting roles to a service account for specific resources.

You can create the service account key in JSON format, or attach the service account to a GCP virtual machine.
See Creating service account keys and Creating and enabling service accounts for instances in the GCP documentation.
Required GCP roles
When you attach the Owner role to the service account that you create, you grant that service account all permissions, including those that are required to install Red Hat OpenShift Container Platform. If your organization's security policies require a more restrictive set of permissions, you can create a service account with the following permissions. If you deploy your cluster into an existing virtual private cloud (VPC), the service account does not require certain networking permissions, which are noted in the following lists:

Compute Admin

Role Administrator

Security Admin

Service Account Admin

Service Account Key Admin

Service Account User

Storage Admin


DNS Administrator


Compute Load Balancer Admin


Deployment Manager Editor


The following roles are applied to the service accounts that the control plane and compute machines use:
Required GCP permissions for user-provisioned infrastructure
When you attach the Owner role to the service account that you create, you grant that service account all permissions, including those that are required to install Red Hat OpenShift Container Platform.

If your organization’s security policies require a more restrictive set of permissions, you can create custom roles with the necessary permissions. The following permissions are required for the user-provisioned infrastructure for creating and deleting the Red Hat OpenShift Container Platform cluster.

compute.addresses.create

compute.addresses.createInternal

compute.addresses.delete

compute.addresses.get

compute.addresses.list

compute.addresses.use

compute.addresses.useInternal

compute.firewalls.create

compute.firewalls.delete

compute.firewalls.get

compute.firewalls.list

compute.forwardingRules.create

compute.forwardingRules.get

compute.forwardingRules.list

compute.forwardingRules.setLabels

compute.networks.create

compute.networks.get

compute.networks.list

compute.networks.updatePolicy

compute.routers.create

compute.routers.get

compute.routers.list

compute.routers.update

compute.routes.list

compute.subnetworks.create

compute.subnetworks.get

compute.subnetworks.list

compute.subnetworks.use

compute.subnetworks.useExternalIp
compute.regionBackendServices.create

compute.regionBackendServices.get

compute.regionBackendServices.list

compute.regionBackendServices.update

compute.regionBackendServices.use

compute.targetPools.addInstance

compute.targetPools.create

compute.targetPools.get

compute.targetPools.list

compute.targetPools.removeInstance

compute.targetPools.use
dns.changes.create

dns.changes.get

dns.managedZones.create

dns.managedZones.get

dns.managedZones.list

dns.networks.bindPrivateDNSZone

dns.resourceRecordSets.create

dns.resourceRecordSets.list

dns.resourceRecordSets.update
iam.serviceAccountKeys.create

iam.serviceAccountKeys.delete

iam.serviceAccountKeys.get

iam.serviceAccountKeys.list

iam.serviceAccounts.actAs

iam.serviceAccounts.create

iam.serviceAccounts.delete

iam.serviceAccounts.get

iam.serviceAccounts.list

resourcemanager.projects.get

resourcemanager.projects.getIamPolicy

resourcemanager.projects.setIamPolicy
compute.disks.create

compute.disks.get

compute.disks.list

compute.instanceGroups.create

compute.instanceGroups.delete

compute.instanceGroups.get

compute.instanceGroups.list

compute.instanceGroups.update

compute.instanceGroups.use

compute.instances.create

compute.instances.delete

compute.instances.get

compute.instances.list

compute.instances.setLabels

compute.instances.setMetadata

compute.instances.setServiceAccount

compute.instances.setTags

compute.instances.use

compute.machineTypes.get

compute.machineTypes.list
storage.buckets.create

storage.buckets.delete

storage.buckets.get

storage.buckets.list

storage.objects.create

storage.objects.delete

storage.objects.get

storage.objects.list
compute.healthChecks.create

compute.healthChecks.get

compute.healthChecks.list

compute.healthChecks.useReadOnly

compute.httpHealthChecks.create

compute.httpHealthChecks.get

compute.httpHealthChecks.list

compute.httpHealthChecks.useReadOnly
compute.globalOperations.get

compute.regionOperations.get

compute.regions.list

compute.zoneOperations.get

compute.zones.get

compute.zones.list
monitoring.timeSeries.list

serviceusage.quotas.get

serviceusage.services.list
iam.roles.get
compute.images.create

compute.images.delete

compute.images.get

compute.images.list
compute.instances.getSerialPortOutput
compute.addresses.delete

compute.addresses.deleteInternal

compute.addresses.list

compute.firewalls.delete

compute.firewalls.list

compute.forwardingRules.delete

compute.forwardingRules.list

compute.networks.delete

compute.networks.list

compute.networks.updatePolicy

compute.routers.delete

compute.routers.list

compute.routes.list

compute.subnetworks.delete

compute.subnetworks.list
compute.regionBackendServices.delete

compute.regionBackendServices.list

compute.targetPools.delete

compute.targetPools.list
dns.changes.create

dns.managedZones.delete

dns.managedZones.get

dns.managedZones.list

dns.resourceRecordSets.delete

dns.resourceRecordSets.list
iam.serviceAccounts.delete

iam.serviceAccounts.get

iam.serviceAccounts.list

resourcemanager.projects.getIamPolicy

resourcemanager.projects.setIamPolicy
compute.disks.delete

compute.disks.list

compute.instanceGroups.delete

compute.instanceGroups.list

compute.instances.delete

compute.instances.list

compute.instances.stop

compute.machineTypes.list
storage.buckets.delete

storage.buckets.getIamPolicy

storage.buckets.list

storage.objects.delete

storage.objects.list
compute.healthChecks.delete

compute.healthChecks.list

compute.httpHealthChecks.delete

compute.httpHealthChecks.list
compute.images.delete

compute.images.list
compute.regions.get
deploymentmanager.deployments.create

deploymentmanager.deployments.delete

deploymentmanager.deployments.get

deploymentmanager.deployments.list

deploymentmanager.manifests.get

deploymentmanager.operations.get

deploymentmanager.resources.list
Optimizing storage
Supported GCP regions
You can deploy an Red Hat OpenShift Container Platform cluster to the following Google Cloud Platform (GCP) regions:

asia-east1 (Changhua County, Taiwan)

asia-east2 (Hong Kong)

asia-northeast1 (Tokyo, Japan)

asia-northeast2 (Osaka, Japan)

asia-northeast3 (Seoul, South Korea)

asia-south1 (Mumbai, India)

asia-south2 (Delhi, India)

asia-southeast1 (Jurong West, Singapore)

asia-southeast2 (Jakarta, Indonesia)

australia-southeast1 (Sydney, Australia)

australia-southeast2 (Melbourne, Australia)

europe-central2 (Warsaw, Poland)

europe-north1 (Hamina, Finland)

europe-southwest1 (Madrid, Spain)

europe-west1 (St. Ghislain, Belgium)

europe-west2 (London, England, UK)

europe-west3 (Frankfurt, Germany)

europe-west4 (Eemshaven, Netherlands)

europe-west6 (Zürich, Switzerland)

europe-west8 (Milan, Italy)

europe-west9 (Paris, France)

europe-west12 (Turin, Italy)

me-central1 (Doha, Qatar, Middle East)

me-west1 (Tel Aviv, Israel)

northamerica-northeast1 (Montréal, Québec, Canada)

northamerica-northeast2 (Toronto, Ontario, Canada)

southamerica-east1 (São Paulo, Brazil)

southamerica-west1 (Santiago, Chile)

us-central1 (Council Bluffs, Iowa, USA)

us-east1 (Moncks Corner, South Carolina, USA)

us-east4 (Ashburn, Northern Virginia, USA)

us-east5 (Columbus, Ohio)

us-south1 (Dallas, Texas)

us-west1 (The Dalles, Oregon, USA)

us-west2 (Los Angeles, California, USA)

us-west3 (Salt Lake City, Utah, USA)

us-west4 (Las Vegas, Nevada, USA)


To determine which machine type instances are available by region and zone, see the Google documentation.
Installing and configuring CLI tools for GCP
To install Red Hat OpenShift Container Platform on Google Cloud Platform (GCP) using user-provisioned infrastructure, you must install and configure the CLI tools for GCP.

You created a project to host your cluster.

You created a service account and granted it the required permissions.


Install the following binaries in $PATH:

Authenticate using the gcloud tool with your configured service account.
Requirements for a cluster with user-provisioned infrastructure
For a cluster that contains user-provisioned infrastructure, you must deploy all of the required machines.

This section describes the requirements for deploying Red Hat OpenShift Container Platform on user-provisioned infrastructure.

Required machines for cluster installation
The smallest Red Hat OpenShift Container Platform clusters require the following hosts:


To maintain high availability of your cluster, use separate physical hosts for these cluster machines.
The bootstrap and control plane machines must use Red Hat Enterprise Linux CoreOS (RHCOS) as the operating system. However, the compute machines can choose between Red Hat Enterprise Linux CoreOS (RHCOS), Red Hat Enterprise Linux (RHEL) 8.6 and later.

Note that RHCOS is based on Red Hat Enterprise Linux (RHEL) 9.2 and inherits all of its hardware certifications and requirements. See Red Hat Enterprise Linux technology capabilities and limits.
Minimum resource requirements for cluster installation
Each cluster machine must meet the following minimum requirements:


One vCPU is equivalent to one physical core when simultaneous multithreading (SMT), or hyperthreading, is not enabled. When enabled, use the following formula to calculate the corresponding ratio: (threads per core × cores) × sockets = vCPUs.

Red Hat OpenShift Container Platform and Kubernetes are sensitive to disk performance, and faster storage is recommended, particularly for etcd on the control plane nodes which require a 10 ms p99 fsync duration. Note that on many cloud platforms, storage size and IOPS scale together, so you might need to over-allocate storage volume to obtain sufficient performance.

As with all user-provisioned installations, if you choose to use RHEL compute machines in your cluster, you take responsibility for all operating system life cycle management and maintenance, including performing system updates, applying patches, and completing all other required tasks. Use of RHEL 7 compute machines is deprecated and has been removed in Red Hat OpenShift Container Platform 4.10 and later.
If an instance type for your platform meets the minimum requirements for cluster machines, it is supported to use in Red Hat OpenShift Container Platform.
Tested instance types for GCP
The following Google Cloud Platform instance types have been tested with Red Hat OpenShift Container Platform.

https://raw.githubusercontent.com/openshift/installer/master/docs/user/gcp/tested_instance_types.md
Using custom machine types
Using a custom machine type to install a Red Hat OpenShift Container Platform cluster is supported.

Consider the following when using a custom machine type:

Similar to predefined instance types, custom machine types must meet the minimum resource requirements for control plane and compute machines. For more information, see "Minimum resource requirements for cluster installation".

The name of the custom machine type must adhere to the following syntax:
Creating the installation files for GCP
To install Red Hat OpenShift Container Platform on Google Cloud Platform (GCP) using user-provisioned infrastructure, you must generate the files that the installation program needs to deploy your cluster and modify them so that the cluster creates only the machines that it will use. You generate and customize the install-config.yaml file, Kubernetes manifests, and Ignition config files. You also have the option to first set up a separate var partition during the preparation phases of installation.

Optional: Creating a separate /var partition
It is recommended that disk partitioning for Red Hat OpenShift Container Platform be left to the installer. However, there are cases where you might want to create separate partitions in a part of the filesystem that you expect to grow.

Red Hat OpenShift Container Platform supports the addition of a single partition to attach storage to either the /var partition or a subdirectory of /var. For example:

/var/lib/containers: Holds container-related content that can grow as more images and containers are added to a system.

/var/lib/etcd: Holds data that you might want to keep separate for purposes such as performance optimization of etcd storage.

/var: Holds data that you might want to keep separate for purposes such as auditing.


Storing the contents of a /var directory separately makes it easier to grow storage for those areas as needed and reinstall Red Hat OpenShift Container Platform at a later date and keep that data intact. With this method, you will not have to pull all your containers again, nor will you have to copy massive log files when you update systems.

Because /var must be in place before a fresh installation of Red Hat Enterprise Linux CoreOS (RHCOS), the following procedure sets up the separate /var partition by creating a machine config manifest that is inserted during the openshift-install preparation phases of an Red Hat OpenShift Container Platform installation.

If you follow the steps to create a separate /var partition in this procedure, it is not necessary to create the Kubernetes manifest and Ignition config files again as described later in this section.
Create a directory to hold the Red Hat OpenShift Container Platform installation files:

Run openshift-install to create a set of files in the manifest and openshift subdirectories. Answer the system questions as you are prompted:

Optional: Confirm that the installation program created manifests in the clusterconfig/openshift directory:

Create a Butane config that configures the additional partition. For example, name the file $HOME/clusterconfig/98-var-partition.bu, change the disk device name to the name of the storage device on the worker systems, and set the storage size as appropriate. This example places the /var directory on a separate partition:

Create a manifest from the Butane config and save it to the clusterconfig/openshift directory. For example, run the following command:

Run openshift-install again to create Ignition configs from a set of files in the manifest and openshift subdirectories:


Now you can use the Ignition config files as input to the installation procedures to install Red Hat Enterprise Linux CoreOS (RHCOS) systems.
Creating the installation configuration file
You can customize the Red Hat OpenShift Container Platform cluster you install on Google Cloud Platform (GCP).

You have the Red Hat OpenShift Container Platform installation program and the pull secret for your cluster.
For a restricted network installation, these files are on your mirror host.

You have the imageContentSources values that were generated during mirror registry creation.

You have obtained the contents of the certificate for your mirror registry.


Create the install-config.yaml file.

Edit the install-config.yaml file to give the additional information that is required for an installation in a restricted network.

Make any other modifications to the install-config.yaml file that you require.

Back up the install-config.yaml file so that you can use
it to install multiple clusters.


Installation configuration parameters for GCP
Enabling Shielded VMs
You can use Shielded VMs when installing your cluster. Shielded VMs have extra security features including secure boot, firmware and integrity monitoring, and rootkit detection. For more information, see Google's documentation on Shielded VMs.

Shielded VMs are currently not supported on clusters with 64-bit ARM infrastructures.
You have created an install-config.yaml file.


Use a text editor to edit the install-config.yaml file prior to deploying your cluster and add one of the following stanzas:
Enabling Confidential VMs
You can use Confidential VMs when installing your cluster. Confidential VMs encrypt data while it is being processed. For more information, see Google's documentation on Confidential Computing. You can enable Confidential VMs and Shielded VMs at the same time, although they are not dependent on each other.

Confidential VMs are currently not supported on 64-bit ARM architectures.
You have created an install-config.yaml file.


Use a text editor to edit the install-config.yaml file prior to deploying your cluster and add one of the following stanzas:
Configuring the cluster-wide proxy during installation
Production environments can deny direct access to the internet and instead have an HTTP or HTTPS proxy available. You can configure a new Red Hat OpenShift Container Platform cluster to use a proxy by configuring the proxy settings in the install-config.yaml file.

You have an existing install-config.yaml file.

You reviewed the sites that your cluster requires access to and determined whether any of them need to bypass the proxy. By default, all cluster egress traffic is proxied, including calls to hosting cloud provider APIs. You added sites to the Proxy object's spec.noProxy field to bypass the proxy if necessary.


Edit your install-config.yaml file and add the proxy settings. For example:

Save the file and reference it when installing Red Hat OpenShift Container Platform.


The installation program creates a cluster-wide proxy that is named cluster that uses the proxy settings in the provided install-config.yaml file. If no proxy settings are provided, a cluster Proxy object is still created, but it will have a nil spec.

Only the Proxy object named cluster is supported, and no additional proxies can be created.
Creating the Kubernetes manifest and Ignition config files
Because you must modify some cluster definition files and manually start the cluster machines, you must generate the Kubernetes manifest and Ignition config files that the cluster needs to configure the machines.

The installation configuration file transforms into the Kubernetes manifests. The manifests wrap into the Ignition configuration files, which are later used to configure the cluster machines.

The Ignition config files that the Red Hat OpenShift Container Platform installation program generates contain certificates that expire after 24 hours, which are then renewed at that time. If the cluster is shut down before renewing the certificates and the cluster is later restarted after the 24 hours have elapsed, the cluster automatically recovers the expired certificates. The exception is that you must manually approve the pending node-bootstrapper certificate signing requests (CSRs) to recover kubelet certificates. See the documentation for Recovering from expired control plane certificates for more information.

It is recommended that you use Ignition config files within 12 hours after they are generated because the 24-hour certificate rotates from 16 to 22 hours after the cluster is installed. By using the Ignition config files within 12 hours, you can avoid installation failure if the certificate update runs during installation.
You obtained the Red Hat OpenShift Container Platform installation program.
For a restricted network installation, these files are on your mirror host.

You created the install-config.yaml installation configuration file.


Change to the directory that contains the Red Hat OpenShift Container Platform installation program and generate the Kubernetes manifests for the cluster:

Remove the Kubernetes manifest files that define the control plane machines:

Remove the Kubernetes manifest files that define the control plane machine set:

Optional: If you do not want the cluster to provision compute machines, remove
the Kubernetes manifest files that define the worker machines:

Check that the mastersSchedulable parameter in the <installation_directory>/manifests/cluster-scheduler-02-config.yml Kubernetes manifest file is set to false. This setting prevents pods from being scheduled on the control plane machines:

Optional: If you do not want
the Ingress Operator
to create DNS records on your behalf, remove the privateZone and publicZone
sections from the <installation_directory>/manifests/cluster-dns-02-config.yml DNS configuration file:

To create the Ignition configuration files, run the following command from the directory that contains the installation program:


Optional: Adding the ingress DNS records
Exporting common variables
Extracting the infrastructure name
The Ignition config files contain a unique cluster identifier that you can use to uniquely identify your cluster in Google Cloud Platform (GCP). The infrastructure name is also used to locate the appropriate GCP resources during an Red Hat OpenShift Container Platform installation. The provided Deployment Manager templates contain references to this infrastructure name, so you must extract it.

You obtained the Red Hat OpenShift Container Platform installation program and the pull secret for your cluster.

You generated the Ignition config files for your cluster.

You installed the jq package.


To extract and view the infrastructure name from the Ignition config file
metadata, run the following command:
Exporting common variables for Deployment Manager templates
You must export a common set of variables that are used with the provided Deployment Manager templates used to assist in completing a user-provided infrastructure install on Google Cloud Platform (GCP).

Specific Deployment Manager templates can also require additional exported variables, which are detailed in their related procedures.
Obtain the Red Hat OpenShift Container Platform installation program and the pull secret for your cluster.

Generate the Ignition config files for your cluster.

Install the jq package.


Export the following common variables to be used by the provided Deployment Manager
templates:
Creating a VPC in GCP
You must create a VPC in Google Cloud Platform (GCP) for your Red Hat OpenShift Container Platform cluster to use. You can customize the VPC to meet your requirements. One way to create the VPC is to modify the provided Deployment Manager template.

If you do not use the provided Deployment Manager template to create your GCP infrastructure, you must review the provided information and manually create the infrastructure. If your cluster does not initialize correctly, you might have to contact Red Hat support with your installation logs.
Configure a GCP account.

Generate the Ignition config files for your cluster.


Copy the template from the Deployment Manager template for the VPC
section of this topic and save it as 01_vpc.py on your computer. This template
describes the VPC that your cluster requires.

Create a 01_vpc.yaml resource definition file:

Create the deployment by using the gcloud CLI:


Deployment Manager template for the VPC
You can use the following Deployment Manager template to deploy the VPC that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/01_vpc.py[role=include]
Networking requirements for user-provisioned infrastructure
All the Red Hat Enterprise Linux CoreOS (RHCOS) machines require networking to be configured in initramfs during boot to fetch their Ignition config files.

Setting the cluster node hostnames through DHCP
On Red Hat Enterprise Linux CoreOS (RHCOS) machines, the hostname is set through NetworkManager. By default, the machines obtain their hostname through DHCP. If the hostname is not provided by DHCP, set statically through kernel arguments, or another method, it is obtained through a reverse DNS lookup. Reverse DNS lookup occurs after the network has been initialized on a node and can take time to resolve. Other system services can start prior to this and detect the hostname as localhost or similar. You can avoid this by using DHCP to provide the hostname for each cluster node.

Additionally, setting the hostnames through DHCP can bypass any manual DNS record name configuration errors in environments that have a DNS split-horizon implementation.
Network connectivity requirements
You must configure the network connectivity between machines to allow Red Hat OpenShift Container Platform cluster components to communicate. Each machine must be able to resolve the hostnames of all other machines in the cluster.

This section provides details about the ports that are required.
Creating load balancers in GCP
You must configure load balancers in Google Cloud Platform (GCP) for your Red Hat OpenShift Container Platform cluster to use. One way to create these components is to modify the provided Deployment Manager template.

If you do not use the provided Deployment Manager template to create your GCP infrastructure, you must review the provided information and manually create the infrastructure. If your cluster does not initialize correctly, you might have to contact Red Hat support with your installation logs.
Configure a GCP account.

Generate the Ignition config files for your cluster.

Create and configure a VPC and associated subnets in GCP.


Copy the template from the Deployment Manager template for the internal load balancer
section of this topic and save it as 02_lb_int.py on your computer. This
template describes the internal load balancing objects that your cluster
requires.

For an external cluster, also copy the template from the Deployment Manager template for the external load balancer
section of this topic and save it as 02_lb_ext.py on your computer. This
template describes the external load balancing objects that your cluster
requires.

Export the variables that the deployment template uses:

Create a 02_infra.yaml resource definition file:

Create the deployment by using the gcloud CLI:

Export the cluster IP address:

For an external cluster, also export the cluster public IP address:


Deployment Manager template for the external load balancer
You can use the following Deployment Manager template to deploy the external load balancer that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/02_lb_ext.py[role=include]
Deployment Manager template for the internal load balancer
You can use the following Deployment Manager template to deploy the internal load balancer that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/02_lb_int.py[role=include]
You will need this template in addition to the 02_lb_ext.py template when you create an external cluster.
Creating a private DNS zone in GCP
You must configure a private DNS zone in Google Cloud Platform (GCP) for your Red Hat OpenShift Container Platform cluster to use. One way to create this component is to modify the provided Deployment Manager template.

If you do not use the provided Deployment Manager template to create your GCP infrastructure, you must review the provided information and manually create the infrastructure. If your cluster does not initialize correctly, you might have to contact Red Hat support with your installation logs.
Configure a GCP account.

Generate the Ignition config files for your cluster.

Create and configure a VPC and associated subnets in GCP.


Copy the template from the Deployment Manager template for the private DNS
section of this topic and save it as 02_dns.py on your computer. This
template describes the private DNS objects that your cluster
requires.

Create a 02_dns.yaml resource definition file:

Create the deployment by using the gcloud CLI:

The templates do not create DNS entries due to limitations of Deployment
Manager, so you must create them manually:


Deployment Manager template for the private DNS
You can use the following Deployment Manager template to deploy the private DNS that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/02_dns.py[role=include]
Creating firewall rules in GCP
You must create firewall rules in Google Cloud Platform (GCP) for your Red Hat OpenShift Container Platform cluster to use. One way to create these components is to modify the provided Deployment Manager template.

If you do not use the provided Deployment Manager template to create your GCP infrastructure, you must review the provided information and manually create the infrastructure. If your cluster does not initialize correctly, you might have to contact Red Hat support with your installation logs.
Configure a GCP account.

Generate the Ignition config files for your cluster.

Create and configure a VPC and associated subnets in GCP.


Copy the template from the
Deployment Manager template for firewall rules
section of this topic and save it as 03_firewall.py on your computer. This
template describes the security groups that your cluster requires.

Create a 03_firewall.yaml resource definition file:

Create the deployment by using the gcloud CLI:


Deployment Manager template for firewall rules
You can use the following Deployment Manager template to deploy the firewall rues that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/03_firewall.py[role=include]
Creating IAM roles in GCP
You must create IAM roles in Google Cloud Platform (GCP) for your Red Hat OpenShift Container Platform cluster to use. One way to create these components is to modify the provided Deployment Manager template.

If you do not use the provided Deployment Manager template to create your GCP infrastructure, you must review the provided information and manually create the infrastructure. If your cluster does not initialize correctly, you might have to contact Red Hat support with your installation logs.
Configure a GCP account.

Generate the Ignition config files for your cluster.

Create and configure a VPC and associated subnets in GCP.


Copy the template from the
Deployment Manager template for IAM roles
section of this topic and save it as 03_iam.py on your computer. This
template describes the IAM roles that your cluster requires.

Create a 03_iam.yaml resource definition file:

Create the deployment by using the gcloud CLI:

Export the variable for the master service account:

Export the variable for the worker service account:

Export the variable for the subnet that hosts the compute machines:

The templates do not create the policy bindings due to limitations of Deployment
Manager, so you must create them manually:

Create a service account key and store it locally for later use:


Deployment Manager template for IAM roles
You can use the following Deployment Manager template to deploy the IAM roles that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/03_iam.py[role=include]
Creating the RHCOS cluster image for the GCP infrastructure
You must use a valid Red Hat Enterprise Linux CoreOS (RHCOS) image for Google Cloud Platform (GCP) for your Red Hat OpenShift Container Platform nodes.

Obtain the RHCOS image from the RHCOS image mirror page.

Create the Google storage bucket:

Upload the RHCOS image to the Google storage bucket:

Export the uploaded RHCOS image location as a variable:

Create the cluster image:
Creating the bootstrap machine in GCP
You must create the bootstrap machine in Google Cloud Platform (GCP) to use during Red Hat OpenShift Container Platform cluster initialization. One way to create this machine is to modify the provided Deployment Manager template.

If you do not use the provided Deployment Manager template to create your bootstrap machine, you must review the provided information and manually create the infrastructure. If your cluster does not initialize correctly, you might have to contact Red Hat support with your installation logs.
Configure a GCP account.

Generate the Ignition config files for your cluster.

Create and configure a VPC and associated subnets in GCP.

Create and configure networking and load balancers in GCP.

Create control plane and compute roles.

Ensure pyOpenSSL is installed.


Copy the template from the Deployment Manager template for the bootstrap machine
section of this topic and save it as 04_bootstrap.py on your computer. This
template describes the bootstrap machine that your cluster requires.

Export the location of the Red Hat Enterprise Linux CoreOS (RHCOS) image that the installation program requires:

Create a bucket and upload the bootstrap.ign file:

Create a signed URL for the bootstrap instance to use to access the Ignition
config. Export the URL from the output as a variable:

Create a 04_bootstrap.yaml resource definition file:

Create the deployment by using the gcloud CLI:

The templates do not manage load balancer membership due to limitations of Deployment
Manager, so you must add the bootstrap machine manually.


Deployment Manager template for the bootstrap machine
You can use the following Deployment Manager template to deploy the bootstrap machine that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/04_bootstrap.py[role=include]
Creating the control plane machines in GCP
You must create the control plane machines in Google Cloud Platform (GCP) for your cluster to use. One way to create these machines is to modify the provided Deployment Manager template.

If you do not use the provided Deployment Manager template to create your control plane machines, you must review the provided information and manually create the infrastructure. If your cluster does not initialize correctly, you might have to contact Red Hat support with your installation logs.
Configure a GCP account.

Generate the Ignition config files for your cluster.

Create and configure a VPC and associated subnets in GCP.

Create and configure networking and load balancers in GCP.

Create control plane and compute roles.

Create the bootstrap machine.


Copy the template from the Deployment Manager template for control plane machines
section of this topic and save it as 05_control_plane.py on your computer.
This template describes the control plane machines that your cluster requires.

Export the following variable required by the resource definition:

Create a 05_control_plane.yaml resource definition file:

Create the deployment by using the gcloud CLI:

The templates do not manage load balancer membership due to limitations of Deployment
Manager, so you must add the control plane machines manually.


Deployment Manager template for control plane machines
You can use the following Deployment Manager template to deploy the control plane machines that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/05_control_plane.py[role=include]
Wait for bootstrap completion and remove bootstrap resources in GCP
After you create all of the required infrastructure in Google Cloud Platform (GCP), wait for the bootstrap process to complete on the machines that you provisioned by using the Ignition config files that you generated with the installation program.

Configure a GCP account.

Generate the Ignition config files for your cluster.

Create and configure a VPC and associated subnets in GCP.

Create and configure networking and load balancers in GCP.

Create control plane and compute roles.

Create the bootstrap machine.

Create the control plane machines.


Change to the directory that contains the installation program and run the
following command:

Delete the bootstrap resources:
Creating additional worker machines in GCP
You can create worker machines in Google Cloud Platform (GCP) for your cluster to use by launching individual instances discretely or by automated processes outside the cluster, such as auto scaling groups. You can also take advantage of the built-in cluster scaling mechanisms and the machine API in Red Hat OpenShift Container Platform.

In this example, you manually launch one instance by using the Deployment Manager template. Additional instances can be launched by including additional resources of type 06_worker.py in the file.

If you do not use the provided Deployment Manager template to create your worker machines, you must review the provided information and manually create the infrastructure. If your cluster does not initialize correctly, you might have to contact Red Hat support with your installation logs.
Configure a GCP account.

Generate the Ignition config files for your cluster.

Create and configure a VPC and associated subnets in GCP.

Create and configure networking and load balancers in GCP.

Create control plane and compute roles.

Create the bootstrap machine.

Create the control plane machines.


Copy the template from the Deployment Manager template for worker machines
section of this topic and save it as 06_worker.py on your computer. This
template describes the worker machines that your cluster requires.

Export the variables that the resource definition uses.

Create a 06_worker.yaml resource definition file:

Optional: If you want to launch additional instances, include additional
resources of type 06_worker.py in your 06_worker.yaml resource definition
file.

Create the deployment by using the gcloud CLI:


To use a GCP Marketplace image, specify the offer to use:
Deployment Manager template for worker machines
You can use the following Deployment Manager template to deploy the worker machines that you need for your Red Hat OpenShift Container Platform cluster:

link:https://raw.githubusercontent.com/openshift/installer/release-4.15/upi/gcp/06_worker.py[role=include]
Logging in to the cluster by using the CLI
You can log in to your cluster as a default system user by exporting the cluster kubeconfig file. The kubeconfig file contains information about the cluster that is used by the CLI to connect a client to the correct cluster and API server. The file is specific to a cluster and is created during Red Hat OpenShift Container Platform installation.

You deployed an Red Hat OpenShift Container Platform cluster.

You installed the oc CLI.


Export the kubeadmin credentials:

Verify you can run oc commands successfully using the exported configuration:
Disabling the default OperatorHub catalog sources
Operator catalogs that source content provided by Red Hat and community projects are configured for OperatorHub by default during an Red Hat OpenShift Container Platform installation. In a restricted network environment, you must disable the default catalogs as a cluster administrator.

Disable the sources for the default catalogs by adding disableAllDefaultSources: true to the OperatorHub object:


Alternatively, you can use the web console to manage catalog sources. From the Administration -> Cluster Settings -> Configuration -> OperatorHub page, click the Sources tab, where you can create, update, delete, disable, and enable individual sources.
Approving the certificate signing requests for your machines
When you add machines to a cluster, two pending certificate signing requests (CSRs) are generated for each machine that you added. You must confirm that these CSRs are approved or, if necessary, approve them yourself. The client requests must be approved first, followed by the server requests.

You added machines to your cluster.


Confirm that the cluster recognizes the machines:

Review the pending CSRs and ensure that you see the client requests with the Pending or Approved status for each machine that you added to the cluster:

If the CSRs were not approved, after all of the pending CSRs for the machines you added are in Pending status, approve the CSRs for your cluster machines:

Now that your client requests are approved, you must review the server requests for each machine that you added to the cluster:

If the remaining CSRs are not approved, and are in the Pending status, approve the CSRs for your cluster machines:

After all client and server CSRs have been approved, the machines have the Ready status. Verify this by running the following command:


For more information on CSRs, see Certificate Signing Requests.
Optional: Adding the ingress DNS records
If you removed the DNS zone configuration when creating Kubernetes manifests and generating Ignition configs, you must manually create DNS records that point at the ingress load balancer. You can create either a wildcard *.apps.{baseDomain}. or specific records. You can use A, CNAME, and other records per your requirements.

Configure a GCP account.

Remove the DNS Zone configuration when creating Kubernetes manifests and
generating Ignition configs.

Create and configure a VPC and associated subnets in GCP.

Create and configure networking and load balancers in GCP.

Create control plane and compute roles.

Create the bootstrap machine.

Create the control plane machines.

Create the worker machines.


Wait for the Ingress router to create a load balancer and populate the EXTERNAL-IP field:

Add the A record to your zones:
Completing a GCP installation on user-provisioned infrastructure
After you start the Red Hat OpenShift Container Platform installation on Google Cloud Platform (GCP) user-provisioned infrastructure, you can monitor the cluster events until the cluster is ready.

Deploy the bootstrap machine for an Red Hat OpenShift Container Platform cluster on user-provisioned GCP infrastructure.

Install the oc CLI and log in.


Complete the cluster installation:

Observe the running state of your cluster.
Telemetry access for Red Hat OpenShift Container Platform
In Red Hat OpenShift Container Platform 4.15, the Telemetry service, which runs by default to provide metrics about cluster health and the success of updates, requires internet access. If your cluster is connected to the internet, Telemetry runs automatically, and your cluster is registered to https://console.redhat.com/openshift [OpenShift Cluster Manager Hybrid Cloud Console].

After you confirm that your https://console.redhat.com/openshift [OpenShift Cluster Manager Hybrid Cloud Console] inventory is correct, either maintained automatically by Telemetry or manually by using OpenShift Cluster Manager, use subscription watch to track your Red Hat OpenShift Container Platform subscriptions at the account or multi-cluster level.

See About remote health monitoring for more information about the Telemetry service
Next steps
Customize your cluster.

Configure image streams for the Cluster Samples Operator and the must-gather tool.

Learn how to use Operator Lifecycle Manager (OLM) on restricted networks.

If the mirror registry that you used to install your cluster has a trusted CA, add it to the cluster by configuring additional trust stores.

If necessary, you can opt out of remote health reporting.

If necessary, see Registering your disconnected cluster