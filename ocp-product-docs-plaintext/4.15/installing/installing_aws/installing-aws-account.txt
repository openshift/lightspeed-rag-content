Configuring an AWS account

Before you can install Red Hat OpenShift Container Platform, you must configure an Amazon Web Services (AWS) account.
Configuring Route 53
To install Red Hat OpenShift Container Platform, the Amazon Web Services (AWS) account you use must have a dedicated public hosted zone in your Route 53 service. This zone must be authoritative for the domain. The Route 53 service provides cluster DNS resolution and name lookup for external connections to the cluster.

Identify your domain, or subdomain, and registrar. You can transfer an existing domain and
registrar or obtain a new one through AWS or another source.

If you are using an existing domain and registrar, migrate its DNS to AWS. See
Making Amazon Route 53 the DNS Service for an Existing Domain
in the AWS documentation.

Create a public hosted zone for your domain or subdomain. See
Creating a Public Hosted Zone
in the AWS documentation.

Extract the new authoritative name servers from the hosted zone records. See
Getting the Name Servers for a Public Hosted Zone
in the AWS documentation.

Update the registrar records for the AWS Route 53 name servers that your domain
uses. For example, if you registered your domain to a Route 53 service in a
different accounts, see the following topic in the AWS documentation:
Adding or Changing Name Servers or Glue Records.

If you are using a subdomain, add its delegation records to the parent domain. This gives Amazon Route 53 responsibility for the subdomain. Follow the delegation procedure outlined by the DNS provider of the parent domain. See Creating a subdomain that uses Amazon Route 53 as the DNS service without migrating the parent domain in the AWS documentation for an example high level procedure.


Ingress Operator endpoint configuration for AWS Route 53
If you install in either Amazon Web Services (AWS) GovCloud (US) US-West or US-East region, the Ingress Operator uses us-gov-west-1 region for Route53 and tagging API clients.

The Ingress Operator uses https://tagging.us-gov-west-1.amazonaws.com as the tagging API endpoint if a tagging custom endpoint is configured that includes the string 'us-gov-east-1'.

For more information on AWS GovCloud (US) endpoints, see the Service Endpoints in the AWS documentation about GovCloud (US).

Private, disconnected installations are not supported for AWS GovCloud when you install in the us-gov-east-1 region.
platform:
  aws:
    region: us-gov-west-1
    serviceEndpoints:
    - name: ec2
      url: https://ec2.us-gov-west-1.amazonaws.com
    - name: elasticloadbalancing
      url: https://elasticloadbalancing.us-gov-west-1.amazonaws.com
    - name: route53
      url: https://route53.us-gov.amazonaws.com 1
    - name: tagging
      url: https://tagging.us-gov-west-1.amazonaws.com 2
Route 53 defaults to https://route53.us-gov.amazonaws.com for both AWS GovCloud (US) regions.

Only the US-West region has endpoints for tagging. Omit this parameter if your cluster is in another region.
AWS account limits
The Red Hat OpenShift Container Platform cluster uses a number of Amazon Web Services (AWS) components, and the default Service Limits affect your ability to install Red Hat OpenShift Container Platform clusters. If you use certain cluster configurations, deploy your cluster in certain AWS regions, or run multiple clusters from your account, you might need to request additional resources for your AWS account.

The following table summarizes the AWS components whose limits can impact your ability to install and run Red Hat OpenShift Container Platform clusters.
Required AWS permissions for the IAM user
Your IAM user must have the permission tag:GetResources in the region us-east-1 to delete the base cluster resources. As part of the AWS API requirement, the Red Hat OpenShift Container Platform installation program performs various actions in this region.
When you attach the AdministratorAccess policy to the IAM user that you create in Amazon Web Services (AWS), you grant that user all of the required permissions. To deploy all components of an Red Hat OpenShift Container Platform cluster, the IAM user requires the following permissions:

ec2:AttachNetworkInterface

ec2:AuthorizeSecurityGroupEgress

ec2:AuthorizeSecurityGroupIngress

ec2:CopyImage

ec2:CreateNetworkInterface

ec2:CreateSecurityGroup

ec2:CreateTags

ec2:CreateVolume

ec2:DeleteSecurityGroup

ec2:DeleteSnapshot

ec2:DeleteTags

ec2:DeregisterImage

ec2:DescribeAccountAttributes

ec2:DescribeAddresses

ec2:DescribeAvailabilityZones

ec2:DescribeDhcpOptions

ec2:DescribeImages

ec2:DescribeInstanceAttribute

ec2:DescribeInstanceCreditSpecifications

ec2:DescribeInstances

ec2:DescribeInstanceTypes

ec2:DescribeInternetGateways

ec2:DescribeKeyPairs

ec2:DescribeNatGateways

ec2:DescribeNetworkAcls

ec2:DescribeNetworkInterfaces

ec2:DescribePrefixLists

ec2:DescribeRegions

ec2:DescribeRouteTables

ec2:DescribeSecurityGroupRules

ec2:DescribeSecurityGroups

ec2:DescribeSubnets

ec2:DescribeTags

ec2:DescribeVolumes

ec2:DescribeVpcAttribute

ec2:DescribeVpcClassicLink

ec2:DescribeVpcClassicLinkDnsSupport

ec2:DescribeVpcEndpoints

ec2:DescribeVpcs

ec2:GetEbsDefaultKmsKeyId

ec2:ModifyInstanceAttribute

ec2:ModifyNetworkInterfaceAttribute

ec2:RevokeSecurityGroupEgress

ec2:RevokeSecurityGroupIngress

ec2:RunInstances

ec2:TerminateInstances
ec2:AllocateAddress

ec2:AssociateAddress

ec2:AssociateDhcpOptions

ec2:AssociateRouteTable

ec2:AttachInternetGateway

ec2:CreateDhcpOptions

ec2:CreateInternetGateway

ec2:CreateNatGateway

ec2:CreateRoute

ec2:CreateRouteTable

ec2:CreateSubnet

ec2:CreateVpc

ec2:CreateVpcEndpoint

ec2:ModifySubnetAttribute

ec2:ModifyVpcAttribute


If you use an existing Virtual Private Cloud (VPC), your account does not require these permissions for creating network resources.
elasticloadbalancing:AddTags

elasticloadbalancing:ApplySecurityGroupsToLoadBalancer

elasticloadbalancing:AttachLoadBalancerToSubnets

elasticloadbalancing:ConfigureHealthCheck

elasticloadbalancing:CreateListener

elasticloadbalancing:CreateLoadBalancer

elasticloadbalancing:CreateLoadBalancerListeners

elasticloadbalancing:CreateTargetGroup

elasticloadbalancing:DeleteLoadBalancer

elasticloadbalancing:DeregisterInstancesFromLoadBalancer

elasticloadbalancing:DeregisterTargets

elasticloadbalancing:DescribeInstanceHealth

elasticloadbalancing:DescribeListeners

elasticloadbalancing:DescribeLoadBalancerAttributes

elasticloadbalancing:DescribeLoadBalancers

elasticloadbalancing:DescribeTags

elasticloadbalancing:DescribeTargetGroupAttributes

elasticloadbalancing:DescribeTargetHealth

elasticloadbalancing:ModifyLoadBalancerAttributes

elasticloadbalancing:ModifyTargetGroup

elasticloadbalancing:ModifyTargetGroupAttributes

elasticloadbalancing:RegisterInstancesWithLoadBalancer

elasticloadbalancing:RegisterTargets

elasticloadbalancing:SetLoadBalancerPoliciesOfListener


Red Hat OpenShift Container Platform uses both the ELB and ELBv2 API services to provision load balancers. The permission list shows permissions required by both services. A known issue exists in the AWS web console where both services use the same elasticloadbalancing action prefix but do not recognize the same actions. You can ignore the warnings about the service not recognizing certain elasticloadbalancing actions.
iam:AddRoleToInstanceProfile

iam:CreateInstanceProfile

iam:CreateRole

iam:DeleteInstanceProfile

iam:DeleteRole

iam:DeleteRolePolicy

iam:GetInstanceProfile

iam:GetRole

iam:GetRolePolicy

iam:GetUser

iam:ListInstanceProfilesForRole

iam:ListRoles

iam:ListUsers

iam:PassRole

iam:PutRolePolicy

iam:RemoveRoleFromInstanceProfile

iam:SimulatePrincipalPolicy

iam:TagInstanceProfile

iam:TagRole


If you have not created a load balancer in your AWS account, the IAM user also requires the iam:CreateServiceLinkedRole permission.
route53:ChangeResourceRecordSets

route53:ChangeTagsForResource

route53:CreateHostedZone

route53:DeleteHostedZone

route53:GetChange

route53:GetHostedZone

route53:ListHostedZones

route53:ListHostedZonesByName

route53:ListResourceRecordSets

route53:ListTagsForResource

route53:UpdateHostedZoneComment
s3:CreateBucket

s3:DeleteBucket

s3:GetAccelerateConfiguration

s3:GetBucketAcl

s3:GetBucketCors

s3:GetBucketLocation

s3:GetBucketLogging

s3:GetBucketObjectLockConfiguration

s3:GetBucketPolicy

s3:GetBucketRequestPayment

s3:GetBucketTagging

s3:GetBucketVersioning

s3:GetBucketWebsite

s3:GetEncryptionConfiguration

s3:GetLifecycleConfiguration

s3:GetReplicationConfiguration

s3:ListBucket

s3:PutBucketAcl

s3:PutBucketTagging

s3:PutEncryptionConfiguration
s3:DeleteObject

s3:GetObject

s3:GetObjectAcl

s3:GetObjectTagging

s3:GetObjectVersion

s3:PutObject

s3:PutObjectAcl

s3:PutObjectTagging
autoscaling:DescribeAutoScalingGroups

ec2:DeleteNetworkInterface

ec2:DeletePlacementGroup

ec2:DeleteVolume

elasticloadbalancing:DeleteTargetGroup

elasticloadbalancing:DescribeTargetGroups

iam:DeleteAccessKey

iam:DeleteUser

iam:DeleteUserPolicy

iam:ListAttachedRolePolicies

iam:ListInstanceProfiles

iam:ListRolePolicies

iam:ListUserPolicies

s3:DeleteObject

s3:ListBucketVersions

tag:GetResources
ec2:DeleteDhcpOptions

ec2:DeleteInternetGateway

ec2:DeleteNatGateway

ec2:DeleteRoute

ec2:DeleteRouteTable

ec2:DeleteSubnet

ec2:DeleteVpc

ec2:DeleteVpcEndpoints

ec2:DetachInternetGateway

ec2:DisassociateRouteTable

ec2:ReleaseAddress

ec2:ReplaceRouteTableAssociation


If you use an existing VPC, your account does not require these permissions to delete network resources. Instead, your account only requires the tag:UntagResources permission to delete network resources.
kms:CreateGrant

kms:Decrypt

kms:DescribeKey

kms:Encrypt

kms:GenerateDataKey

kms:GenerateDataKeyWithoutPlainText

kms:ListGrants

kms:RevokeGrant
iam:UntagRole
iam:GetUserPolicy

iam:ListAccessKeys

iam:PutUserPolicy

iam:TagUser

s3:AbortMultipartUpload

s3:GetBucketPublicAccessBlock

s3:ListBucket

s3:ListBucketMultipartUploads

s3:PutBucketPublicAccessBlock

s3:PutLifecycleConfiguration


If you are managing your cloud provider credentials with mint mode, the IAM user also requires the iam:CreateAccessKey and iam:CreateUser permissions.
ec2:DescribeInstanceTypeOfferings

servicequotas:ListAWSDefaultServiceQuotas
sts:AssumeRole
Creating an IAM user
Each Amazon Web Services (AWS) account contains a root user account that is based on the email address you used to create the account. This is a highly-privileged account, and it is recommended to use it for only initial account and billing configuration, creating an initial set of users, and securing the account.

Before you install Red Hat OpenShift Container Platform, create a secondary IAM administrative user. As you complete the Creating an IAM User in Your AWS Account procedure in the AWS documentation, set the following options:

Specify the IAM user name and select Programmatic access.

Attach the AdministratorAccess policy to ensure that the account has
sufficient permission to create the cluster. This policy provides the cluster
with the ability to grant credentials to each Red Hat OpenShift Container Platform component. The
cluster grants the components only the credentials that they require.

Optional: Add metadata to the user by attaching tags.

Confirm that the user name that you specified is granted the
AdministratorAccess policy.

Record the access key ID and secret access key values. You must use these
values when you configure your local machine to run the installation program.
IAM Policies and AWS authentication
By default, the installation program creates instance profiles for the bootstrap, control plane, and compute instances with the necessary permissions for the cluster to operate.

However, you can create your own IAM roles and specify them as part of the installation process. You might need to specify your own roles to deploy the cluster or to manage the cluster after installation. For example:

Your organization's security policies require that you use a more restrictive set of permissions to install the cluster.

After the installation, the cluster is configured with an Operator that requires access to additional services.


If you choose to specify your own IAM roles, you can take the following steps:

Begin with the default policies and adapt as required. For more information, see "Default permissions for IAM instance profiles".

Use the AWS Identity and Access Management Access Analyzer (IAM Access Analyzer) to create a policy template that is based on the cluster's activity. For more information see, "Using AWS IAM Analyzer to create policy templates".


Default permissions for IAM instance profiles
By default, the installation program creates IAM instance profiles for the bootstrap, control plane and worker instances with the necessary permissions for the cluster to operate.

The following lists specify the default permissions for control plane and compute machines:

ec2:AttachVolume

ec2:AuthorizeSecurityGroupIngress

ec2:CreateSecurityGroup

ec2:CreateTags

ec2:CreateVolume

ec2:DeleteSecurityGroup

ec2:DeleteVolume

ec2:Describe*

ec2:DetachVolume

ec2:ModifyInstanceAttribute

ec2:ModifyVolume

ec2:RevokeSecurityGroupIngress

elasticloadbalancing:AddTags

elasticloadbalancing:AttachLoadBalancerToSubnets

elasticloadbalancing:ApplySecurityGroupsToLoadBalancer

elasticloadbalancing:CreateListener

elasticloadbalancing:CreateLoadBalancer

elasticloadbalancing:CreateLoadBalancerPolicy

elasticloadbalancing:CreateLoadBalancerListeners

elasticloadbalancing:CreateTargetGroup

elasticloadbalancing:ConfigureHealthCheck

elasticloadbalancing:DeleteListener

elasticloadbalancing:DeleteLoadBalancer

elasticloadbalancing:DeleteLoadBalancerListeners

elasticloadbalancing:DeleteTargetGroup

elasticloadbalancing:DeregisterInstancesFromLoadBalancer

elasticloadbalancing:DeregisterTargets

elasticloadbalancing:Describe*

elasticloadbalancing:DetachLoadBalancerFromSubnets

elasticloadbalancing:ModifyListener

elasticloadbalancing:ModifyLoadBalancerAttributes

elasticloadbalancing:ModifyTargetGroup

elasticloadbalancing:ModifyTargetGroupAttributes

elasticloadbalancing:RegisterInstancesWithLoadBalancer

elasticloadbalancing:RegisterTargets

elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer

elasticloadbalancing:SetLoadBalancerPoliciesOfListener

kms:DescribeKey
ec2:DescribeInstances

ec2:DescribeRegions
Specifying an existing IAM role
Instead of allowing the installation program to create IAM instance profiles with the default permissions, you can use the install-config.yaml file to specify an existing IAM role for control plane and compute instances.

You have an existing install-config.yaml file.


Update compute.platform.aws.iamRole with an existing role for the control plane machines.

Update controlPlane.platform.aws.iamRole with an existing role for the compute machines.

Save the file and reference it when installing the Red Hat OpenShift Container Platform cluster.


See Deploying the cluster.
Using AWS IAM Analyzer to create policy templates
The minimal set of permissions that the control plane and compute instance profiles require depends on how the cluster is configured for its daily operation.

One way to determine which permissions the cluster instances require is to use the AWS Identity and Access Management Access Analyzer (IAM Access Analyzer) to create a policy template:

A policy template contains the permissions the cluster has used over a specified period of time.

You can then use the template to create policies with fine-grained permissions.


The overall process could be:

Ensure that CloudTrail is enabled. CloudTrail records all of the actions and events in your AWS account, including the API calls that are required to create a policy template. For more information, see the AWS documentation for working with CloudTrail.

Create an instance profile for control plane instances and an instance profile for compute instances. Be sure to assign each role a permissive policy, such as PowerUserAccess. For more information, see the AWS documentation for
creating instance profile roles.

Install the cluster in a development environment and configure it as required. Be sure to deploy all of applications the cluster will host in a production environment.

Test the cluster thoroughly. Testing the cluster ensures that all of the required API calls are logged.

Use the IAM Access Analyzer to create a policy template for each instance profile. For more information, see the AWS documentation for generating policies based on the CloudTrail logs.

Create and add a fine-grained policy to each instance profile.

Remove the permissive policy from each instance profile.

Deploy a production cluster using the existing instance profiles with the new policies.


You can add IAM Conditions to your policy to make it more restrictive and compliant with your organization security requirements.
Supported AWS Marketplace regions
Installing an Red Hat OpenShift Container Platform cluster using an AWS Marketplace image is available to customers who purchase the offer in North America.

While the offer must be purchased in North America, you can deploy the cluster to any of the following supported paritions:

Public

GovCloud


Deploying a Red Hat OpenShift Container Platform cluster using an AWS Marketplace image is not supported for the AWS secret regions or China regions.
Supported AWS regions
You can deploy an Red Hat OpenShift Container Platform cluster to the following regions.

Your IAM user must have the permission tag:GetResources in the region us-east-1 to delete the base cluster resources. As part of the AWS API requirement, the Red Hat OpenShift Container Platform installation program performs various actions in this region.
AWS public regions
The following AWS public regions are supported:

af-south-1 (Cape Town)

ap-east-1 (Hong Kong)

ap-northeast-1 (Tokyo)

ap-northeast-2 (Seoul)

ap-northeast-3 (Osaka)

ap-south-1 (Mumbai)

ap-south-2 (Hyderabad)

ap-southeast-1 (Singapore)

ap-southeast-2 (Sydney)

ap-southeast-3 (Jakarta)

ap-southeast-4 (Melbourne)

ca-central-1 (Central)

eu-central-1 (Frankfurt)

eu-central-2 (Zurich)

eu-north-1 (Stockholm)

eu-south-1 (Milan)

eu-south-2 (Spain)

eu-west-1 (Ireland)

eu-west-2 (London)

eu-west-3 (Paris)

il-central-1 (Tel Aviv)

me-central-1 (UAE)

me-south-1 (Bahrain)

sa-east-1 (São Paulo)

us-east-1 (N. Virginia)

us-east-2 (Ohio)

us-west-1 (N. California)

us-west-2 (Oregon)
AWS GovCloud regions
The following AWS GovCloud regions are supported:

us-gov-west-1

us-gov-east-1
AWS SC2S and C2S secret regions
The following AWS secret regions are supported:

us-isob-east-1 Secret Commercial Cloud Services (SC2S)

us-iso-east-1 Commercial Cloud Services (C2S)
AWS China regions
The following AWS China regions are supported:

cn-north-1 (Beijing)

cn-northwest-1 (Ningxia)
Next steps
Install an Red Hat OpenShift Container Platform cluster: