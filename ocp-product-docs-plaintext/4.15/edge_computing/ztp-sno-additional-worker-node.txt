Expanding single-node OpenShift clusters with GitOps ZTP

You can expand single-node OpenShift clusters with GitOps Zero Touch Provisioning (ZTP). When you add worker nodes to single-node OpenShift clusters, the original single-node OpenShift cluster retains the control plane node role. Adding worker nodes does not require any downtime for the existing single-node OpenShift cluster.

Although there is no specified limit on the number of worker nodes that you can add to a single-node OpenShift cluster, you must revaluate the reserved CPU allocation on the control plane node for the additional worker nodes.
If you require workload partitioning on the worker node, you must deploy and remediate the managed cluster policies on the hub cluster before installing the node. This way, the workload partitioning MachineConfig objects are rendered and associated with the worker machine config pool before the GitOps ZTP workflow applies the MachineConfig ignition file to the worker node.

It is recommended that you first remediate the policies, and then install the worker node. If you create the workload partitioning manifests after installing the worker node, you must drain the node manually and delete all the pods managed by daemon sets. When the managing daemon sets create the new pods, the new pods undergo the workload partitioning process.

Adding worker nodes to single-node OpenShift clusters with GitOps ZTP is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.

For more information about the support scope of Red Hat Technology Preview features, see Technology Preview Features Support Scope.
For more information about single-node OpenShift clusters tuned for vDU application deployments, see Reference configuration for deploying vDUs on single-node OpenShift.

For more information about worker nodes, see Adding worker nodes to single-node OpenShift clusters.

For information about removing a worker node from an expanded single-node OpenShift cluster, see Removing managed cluster nodes by using the command line interface.
Applying profiles to the worker node
You can configure the additional worker node with a DU profile.

You can apply a RAN distributed unit (DU) profile to the worker node cluster using the GitOps Zero Touch Provisioning (ZTP) common, group, and site-specific PolicyGenTemplate resources. The GitOps ZTP pipeline that is linked to the ArgoCD policies application includes the following CRs that you can find in the out/argocd/example/policygentemplates folder when you extract the ztp-site-generate container:

common-ranGen.yaml

group-du-sno-ranGen.yaml

example-sno-site.yaml

ns.yaml

kustomization.yaml


Configuring the DU profile on the worker node is considered an upgrade. To initiate the upgrade flow, you must update the existing policies or create additional ones. Then, you must create a ClusterGroupUpgrade CR to reconcile the policies in the group of clusters.
(Optional) Ensuring PTP and SR-IOV daemon selector compatibility
If the DU profile was deployed using the GitOps Zero Touch Provisioning (ZTP) plugin version 4.11 or earlier, the PTP and SR-IOV Operators might be configured to place the daemons only on nodes labelled as master. This configuration prevents the PTP and SR-IOV daemons from operating on the worker node. If the PTP and SR-IOV daemon node selectors are incorrectly configured on your system, you must change the daemons before proceeding with the worker DU profile configuration.

Check the daemon node selector settings of the PTP Operator on one of the spoke clusters:

Check the daemon node selector settings of the SR-IOV Operator on one of the spoke clusters:

In the group policy, add the following complianceType and spec entries:

Commit the changes in Git, and then push to the Git repository being monitored by the GitOps ZTP ArgoCD application.
PTP and SR-IOV node selector compatibility
The PTP configuration resources and SR-IOV network node policies use node-role.kubernetes.io/master: "" as the node selector. If the additional worker nodes have the same NIC configuration as the control plane node, the policies used to configure the control plane node can be reused for the worker nodes. However, the node selector must be changed to select both node types, for example with the "node-role.kubernetes.io/worker" label.
Using PolicyGenTemplate CRs to apply worker node policies to worker nodes
You can create policies for worker nodes.

Create the following policy template:

Add the created policy template to the Git repository monitored by the ArgoCD policies application.

Add the policy in the kustomization.yaml file.

Commit the changes in Git, and then push to the Git repository being monitored by the GitOps ZTP ArgoCD application.

To remediate the new policies to your spoke cluster, create a TALM custom resource:
Adding worker nodes to single-node OpenShift clusters with GitOps ZTP
You can add one or more worker nodes to existing single-node OpenShift clusters to increase available CPU resources in the cluster.

Install and configure RHACM 2.6 or later in an Red Hat OpenShift Container Platform 4.11 or later bare-metal hub cluster

Install Topology Aware Lifecycle Manager in the hub cluster

Install Red Hat OpenShift GitOps in the hub cluster

Use the GitOps ZTP ztp-site-generate container image version 4.12 or later

Deploy a managed single-node OpenShift cluster with GitOps ZTP

Configure the Central Infrastructure Management as described in the RHACM documentation

Configure the DNS serving the cluster to resolve the internal API endpoint api-int.<cluster_name>.<base_domain>


If you deployed your cluster by using the example-sno.yaml SiteConfig manifest, add your new worker node to the spec.clusters['example-sno'].nodes list:

Create a BMC authentication secret for the new host, as referenced by the bmcCredentialsName field in the spec.nodes section of your SiteConfig file:

Commit the changes in Git, and then push to the Git repository that is being monitored by the GitOps ZTP ArgoCD application.


You can monitor the installation process in several ways.

Check if the preprovisioning images are created by running the following command:

Check the state of the bare-metal hosts:

Continuously monitor the installation process: