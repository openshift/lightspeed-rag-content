Manually installing a single-node OpenShift cluster with ZTP

You can deploy a managed single-node OpenShift cluster by using Red Hat Advanced Cluster Management (RHACM) and the assisted service.

If you are creating multiple managed clusters, use the SiteConfig method described in Deploying far edge sites with ZTP.
The target bare-metal host must meet the networking, firmware, and hardware requirements listed in Recommended cluster configuration for vDU application workloads.
Generating GitOps ZTP installation and configuration CRs manually
Use the generator entrypoint for the ztp-site-generate container to generate the site installation and configuration custom resource (CRs) for a cluster based on SiteConfig and PolicyGenTemplate CRs.

You have installed the OpenShift CLI (oc).

You have logged in to the hub cluster as a user with cluster-admin privileges.


Create an output folder by running the following command:

Export the argocd directory from the ztp-site-generate container image:

Create an output folder for the site installation CRs:

Modify the example SiteConfig CR for the cluster type that you want to install. Copy example-sno.yaml to site-1-sno.yaml and modify the CR to match the details of the site and bare-metal host that you want to install, for example:

Generate the Day 0 installation CRs by processing the modified SiteConfig CR site-1-sno.yaml by running the following command:

Optional: Generate just the Day 0 MachineConfig installation CRs for a particular cluster type by processing the reference SiteConfig CR with the -E option. For example, run the following commands:

Generate and export the Day 2 configuration CRs using the reference PolicyGenTemplate CRs from the previous step. Run the following commands:

Use the generated CRs as the basis for the CRs that you use to install the cluster. You apply the installation CRs to the hub cluster as described in "Installing a single managed cluster". The configuration CRs can be applied to the cluster after cluster installation is complete.


Verify that the custom roles and labels are applied after the node is deployed:


Name:   example-node.example.com
Roles:  control-plane,example-label,master,worker
Labels: beta.kubernetes.io/arch=amd64
        beta.kubernetes.io/os=linux
        custom-label/parameter1=true
        kubernetes.io/arch=amd64
        kubernetes.io/hostname=cnfdf03.telco5gran.eng.rdu2.redhat.com
        kubernetes.io/os=linux
        node-role.kubernetes.io/control-plane=
        node-role.kubernetes.io/example-label= 1
        node-role.kubernetes.io/master=
        node-role.kubernetes.io/worker=
        node.openshift.io/os_id=rhcos
The custom label is applied to the node.


Workload partitioning

BMC addressing

About root device hints

Single-node OpenShift SiteConfig CR installation reference
Creating the managed bare-metal host secrets
Add the required Secret custom resources (CRs) for the managed bare-metal host to the hub cluster. You need a secret for the GitOps Zero Touch Provisioning (ZTP) pipeline to access the Baseboard Management Controller (BMC) and a secret for the assisted installer service to pull cluster installation images from the registry.

The secrets are referenced from the SiteConfig CR by name. The namespace must match the SiteConfig namespace.
Create a YAML secret file containing credentials for the host Baseboard Management Controller (BMC) and a pull secret required for installing OpenShift and all add-on cluster Operators:

Add the relative path to example-sno-secret.yaml to the kustomization.yaml file that you use to install the cluster.
Configuring Discovery ISO kernel arguments for manual installations using GitOps ZTP
The GitOps Zero Touch Provisioning (ZTP) workflow uses the Discovery ISO as part of the Red Hat OpenShift Container Platform installation process on managed bare-metal hosts. You can edit the InfraEnv resource to specify kernel arguments for the Discovery ISO. This is useful for cluster installations with specific environmental requirements. For example, configure the rd.net.timeout.carrier kernel argument for the Discovery ISO to facilitate static networking for the cluster or to receive a DHCP address before downloading the root file system during installation.

In Red Hat OpenShift Container Platform 4.15, you can only add kernel arguments. You can not replace or delete kernel arguments.
You have installed the OpenShift CLI (oc).

You have logged in to the hub cluster as a user with cluster-admin privileges.

You have manually generated the installation and configuration custom resources (CRs).


Edit the spec.kernelArguments specification in the InfraEnv CR to configure kernel arguments:


apiVersion: agent-install.openshift.io/v1beta1
kind: InfraEnv
metadata:
  name: <cluster_name>
  namespace: <cluster_name>
spec:
  kernelArguments:
    - operation: append 1
      value: audit=0 2
    - operation: append
      value: trace=1
  clusterRef:
    name: <cluster_name>
    namespace: <cluster_name>
  pullSecretRef:
    name: pull-secret
Specify the append operation to add a kernel argument.

Specify the kernel argument you want to configure. This example configures the audit kernel argument and the trace kernel argument.


The SiteConfig CR generates the InfraEnv resource as part of the day-0 installation CRs.
To verify that the kernel arguments are applied, after the Discovery image verifies that Red Hat OpenShift Container Platform is ready for installation, you can SSH to the target host before the installation process begins. At that point, you can view the kernel arguments for the Discovery ISO in the /proc/cmdline file.

Begin an SSH session with the target host:

View the system's kernel arguments by using the following command:
Installing a single managed cluster
You can manually deploy a single managed cluster using the assisted service and Red Hat Advanced Cluster Management (RHACM).

You have installed the OpenShift CLI (oc).

You have logged in to the hub cluster as a user with cluster-admin privileges.

You have created the baseboard management controller (BMC) Secret and the image pull-secret Secret custom resources (CRs). See "Creating the managed bare-metal host secrets" for details.

Your target bare-metal host meets the networking and hardware requirements for managed clusters.


Create a ClusterImageSet for each specific cluster version to be deployed, for example clusterImageSet-4.15.yaml. A ClusterImageSet has the following format:

Apply the clusterImageSet CR:

Create the Namespace CR in the cluster-namespace.yaml file:

Apply the Namespace CR by running the following command:

Apply the generated day-0 CRs that you extracted from the ztp-site-generate container and customized to meet your requirements:


Connectivity prerequisites for managed cluster networks

Deploying LVM Storage on single-node OpenShift clusters

Configuring LVM Storage using PolicyGenTemplate CRs
Monitoring the managed cluster installation status
Ensure that cluster provisioning was successful by checking the cluster status.

All of the custom resources have been configured and provisioned, and the Agent
custom resource is created on the hub for the managed cluster.


Check the status of the managed cluster:

Check the agent status:

Use the describe command to provide an in-depth description of the agent’s condition. Statuses to be aware of include BackendError, InputError, ValidationsFailing, InstallationFailed, and AgentIsConnected. These statuses are relevant to the Agent and AgentClusterInstall custom resources.

Check the cluster provisioning status:

Use the describe command to provide an in-depth description of the cluster provisioning status:

Check the status of the managed cluster’s add-on services:

Retrieve the authentication information of the kubeconfig file for the managed cluster:
Troubleshooting the managed cluster
Use this procedure to diagnose any installation issues that might occur with the managed cluster.

Check the status of the managed cluster:

Check the AgentClusterInstall install status:

If the installation failed, enter the following command to review the status of the AgentClusterInstall resource:

Resolve the errors and reset the cluster:
RHACM generated cluster installation CRs reference
Red Hat Advanced Cluster Management (RHACM) supports deploying Red Hat OpenShift Container Platform on single-node clusters, three-node clusters, and standard clusters with a specific set of installation custom resources (CRs) that you generate using SiteConfig CRs for each site.

Every managed cluster has its own namespace, and all of the installation CRs except for ManagedCluster and ClusterImageSet are under that namespace. ManagedCluster and ClusterImageSet are cluster-scoped, not namespace-scoped. The namespace and the CR names match the cluster name.
The following table lists the installation CRs that are automatically applied by the RHACM assisted service when it installs clusters using the SiteConfig CRs that you configure.