Release notes for Service Binding Operator

The Service Binding Operator consists of a controller and an accompanying custom resource definition (CRD) for service binding. It manages the data plane for workloads and backing services. The Service Binding Controller reads the data made available by the control plane of backing services. Then, it projects this data to workloads according to the rules specified through the ServiceBinding resource.

With Service Binding Operator, you can:

Bind your workloads together with Operator-managed backing services.

Automate configuration of binding data.

Provide service operators a low-touch administrative experience to provision and manage access to services.

Enrich development lifecycle with a consistent and declarative service binding method that eliminates discrepancies in cluster environments.


The custom resource definition (CRD) of the Service Binding Operator supports the following APIs:

Service Binding with the binding.operators.coreos.com API group.

Service Binding (Spec API) with the servicebinding.io API group.
Support matrix
Some features in the following table are in Technology Preview. These experimental features are not intended for production use.

In the table, features are marked with the following statuses:

TP: Technology Preview

GA: General Availability


Note the following scope of support on the Red Hat Customer Portal for these features:
Making open source more inclusive
Red Hat is committed to replacing problematic language in our code, documentation, and web properties. We are beginning with these four terms: master, slave, blacklist, and whitelist. Because of the enormity of this endeavor, these changes will be implemented gradually over several upcoming releases. For more details, see Red Hat CTO Chris Wright's message.
Release notes for Service Binding Operator 1.3.3
Service Binding Operator 1.3.3 is now available on Red Hat OpenShift Container Platform 4.9, 4.10, 4.11 and 4.12.

Fixed issues
Before this update, a security vulnerability CVE-2022-41717 was noted for Service Binding Operator. This update fixes the CVE-2022-41717 error and updates the golang.org/x/net package from v0.0.0-20220906165146-f3363e06e74c to v0.4.0. APPSVC-1256

Before this update, Provisioned Services were only detected if the respective resource had the "servicebinding.io/provisioned-service: true" annotation set while other Provisioned Services were missed. With this update, the detection mechanism identifies all Provisioned Services correctly based on the "status.binding.name" attribute. APPSVC-1204
Release notes for Service Binding Operator 1.3.1
Service Binding Operator 1.3.1 is now available on Red Hat OpenShift Container Platform 4.9, 4.10, and 4.11.

Fixed issues
Before this update, a security vulnerability CVE-2022-32149 was noted for Service Binding Operator. This update fixes the CVE-2022-32149 error and updates the golang.org/x/text package from v0.3.7 to v0.3.8. APPSVC-1220
Release notes for Service Binding Operator 1.3
Service Binding Operator 1.3 is now available on Red Hat OpenShift Container Platform 4.9, 4.10, and 4.11.

Removed functionality
In Service Binding Operator 1.3, the Operator Lifecycle Manager (OLM) descriptor feature has been removed to improve resource utilization. As an alternative to OLM descriptors, you can use CRD annotations to declare binding data.
Release notes for Service Binding Operator 1.2
Service Binding Operator 1.2 is now available on Red Hat OpenShift Container Platform 4.7, 4.8, 4.9, 4.10, and 4.11.

New features
This section highlights what is new in Service Binding Operator 1.2:

Enable Service Binding Operator to consider optional fields in the annotations by setting the optional flag value to true.

Support for servicebinding.io/v1beta1 resources.

Improvements to the discoverability of bindable services by exposing the relevant binding secret without requiring a workload to be present.
Known issues
Currently, when you install Service Binding Operator on Red Hat OpenShift Container Platform 4.11, the memory footprint of Service Binding Operator increases beyond expected limits. With low usage, however, the memory footprint stays within the expected ranges of your environment or scenarios. In comparison with Red Hat OpenShift Container Platform 4.10, under stress, both the average and maximum memory footprint increase considerably. This issue is evident in the previous versions of Service Binding Operator as well. There is currently no workaround for this issue. APPSVC-1200

By default, the projected files get their permissions set to 0644. Service Binding Operator cannot set specific permissions due to a bug in Kubernetes that causes issues if the service expects specific permissions such as, 0600. As a workaround, you can modify the code of the program or the application that is running inside a workload resource to copy the file to the /tmp directory and set the appropriate permissions. APPSVC-1127

There is currently a known issue with installing Service Binding Operator in a single namespace installation mode. The absence of an appropriate namespace-scoped role-based access control (RBAC) rule prevents the successful binding of an application to a few known Operator-backed services that the Service Binding Operator can automatically detect and bind to. When this happens, it generates an error message similar to the following example:

According to the specification, when you change the ClusterWorkloadResourceMapping resources, Service Binding Operator must use the previous version of the ClusterWorkloadResourceMapping resource to remove the binding data that was being projected until now. Currently, when you change the ClusterWorkloadResourceMapping resources, the Service Binding Operator uses the latest version of the ClusterWorkloadResourceMapping resource to remove the binding data. As a result, {the servicebinding-title} might remove the binding data incorrectly. As a workaround, perform the following steps:
Release notes for Service Binding Operator 1.1.1
Service Binding Operator 1.1.1 is now available on Red Hat OpenShift Container Platform 4.7, 4.8, 4.9, and 4.10.

Fixed issues
Before this update, a security vulnerability CVE-2021-38561 was noted for Service Binding Operator Helm chart. This update fixes the CVE-2021-38561 error and updates the golang.org/x/text package from v0.3.6 to v0.3.7. APPSVC-1124

Before this update, users of the Developer Sandbox did not have sufficient permissions to read ClusterWorkloadResourceMapping resources. As a result, Service Binding Operator prevented all service bindings from being successful. With this update, the Service Binding Operator now includes the appropriate role-based access control (RBAC) rules for any authenticated subject including the Developer Sandbox users. These RBAC rules allow the Service Binding Operator to get, list, and watch the ClusterWorkloadResourceMapping resources for the Developer Sandbox users and to process service bindings successfully. APPSVC-1135
Known issues
There is currently a known issue with installing Service Binding Operator in a single namespace installation mode. The absence of an appropriate namespace-scoped role-based access control (RBAC) rule prevents the successful binding of an application to a few known Operator-backed services that the Service Binding Operator can automatically detect and bind to. When this happens, it generates an error message similar to the following example:

Currently, when you modify the ClusterWorkloadResourceMapping resources, the Service Binding Operator does not implement correct behavior. As a workaround, perform the following steps:
Release notes for Service Binding Operator 1.1
Service Binding Operator is now available on Red Hat OpenShift Container Platform 4.7, 4.8, 4.9, and 4.10.

New features
This section highlights what is new in Service Binding Operator 1.1:

Service Binding Options
Fixed issues
Before this update, service bindings that used label selectors to pick up workloads did not project service binding data into the new workloads that matched the given label selectors. As a result, the Service Binding Operator could not periodically bind such new workloads. With this update, service bindings now project service binding data into the new workloads that match the given label selector. The Service Binding Operator now periodically attempts to find and bind such new workloads. APPSVC-1083
Known issues
There is currently a known issue with installing Service Binding Operator in a single namespace installation mode. The absence of an appropriate namespace-scoped role-based access control (RBAC) rule prevents the successful binding of an application to a few known Operator-backed services that the Service Binding Operator can automatically detect and bind to. When this happens, it generates an error message similar to the following example:

Currently, when you modify the ClusterWorkloadResourceMapping resources, the Service Binding Operator does not implement correct behavior. As a workaround, perform the following steps:
Release notes for Service Binding Operator 1.0.1
Service Binding Operator is now available on Red Hat OpenShift Container Platform 4.7, 4.8 and 4.9.

Service Binding Operator 1.0.1 supports OpenShift Container Platform 4.9 and later running on:

IBM Power Systems

IBM Z and LinuxONE


The custom resource definition (CRD) of the Service Binding Operator 1.0.1 supports the following APIs:

Service Binding with the binding.operators.coreos.com API group.

Service Binding (Spec API Tech Preview) with the servicebinding.io API group.


Support matrix
Some features in this release are currently in Technology Preview. These experimental features are not intended for production use.

Technology Preview Features Support Scope

In the table below, features are marked with the following statuses:

TP: Technology Preview

GA: General Availability


Note the following scope of support on the Red Hat Customer Portal for these features:
Fixed issues
Before this update, binding the data values from a Cluster custom resource (CR) of the postgresql.k8s.enterpriesedb.io/v1 API collected the host binding value from the .metadata.name field of the CR. The collected binding value is an incorrect hostname and the correct hostname is available at the .status.writeService field. With this update, the annotations that the Service Binding Operator uses to expose the binding data values from the backing service CR are now modified to collect the host binding value from the .status.writeService field. The Service Binding Operator uses these modified annotations to project the correct hostname in the host and provider bindings. APPSVC-1040

Before this update, when you would bind a PostgresCluster CR of the postgres-operator.crunchydata.com/v1beta1 API, the binding data values did not include the values for the database certificates. As a result, the application failed to connect to the database. With this update, modifications to the annotations that the Service Binding Operator uses to expose the binding data from the backing service CR now include the database certificates. The Service Binding Operator uses these modified annotations to project the correct ca.crt, tls.crt, and tls.key certificate files. APPSVC-1045

Before this update, when you would bind a PerconaXtraDBCluster custom resource (CR) of the pxc.percona.com API, the binding data values did not include the port and database values. These binding values along with the others already projected are necessary for an application to successfully connect to the database service. With this update, the annotations that the Service Binding Operator uses to expose the binding data values from the backing service CR are now modified to project the additional port and database binding values. The Service Binding Operator uses these modified annotations to project the complete set of binding values that the application can use to successfully connect to the database service. APPSVC-1073
Known issues
Currently, when you install the Service Binding Operator in the single namespace installation mode, the absence of an appropriate namespace-scoped role-based access control (RBAC) rule prevents the successful binding of an application to a few known Operator-backed services that the Service Binding Operator can automatically detect and bind to. In addition, the following error message is generated:
Release notes for Service Binding Operator 1.0
Service Binding Operator is now available on Red Hat OpenShift Container Platform 4.7, 4.8 and 4.9.

The custom resource definition (CRD) of the Service Binding Operator 1.0 supports the following APIs:

Service Binding with the binding.operators.coreos.com API group.

Service Binding (Spec API Tech Preview) with the servicebinding.io API group.


Support matrix
Some features in this release are currently in Technology Preview. These experimental features are not intended for production use.

Technology Preview Features Support Scope

In the table below, features are marked with the following statuses:

TP: Technology Preview

GA: General Availability


Note the following scope of support on the Red Hat Customer Portal for these features:
New features
Service Binding Operator 1.0 supports OpenShift Container Platform 4.9 and later running on:

IBM Power Systems

IBM Z and LinuxONE


This section highlights what is new in Service Binding Operator 1.0:

Exposal of binding data from services

Workload projection

Service Binding Options

Security
Additional resources
Understanding Service Binding Operator.