Creating applications by using the Developer perspective

The Developer perspective in the web console provides you the following options from the +Add view to create applications and associated services and deploy them on Red Hat OpenShift Container Platform:

Getting started resources: Use these resources to help you get started with Developer Console. You can choose to hide the header using the Options menu ..

Developer catalog: Explore the Developer Catalog to select the required applications, services, or source to image builders, and then add it to your project.

Git repository: Import an existing codebase, Devfile, or Dockerfile from your Git repository using the From Git, From Devfile, or From Dockerfile options respectively, to build and deploy an application on Red Hat OpenShift Container Platform.

Container images: Use existing images from an image stream or registry to deploy it on to the Red Hat OpenShift Container Platform.

Pipelines: Use Tekton pipeline to create CI/CD pipelines for your software delivery process on the Red Hat OpenShift Container Platform.

Serverless: Explore the Serverless options to create, build, and deploy stateless and serverless applications on the Red Hat OpenShift Container Platform.

Samples: Explore the available sample applications to create, build, and deploy an application quickly.

Quick Starts: Explore the quick start options to create, import, and run applications with step-by-step instructions and tasks.

From Local Machine: Explore the From Local Machine tile to import or upload files on your local machine for building and deploying applications easily.

Share my Project: Use this option to add or remove users to a project and provide accessibility options to them.

Helm Chart repositories: Use this option to add Helm Chart repositories in a namespace.

Re-ordering of resources: Use these resources to re-order pinned resources added to your navigation pane. The drag-and-drop icon is displayed on the left side of the pinned resource when you hover over it in the navigation pane. The dragged resource can be dropped only in the section where it resides.
Prerequisites
To create applications using the Developer perspective ensure that:

You have logged in to the web console.

You have created a project or have access to a project with the appropriate roles and permissions to create applications and other workloads in Red Hat OpenShift Container Platform.
Creating sample applications
You can use the sample applications in the +Add flow of the Developer perspective to create, build, and deploy applications quickly.

You have logged in to the Red Hat OpenShift Container Platform web console and are in the Developer perspective.


In the +Add view, click the Samples tile to see the Samples page.

On the Samples page, select one of the available sample applications to see the Create Sample Application form.

In the Create Sample Application Form:

Click Create to create the sample application. The build status of the sample application is displayed on the Topology view. After the sample application is created, you can see the deployment added to the application.
Creating applications by using Quick Starts
The Quick Starts page shows you how to create, import, and run applications on Red Hat OpenShift Container Platform, with step-by-step instructions and tasks.

You have logged in to the Red Hat OpenShift Container Platform web console and are in the Developer perspective.


In the +Add view, click the Getting Started resources -> Build with guided documentation -> View all quick starts link to view the Quick Starts page.

In the Quick Starts page, click the tile for the quick start that you want to use.

Click Start to begin the quick start.

Perform the steps that are displayed.
Importing a codebase from Git to create an application
You can use the Developer perspective to create, build, and deploy an application on Red Hat OpenShift Container Platform using an existing codebase in GitHub.

The following procedure walks you through the From Git option in the Developer perspective to create an application.

In the +Add view, click From Git in the Git Repository tile to see the Import from git form.

In the Git section, enter the Git repository URL for the codebase you want to use to create an application. For example, enter the URL of this sample Node.js application https://github.com/sclorg/nodejs-ex. The URL is then validated.

Optional: You can click Show Advanced Git Options  to add details such as:

Optional: You can import a Devfile, a Dockerfile, Builder Image, or a Serverless Function through your Git repository to further customize your deployment.

After the Git URL is validated, the recommended builder image is selected and marked with a star. If the builder image is not auto-detected, select a builder image. For the https://github.com/sclorg/nodejs-ex Git URL, by default the Node.js builder image is selected.

In the General section:

In the Resources section, select:

In the Pipelines section, select Add Pipeline, and then click Show Pipeline Visualization to see the pipeline for the application. A default pipeline is selected, but you can choose the pipeline you want from the list of available pipelines for the application.

Add a webhook to your repository. If Configure PAC is checked and the GitHub App is set up, you can see the Use GitHub App and Setup a webhook options. If GitHub App is not set up, you can only see the Setup a webhook option:

Optional: In the Advanced Options section, the Target port and the Create a route to the application is selected by default so that you can access your application using a publicly available URL.

Optional: You can use the following advanced options to further customize your application:

Click Create to create the application and a success notification is displayed. You can see the build status of the application in the Topology view.
Creating applications by deploying container image
You can use an external image registry or an image stream tag from an internal registry to deploy an application on your cluster.

You have logged in to the Red Hat OpenShift Container Platform web console and are in the Developer perspective.


In the +Add view, click Container images to view the Deploy Images page.

In the Image section:

In the General section:

In the Resource type section, select the resource type to generate:

Click Create. You can view the build status of the application in the Topology view.
Deploying a Java application by uploading a JAR file
You can use the web console Developer perspective to upload a JAR file by using the following options:

Navigate to the +Add view of the Developer perspective, and click Upload JAR file in the From Local Machine tile. Browse and select your JAR file, or drag a JAR file to deploy your application.

Navigate to the Topology view and use the Upload JAR file option, or drag a JAR file to deploy your application.

Use the in-context menu in the Topology view, and then use the Upload JAR file option to upload your JAR file to deploy your application.


The Cluster Samples Operator must be installed by a cluster administrator.

You have access to the Red Hat OpenShift Container Platform web console and are in the Developer perspective.


In the Topology view, right-click anywhere to view the Add to Project menu.

Hover over the Add to Project menu to see the menu options, and then select the Upload JAR file option to see the Upload JAR file form. Alternatively, you can drag the JAR file into the Topology view.

In the JAR file field, browse for the required JAR file on your local machine and upload it. Alternatively, you can drag the JAR file on to the field. A toast alert is displayed at the top right if an incompatible file type is dragged into the Topology view. A field error is displayed if an incompatible file type is dropped on the field in the upload form.

The runtime icon and builder image are selected by default. If a builder image is not auto-detected, select a builder image. If required, you can change the version using the Builder Image Version drop-down list.

Optional: In the Application Name field, enter a unique name for your application to use for resource labelling.

In the Name field, enter a unique component name for the associated resources.

Optional: Use the Resource type drop-down list to change the resource type.

In the Advanced options menu, click Create a Route to the Application to configure a public URL for your deployed application.

Click Create to deploy the application. A toast notification is shown to notify you that the JAR file is being uploaded. The toast notification also includes a link to view the build logs.


If you attempt to close the browser tab while the build is running, a web alert is displayed.
After the JAR file is uploaded and the application is deployed, you can view the application in the Topology view.
Using the Devfile registry to access devfiles
You can use the devfiles in the +Add flow of the Developer perspective to create an application. The +Add flow provides a complete integration with the devfile community registry. A devfile is a portable YAML file that describes your development environment without needing to configure it from scratch. Using the Devfile registry, you can use a preconfigured devfile to create an application.

Navigate to Developer Perspective -> +Add -> Developer Catalog -> All Services. A list of all the available services in the Developer Catalog is displayed.

Under Type, click Devfiles to browse for devfiles that support a particular language or framework. Alternatively, you can use the keyword filter to search for a particular devfile using their name, tag, or description.

Click the devfile you want to use to create an application. The devfile tile displays the details of the devfile, including the name, description, provider, and the documentation of the devfile.

Click Create to create an application and view the application in the Topology view.
Using the Developer Catalog to add services or components to your application
You use the Developer Catalog to deploy applications and services based on Operator backed services such as Databases, Builder Images, and Helm Charts. The Developer Catalog contains a collection of application components, services, event sources, or source-to-image builders that you can add to your project. Cluster administrators can customize the content made available in the catalog.

In the Developer perspective, navigate to the +Add view and from the Developer Catalog tile, click All Services to view all the available services in the Developer Catalog.

Under All Services, select the kind of service or the component you need to add to your project. For this example, select Databases to list all the database services and then click MariaDB to see the details for the service.

Click Instantiate Template to see an automatically populated template with details for the MariaDB service, and then click Create to create and view the MariaDB service in the Topology view.
Additional resources
For more information about Knative routing settings for OpenShift Serverless, see Routing.

For more information about domain mapping settings for OpenShift Serverless, see Configuring a custom domain for a Knative service.

For more information about Knative autoscaling settings for OpenShift Serverless, see Autoscaling.

For more information about adding a new user to a project, see Working with projects.

For more information about creating a Helm Chart repository, see Creating Helm Chart repositories.