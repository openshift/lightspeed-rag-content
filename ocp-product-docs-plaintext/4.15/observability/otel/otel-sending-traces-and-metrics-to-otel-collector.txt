Sending traces and metrics to the OpenTelemetry Collector

You can set up and use the distributed tracing data collection to send traces to the OpenTelemetry Collector or the TempoStack instance.

Sending traces and metrics to the OpenTelemetry Collector is possible with or without sidecar injection.
Sending traces and metrics to the OpenTelemetry Collector with sidecar injection
You can set up sending telemetry data to an OpenTelemetry Collector instance with sidecar injection.

The Red Hat OpenShift distributed tracing data collection Operator allows sidecar injection into deployment workloads and automatic configuration of your instrumentation to send telemetry data to the OpenTelemetry Collector.

The Red Hat OpenShift distributed tracing platform (Tempo) is installed, and a TempoStack instance is deployed.

You have access to the cluster through the web console or the OpenShift CLI (`oc`):


Create a project for an OpenTelemetry Collector instance.

Create a service account.

Grant the permissions to the service account for the k8sattributes and resourcedetection processors.

Deploy the OpenTelemetry Collector as a sidecar.

Create your deployment using the otel-collector-sidecar service account.

Add the sidecar.opentelemetry.io/inject: "true" annotation to your Deployment object. This will inject all the needed environment variables to send data from your workloads to the OpenTelemetry Collector instance.
Sending traces and metrics to the OpenTelemetry Collector without sidecar injection
You can set up sending telemetry data to an OpenTelemetry Collector instance without sidecar injection, which involves manually setting several environment variables.

The Red Hat OpenShift distributed tracing platform (Tempo) is installed, and a TempoStack instance is deployed.

You have access to the cluster through the web console or the OpenShift CLI (`oc`):


Create a project for an OpenTelemetry Collector instance.

Create a service account.

Grant the permissions to the service account for the k8sattributes and resourcedetection processors.

Deploy the OpenTelemetry Collector instance with the OpenTelemetryCollector custom resource.

Set the environment variables in the container with your instrumented application.