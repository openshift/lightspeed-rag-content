Managing metrics

You can collect metrics to monitor how cluster components and your own workloads are performing.
Understanding metrics
In Red Hat OpenShift Container Platform 4.15, cluster components are monitored by scraping metrics exposed through service endpoints. You can also configure metrics collection for user-defined projects. Metrics enable you to monitor how cluster components and your own workloads are performing.

You can define the metrics that you want to provide for your own workloads by using Prometheus client libraries at the application level.

In Red Hat OpenShift Container Platform, metrics are exposed through an HTTP service endpoint under the /metrics canonical name. You can list all available metrics for a service by running a curl query against \http://<endpoint>/metrics. For instance, you can expose a route to the prometheus-example-app example application and then run the following to view all of its available metrics:

$ curl http://<example_app_endpoint>/metrics
# HELP http_requests_total Count of all HTTP requests
# TYPE http_requests_total counter
http_requests_total{code="200",method="get"} 4
http_requests_total{code="404",method="get"} 2
# HELP version Version information about this binary
# TYPE version gauge
version{version="v0.1.0"} 1
Prometheus client library documentation
Setting up metrics collection for user-defined projects
You can create a ServiceMonitor resource to scrape metrics from a service endpoint in a user-defined project. This assumes that your application uses a Prometheus client library to expose metrics to the /metrics canonical name.

This section describes how to deploy a sample service in a user-defined project and then create a ServiceMonitor resource that defines how that service should be monitored.

Deploying a sample service
To test monitoring of a service in a user-defined project, you can deploy a sample service.

Create a YAML file for the service configuration. In this example, it is called prometheus-example-app.yaml.

Add the following deployment and service configuration details to the file:

Apply the configuration to the cluster:

You can check that the pod is running:
Specifying how a service is monitored
To use the metrics exposed by your service, you must configure Red Hat OpenShift Container Platform monitoring to scrape metrics from the /metrics endpoint. You can do this using a ServiceMonitor custom resource definition (CRD) that specifies how a service should be monitored, or a PodMonitor CRD that specifies how a pod should be monitored. The former requires a Service object, while the latter does not, allowing Prometheus to directly scrape metrics from the metrics endpoint exposed by a pod.

This procedure shows you how to create a ServiceMonitor resource for a service in a user-defined project.

You have access to the cluster as a user with the cluster-admin cluster role or the monitoring-edit cluster role.

You have enabled monitoring for user-defined projects.

For this example, you have deployed the prometheus-example-app sample service in the ns1 project.


Create a YAML file for the ServiceMonitor resource configuration. In this example, the file is called example-app-service-monitor.yaml.

Add the following ServiceMonitor resource configuration details:

Apply the configuration to the cluster:

You can check that the ServiceMonitor resource is running:


Enabling monitoring for user-defined projects

How to scrape metrics using TLS in a ServiceMonitor configuration in a user-defined project

PodMonitor API

ServiceMonitor API
Viewing a list of available metrics
As a cluster administrator or as a user with view permissions for all projects, you can view a list of metrics available in a cluster and output the list in JSON format.

You are a cluster administrator, or you have access to the cluster as a user with the cluster-monitoring-view cluster role.

You have installed the Red Hat OpenShift Container Platform CLI (oc).

You have obtained the Red Hat OpenShift Container Platform API route for Thanos Querier.

You are able to get a bearer token by using the oc whoami -t command.


If you have not obtained the Red Hat OpenShift Container Platform API route for Thanos Querier, run the following command:

Retrieve a list of metrics in JSON format from the Thanos Querier API route by running the following command. This command uses oc to authenticate with a bearer token.
Querying metrics
The Red Hat OpenShift Container Platform monitoring dashboard enables you to run Prometheus Query Language (PromQL) queries to examine metrics visualized on a plot. This functionality provides information about the state of a cluster and any user-defined workloads that you are monitoring.

As a cluster administrator, you can query metrics for all core Red Hat OpenShift Container Platform and user-defined projects.

As a developer, you must specify a project name when querying metrics. You must have the required privileges to view metrics for the selected project.

Querying metrics for all projects as a cluster administrator
As a cluster administrator or as a user with view permissions for all projects, you can access metrics for all default Red Hat OpenShift Container Platform and user-defined projects in the Metrics UI.

You have access to the cluster as a user with the cluster-admin cluster role or with view permissions for all projects.

You have installed the OpenShift CLI (oc).


From the Administrator perspective in the Red Hat OpenShift Container Platform web console, select Observe -> Metrics.

To add one or more queries, do any of the following:

To run queries that you created, select Run queries. The metrics from the queries are visualized on the plot. If a query is invalid, the UI shows an error message.

Optional: The page URL now contains the queries you ran. To use this set of queries again in the future, save this URL.

Explore the visualized metrics. Initially, all metrics from all enabled queries are shown on the plot. You can select which metrics are shown by doing any of the following:


For more information about creating PromQL queries, see the Prometheus query documentation.
Querying metrics for user-defined projects as a developer
You can access metrics for a user-defined project as a developer or as a user with view permissions for the project.

In the Developer perspective, the Metrics UI includes some predefined CPU, memory, bandwidth, and network packet queries for the selected project. You can also run custom Prometheus Query Language (PromQL) queries for CPU, memory, bandwidth, network packet and application metrics for the project.

Developers can only use the Developer perspective and not the Administrator perspective. As a developer, you can only query metrics for one project at a time.
You have access to the cluster as a developer or as a user with view permissions for the project that you are viewing metrics for.

You have enabled monitoring for user-defined projects.

You have deployed a service in a user-defined project.

You have created a ServiceMonitor custom resource definition (CRD) for the service to define how the service is monitored.


From the Developer perspective in the Red Hat OpenShift Container Platform web console, select Observe -> Metrics.

Select the project that you want to view metrics for in the Project: list.

Select a query from the Select query list, or create a custom PromQL query based on the selected query by selecting Show PromQL. The metrics from the queries are visualized on the plot.

Explore the visualized metrics by doing any of the following:


For more information about creating PromQL queries, see the Prometheus query documentation.
Getting detailed information about a metrics target
In the Administrator perspective in the Red Hat OpenShift Container Platform web console, you can use the Metrics targets page to view, search, and filter the endpoints that are currently targeted for scraping, which helps you to identify and troubleshoot problems. For example, you can view the current status of targeted endpoints to see when Red Hat OpenShift Container Platform Monitoring is not able to scrape metrics from a targeted component.

The Metrics targets page shows targets for default Red Hat OpenShift Container Platform projects and for user-defined projects.

You have access to the cluster as an administrator for the project for which you want to view metrics targets.


In the Administrator perspective, select Observe -> Targets. The Metrics targets page opens with a list of all service endpoint targets that are being scraped for metrics.

Optional: The list of metrics targets can be long. To find a specific target, do any of the following:

Click the URL in the Endpoint column for a target to navigate to its Target details page. This page provides information about the target, including the following: