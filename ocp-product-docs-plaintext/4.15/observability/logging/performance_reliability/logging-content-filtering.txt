Filtering logs by content

Collecting all logs from a cluster might produce a large amount of data, which can be expensive to transport and store.

You can reduce the volume of your log data by filtering out low priority data that does not need to be stored. Logging subsystem provides content filters that you can use to reduce the volume of log data.

Content filters are distinct from input selectors. input selectors select or ignore entire log streams based on source metadata. Content filters edit log streams to remove and modify records based on the record content.
Log data volume can be reduced by using one of the following methods:

Configuring content filters to drop unwanted log records

Configuring content filters to prune log records
Configuring content filters to drop unwanted log records
When the drop filter is configured, the log collector evaluates log streams according to the filters before forwarding. The collector drops unwanted log records that match the specified configuration.

You have installed the Red Hat OpenShift Logging Operator.

You have administrator permissions.

You have created a ClusterLogForwarder custom resource (CR).


Add a configuration for a filter to the filters spec in the ClusterLogForwarder CR.

Apply the ClusterLogForwarder CR by running the following command:


The following additional example shows how you can configure the drop filter to only keep higher priority log records:

apiVersion: logging.openshift.io/v1
kind: ClusterLogForwarder
metadata:
# ...
spec:
  filters:
  - name: important
    type: drop
    drop:
      test:
      - field: .message
        notMatches: "(?i)critical|error"
      - field: .level
        matches: "info|warning"
# ...
In addition to including multiple field paths in a single test configuration, you can also include additional tests that are treated as OR checks. In the following example, records are dropped if either test configuration evaluates to true. However, for the second test configuration, both field specs must be true for it to be evaluated to true:

apiVersion: logging.openshift.io/v1
kind: ClusterLogForwarder
metadata:
# ...
spec:
  filters:
  - name: important
    type: drop
    drop:
      test:
      - field: .kubernetes.namespace_name
        matches: "^open"
      test:
      - field: .log_type
        matches: "application"
      - field: .kubernetes.pod_name
        notMatches: "my-pod"
# ...
Configuring content filters to prune log records
When the prune filter is configured, the log collector evaluates log streams according to the filters before forwarding. The collector prunes log records by removing low value fields such as pod annotations.

You have installed the Red Hat OpenShift Logging Operator.

You have administrator permissions.

You have created a ClusterLogForwarder custom resource (CR).


Add a configuration for a filter to the prune spec in the ClusterLogForwarder CR.

Apply the ClusterLogForwarder CR by running the following command:
Additional resources
About forwarding logs to third-party systems