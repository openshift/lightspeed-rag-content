Using Ruby on Rails

Ruby on Rails is a web framework written in Ruby. This guide covers using Rails 4 on Red Hat OpenShift Container Platform.

Go through the whole tutorial to have an overview of all the steps necessary to run your application on the Red Hat OpenShift Container Platform. If you experience a problem try reading through the entire tutorial and then going back to your issue. It can also be useful to review your previous steps to ensure that all the steps were run correctly.
Prerequisites
Basic Ruby and Rails knowledge.

Locally installed version of Ruby 2.0.0+, Rubygems, Bundler.

Basic Git knowledge.

Running instance of Red Hat OpenShift Container Platform 4.

Make sure that an instance of Red Hat OpenShift Container Platform is running and is available. Also make sure that your oc CLI client is installed and the command is accessible from your command shell, so you can use it to log in using your email address and password.
Setting up the database
Rails applications are almost always used with a database. For local development use the PostgreSQL database.

Install the database:

Initialize the database:

Start the database:

When the database is running, create your rails user:
Writing your application
If you are starting your Rails application from scratch, you must install the Rails gem first. Then you can proceed with writing your application.

Install the Rails gem:

After you install the Rails gem, create a new application with PostgreSQL as your database:

Change into your new application directory:

If you already have an application, make sure the pg (postgresql) gem is present in your Gemfile. If not, edit your Gemfile by adding the gem:

Generate a new Gemfile.lock with all your dependencies:

In addition to using the postgresql database with the pg gem, you also must ensure that the config/database.yml is using the postgresql adapter.

Create your application's development and test databases:


Creating a welcome page
Since Rails 4 no longer serves a static public/index.html page in production, you must create a new root page.

To have a custom welcome page must do following steps:

Create a controller with an index action.

Create a view page for the welcome controller index action.

Create a route that serves applications root page with the created controller and view.


Rails offers a generator that completes all necessary steps for you.

Run Rails generator:

edit line 2 in config/routes.rb file as follows:

Run the rails server to verify the page is available:
Configuring application for Red Hat OpenShift Container Platform
To have your application communicate with the PostgreSQL database service running in Red Hat OpenShift Container Platform you must edit the default section in your config/database.yml to use environment variables, which you must define later, upon the database service creation.

Edit the default section in your config/database.yml with pre-defined variables as follows:
Storing your application in Git
Building an application in Red Hat OpenShift Container Platform usually requires that the source code be stored in a git repository, so you must install git if you do not already have it.

Install git.


Make sure you are in your Rails application directory by running the ls -1 command. The output of the command should look like:

Run the following commands in your Rails app directory to initialize and commit your code to git:

Set the remote that points to your git repository:

Push your application to your remote git repository.
Deploying your application to Red Hat OpenShift Container Platform
You can deploy you application to Red Hat OpenShift Container Platform.

After creating the rails-app project, you are automatically switched to the new project namespace.

Deploying your application in Red Hat OpenShift Container Platform involves three steps:

Creating a database service from Red Hat OpenShift Container Platform's PostgreSQL image.

Creating a frontend service from Red Hat OpenShift Container Platform's Ruby 2.0 builder image and
your Ruby on Rails source code, which are wired with the database service.

Creating a route for your application.


Creating the database service
Your Rails application expects a running database service. For this service use PostgreSQL database image.

To create the database service, use the oc new-app command. To this command you must pass some necessary environment variables which are used inside the database container. These environment variables are required to set the username, password, and name of the database. You can change the values of these environment variables to anything you would like. The variables are as follows:

POSTGRESQL_DATABASE

POSTGRESQL_USER

POSTGRESQL_PASSWORD


Setting these variables ensures:

A database exists with the specified name.

A user exists with the specified name.

The user can access the specified database with the specified password.


Create the database service:

Watch the progress:
Creating the frontend service
To bring your application to Red Hat OpenShift Container Platform, you must specify a repository in which your application lives.

Create the frontend service and specify database related environment variables that were setup when creating the database service:

Verify the environment variables have been added by viewing the JSON document of the rails-app deployment config:

Check the build process:

After the build is complete, look at the running pods in Red Hat OpenShift Container Platform:

Before your application is functional, you must initialize the database by running the database migration script. There are two ways you can do this:
Creating a route for your application
You can expose a service to create a route for your application.