Adding API server certificates

The default API server certificate is issued by an internal Red Hat OpenShift Container Platform cluster CA. Clients outside of the cluster will not be able to verify the API server's certificate by default. This certificate can be replaced by one that is issued by a CA that clients trust.
Add an API server named certificate
The default API server certificate is issued by an internal Red Hat OpenShift Container Platform cluster CA. You can add one or more alternative certificates that the API server will return based on the fully qualified domain name (FQDN) requested by the client, for example when a reverse proxy or load balancer is used.

You must have a certificate for the FQDN and its corresponding private key. Each should be in a separate PEM format file.

The private key must be unencrypted. If your key is encrypted, decrypt it
before importing it into Red Hat OpenShift Container Platform.

The certificate must include the subjectAltName extension showing the FQDN.

The certificate file can contain one or more certificates in a chain. The
certificate for the API server FQDN must be the first certificate in the file.
It can then be followed with any intermediate certificates, and the file should
end with the root CA certificate.


Do not provide a named certificate for the internal load balancer (host name api-int.<cluster_name>.<base_domain>). Doing so will leave your cluster in a degraded state.
Login to the new API as the kubeadmin user.

Get the kubeconfig file.

Create a secret that contains the certificate chain and private key in the
openshift-config namespace.

Update the API server to reference the created secret.

Examine the apiserver/cluster object and confirm the secret is now
referenced.

Check the kube-apiserver operator, and verify that a new revision of the Kubernetes API server rolls out.
It may take a minute for the operator to detect the configuration change and trigger a new deployment.
While the new revision is rolling out, PROGRESSING will report True.