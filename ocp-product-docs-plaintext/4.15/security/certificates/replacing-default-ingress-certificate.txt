Replacing the default ingress certificate

Understanding the default ingress certificate
By default, "Red Hat OpenShift Container Platform" uses the Ingress Operator to create an internal CA and issue a wildcard certificate that is valid for applications under the .apps sub-domain. Both the web console and CLI use this certificate as well.

The internal infrastructure CA certificates are self-signed. While this process might be perceived as bad practice by some security or PKI teams, any risk here is minimal. The only clients that implicitly trust these certificates are other components within the cluster. Replacing the default wildcard certificate with one that is issued by a public CA already included in the CA bundle as provided by the container userspace allows external clients to connect securely to applications running under the .apps sub-domain.
Replacing the default ingress certificate
You can replace the default ingress certificate for all applications under the .apps subdomain. After you replace the certificate, all applications, including the web console and CLI, will have encryption provided by specified certificate.

You must have a wildcard certificate for the fully qualified .apps subdomain
and its corresponding private key. Each should be in a separate PEM format file.

The private key must be unencrypted. If your key is encrypted, decrypt it
before importing it into "Red Hat OpenShift Container Platform".

The certificate must include the subjectAltName extension showing
*.apps.<clustername>.<domain>.

The certificate file can contain one or more certificates in a chain. The
wildcard certificate must be the first certificate in the file. It can then be
followed with any intermediate certificates, and the file should end with the
root CA certificate.

Copy the root CA certificate into an additional PEM format file.

Verify that all certificates which include -----END CERTIFICATE----- also
end with one carriage return after that line.


Create a config map that includes only the root CA certificate used to sign the wildcard certificate:

Update the cluster-wide proxy configuration with the newly created config map:

Create a secret that contains the wildcard certificate chain and key:

Update the Ingress Controller configuration with the newly created
secret:



Replacing the CA Bundle certificate

Proxy certificate customization