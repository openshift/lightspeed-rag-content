Providing sensitive data to pods by using an external secrets store

Some applications need sensitive information, such as passwords and user names, that you do not want developers to have.

As an alternative to using Kubernetes Secret objects to provide sensitive information, you can use an external secrets store to store the sensitive information. You can use the Secrets Store CSI Driver Operator to integrate with an external secrets store and mount the secret content as a pod volume.

The Secrets Store CSI Driver Operator is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.

For more information about the support scope of Red Hat Technology Preview features, see Technology Preview Features Support Scope.
About the Secrets Store CSI Driver Operator
Kubernetes secrets are stored with Base64 encoding. etcd provides encryption at rest for these secrets, but when secrets are retrieved, they are decrypted and presented to the user. If role-based access control is not configured properly on your cluster, anyone with API or etcd access can retrieve or modify a secret. Additionally, anyone who is authorized to create a pod in a namespace can use that access to read any secret in that namespace.

To store and manage your secrets securely, you can configure the Red Hat OpenShift Container Platform Secrets Store Container Storage Interface (CSI) Driver Operator to mount secrets from an external secret management system, such as Azure Key Vault, by using a provider plugin. Applications can then use the secret, but the secret does not persist on the system after the application pod is destroyed.

The Secrets Store CSI Driver Operator, secrets-store.csi.k8s.io, enables Red Hat OpenShift Container Platform to mount multiple secrets, keys, and certificates stored in enterprise-grade external secrets stores into pods as a volume. The Secrets Store CSI Driver Operator communicates with the provider using gRPC to fetch the mount contents from the specified external secrets store. After the volume is attached, the data in it is mounted into the container's file system. Secrets store volumes are mounted in-line.

Secrets store providers
The following secrets store providers are available for use with the Secrets Store CSI Driver Operator:

AWS Secrets Manager

AWS Systems Manager Parameter Store

Azure Key Vault
Automatic rotation
The Secrets Store CSI driver periodically rotates the content in the mounted volume with the content from the external secrets store. If a secret is updated in the external secrets store, the secret will be updated in the mounted volume. The Secrets Store CSI Driver Operator polls for updates every 2 minutes.

If you enabled synchronization of mounted content as Kubernetes secrets, the Kubernetes secrets are also rotated.

Applications consuming the secret data must watch for updates to the secrets.
Installing the Secrets Store CSI driver
Access to the Red Hat OpenShift Container Platform web console.

Administrator access to the cluster.


To install the Secrets Store CSI driver:

Install the Secrets Store CSI Driver Operator:

Create the ClusterCSIDriver instance for the driver (secrets-store.csi.k8s.io):
Mounting secrets from an external secrets store to a CSI volume
After installing the Secrets Store CSI Driver Operator, you can mount secrets from one of the following external secrets stores to a CSI volume:

AWS Secrets Manager

AWS Systems Manager Parameter Store

Azure Key Vault


Mounting secrets from AWS Secrets Manager
You can use the Secrets Store CSI Driver Operator to mount secrets from AWS Secrets Manager to a CSI volume in Red Hat OpenShift Container Platform. To mount secrets from AWS Secrets Manager, your cluster must be installed on AWS and use AWS Security Token Service (STS).

It is not supported to use the Secrets Store CSI Driver Operator with AWS Secrets Manager in a hosted control plane cluster.
Your cluster is installed on AWS and uses AWS Security Token Service (STS).

You have installed the Secrets Store CSI Driver Operator. See Installing the Secrets Store CSI driver for instructions.

You have configured AWS Secrets Manager to store the required secrets.

You have extracted and prepared the ccoctl binary.

You have installed the jq CLI tool.

You have access to the cluster as a user with the cluster-admin role.


Install the AWS Secrets Manager provider:

Grant permission to allow the service account to read the AWS secret object:

Create a secret provider class to define your secrets store provider:

Create a deployment to use this secret provider class:


Verify that you can access the secrets from AWS Secrets Manager in the pod volume mount:


Configuring the Cloud Credential Operator utility
Mounting secrets from AWS Systems Manager Parameter Store
You can use the Secrets Store CSI Driver Operator to mount secrets from AWS Systems Manager Parameter Store to a CSI volume in Red Hat OpenShift Container Platform. To mount secrets from AWS Systems Manager Parameter Store, your cluster must be installed on AWS and use AWS Security Token Service (STS).

It is not supported to use the Secrets Store CSI Driver Operator with AWS Systems Manager Parameter Store in a hosted control plane cluster.
Your cluster is installed on AWS and uses AWS Security Token Service (STS).

You have installed the Secrets Store CSI Driver Operator. See Installing the Secrets Store CSI driver for instructions.

You have configured AWS Systems Manager Parameter Store to store the required secrets.

You have extracted and prepared the ccoctl binary.

You have installed the jq CLI tool.

You have access to the cluster as a user with the cluster-admin role.


Install the AWS Systems Manager Parameter Store provider:

Grant permission to allow the service account to read the AWS secret object:

Create a secret provider class to define your secrets store provider:

Create a deployment to use this secret provider class:


Verify that you can access the secrets from AWS Systems Manager Parameter Store in the pod volume mount:


Configuring the Cloud Credential Operator utility
Mounting secrets from Azure Key Vault
You can use the Secrets Store CSI Driver Operator to mount secrets from Azure Key Vault to a CSI volume in Red Hat OpenShift Container Platform. To mount secrets from Azure Key Vault, your cluster must be installed on Microsoft Azure.

Your cluster is installed on Azure.

You have installed the Secrets Store CSI Driver Operator. See Installing the Secrets Store CSI driver for instructions.

You have configured Azure Key Vault to store the required secrets.

You have installed the Azure CLI (az).

You have access to the cluster as a user with the cluster-admin role.


Install the Azure Key Vault provider:

Create a service principal to access the key vault:

Create a secret provider class to define your secrets store provider:

Create a deployment to use this secret provider class:


Verify that you can access the secrets from Azure Key Vault in the pod volume mount:
Enabling synchronization of mounted content as Kubernetes secrets
You can enable synchronization to create Kubernetes secrets from the content on a mounted volume. An example where you might want to enable synchronization is to use an environment variable in your deployment to reference the Kubernetes secret.

Do not enable synchronization if you do not want to store your secrets on your Red Hat OpenShift Container Platform cluster and in etcd. Enable this functionality only if you require it, such as when you want to use environment variables to refer to the secret.
If you enable synchronization, the secrets from the mounted volume are synchronized as Kubernetes secrets after you start a pod that mounts the secrets.

The synchronized Kubernetes secret is deleted when all pods that mounted the content are deleted.

You have installed the Secrets Store CSI Driver Operator.

You have installed a secrets store provider.

You have created the secret provider class.

You have access to the cluster as a user with the cluster-admin role.


Edit the SecretProviderClass resource by running the following command:

Add the secretsObjects section with the configuration for the synchronized Kubernetes secrets:

Save the file to apply the changes.
Viewing the status of secrets in the pod volume mount
You can view detailed information, including the versions, of the secrets in the pod volume mount.

The Secrets Store CSI Driver Operator creates a SecretProviderClassPodStatus resource in the same namespace as the pod. You can review this resource to see detailed information, including versions, about the secrets in the pod volume mount.

You have installed the Secrets Store CSI Driver Operator.

You have installed a secrets store provider.

You have created the secret provider class.

You have deployed a pod that mounts a volume from the Secrets Store CSI Driver Operator.

You have access to the cluster as a user with the cluster-admin role.


View detailed information about the secrets in a pod volume mount by running the following command:
Uninstalling the Secrets Store CSI Driver Operator
Access to the Red Hat OpenShift Container Platform web console.

Administrator access to the cluster.


To uninstall the Secrets Store CSI Driver Operator:

Stop all application pods that use the secrets-store.csi.k8s.io provider.

Remove any third-party provider plug-in for your chosen secret store.

Remove the Container Storage Interface (CSI) driver and associated manifests:

Verify that the CSI driver pods are no longer running.

Uninstall the Secrets Store CSI Driver Operator: