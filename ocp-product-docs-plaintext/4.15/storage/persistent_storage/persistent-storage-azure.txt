Persistent storage using Azure

Red Hat OpenShift Container Platform supports Microsoft Azure Disk volumes. You can provision your Red Hat OpenShift Container Platform cluster with persistent storage using Azure. Some familiarity with Kubernetes and Azure is assumed. The Kubernetes persistent volume framework allows administrators to provision a cluster with persistent storage and gives users a way to request those resources without having any knowledge of the underlying infrastructure. Azure Disk volumes can be provisioned dynamically. Persistent volumes are not bound to a single project or namespace; they can be shared across the Red Hat OpenShift Container Platform cluster. Persistent volume claims are specific to a project or namespace and can be requested by users.

Red Hat OpenShift Container Platform 4.11 and later provides automatic migration for the Azure Disk in-tree volume plugin to its equivalent CSI driver.

CSI automatic migration should be seamless. Migration does not change how you use all existing API objects, such as persistent volumes, persistent volume claims, and storage classes. For more information about migration, see CSI automatic migration.
High availability of storage in the infrastructure is left to the underlying storage provider.
Microsoft Azure Disk
Creating the Azure storage class
Storage classes are used to differentiate and delineate storage levels and usages. By defining a storage class, users can obtain dynamically provisioned persistent volumes.

In the Red Hat OpenShift Container Platform console, click Storage -> Storage Classes.

In the storage class overview, click Create Storage Class.

Define the desired options on the page that appears.

Click Create to create the storage class.


Azure Disk Storage Class
Creating the persistent volume claim
Storage must exist in the underlying infrastructure before it can be mounted as a volume in Red Hat OpenShift Container Platform.

In the Red Hat OpenShift Container Platform console, click Storage -> Persistent Volume Claims.

In the persistent volume claims overview, click Create Persistent Volume
Claim.

Define the desired options on the page that appears.

Click Create to create the persistent volume claim and generate a persistent
volume.
Volume format
Before Red Hat OpenShift Container Platform mounts the volume and passes it to a container, it checks that it contains a file system as specified by the fsType parameter in the persistent volume definition. If the device is not formatted with the file system, all data from the device is erased and the device is automatically formatted with the given file system.

This allows using unformatted Azure volumes as persistent volumes, because Red Hat OpenShift Container Platform formats them before the first use.
Machine sets that deploy machines with ultra disks using PVCs
You can create a machine set running on Azure that deploys machines with ultra disks. Ultra disks are high-performance storage that are intended for use with the most demanding data workloads.

Both the in-tree plugin and CSI driver support using PVCs to enable ultra disks. You can also deploy machines with ultra disks as data disks without creating a PVC.

Microsoft Azure ultra disks documentation

Machine sets that deploy machines on ultra disks using CSI PVCs

Machine sets that deploy machines on ultra disks as data disks


Creating machines with ultra disks by using machine sets
You can deploy machines with ultra disks on Azure by editing your machine set YAML file.

Have an existing Microsoft Azure cluster.


Copy an existing Azure MachineSet custom resource (CR) and edit it by running the following command:

Add the following lines in the positions indicated:

Create a machine set using the updated configuration by running the following command:

Create a storage class that contains the following YAML definition:

Create a persistent volume claim (PVC) to reference the ultra-disk-sc storage class that contains the following YAML definition:

Create a pod that contains the following YAML definition:


Validate that the machines are created by running the following command:

For a machine that is running and has a node attached, validate the partition by running the following command:


To use an ultra disk from within a pod, create a workload that uses the mount point. Create a YAML file similar to the following example:
Troubleshooting resources for machine sets that enable ultra disks
Use the information in this section to understand and recover from issues you might encounter.

Unable to mount a persistent volume claim backed by an ultra disk
If there is an issue mounting a persistent volume claim backed by an ultra disk, the pod becomes stuck in the ContainerCreating state and an alert is triggered.

For example, if the additionalCapabilities.ultraSSDEnabled parameter is not set on the machine that backs the node that hosts the pod, the following error message appears:

StorageAccountType UltraSSD_LRS can be used only when additionalCapabilities.ultraSSDEnabled is set.
To resolve this issue, describe the pod by running the following command: