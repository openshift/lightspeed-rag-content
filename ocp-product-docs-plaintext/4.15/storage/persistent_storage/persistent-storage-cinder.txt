Persistent storage using Cinder

Red Hat OpenShift Container Platform supports OpenStack Cinder.  Some familiarity with Kubernetes and OpenStack is assumed.

Cinder volumes can be provisioned dynamically. Persistent volumes are not bound to a single project or namespace; they can be shared across the Red Hat OpenShift Container Platform cluster. Persistent volume claims are specific to a project or namespace and can be requested by users.

Red Hat OpenShift Container Platform 4.11 and later provides automatic migration for the Cinder in-tree volume plugin to its equivalent CSI driver.

CSI automatic migration should be seamless. Migration does not change how you use all existing API objects, such as persistent volumes, persistent volume claims, and storage classes. For more information about migration, see CSI automatic migration.
For more information about how OpenStack Block Storage provides persistent block storage management for virtual hard drives, see OpenStack Cinder.
Manual provisioning with Cinder
Storage must exist in the underlying infrastructure before it can be mounted as a volume in Red Hat OpenShift Container Platform.

Red Hat OpenShift Container Platform configured for OpenStack

Cinder volume ID


Creating the persistent volume
You must define your persistent volume (PV) in an object definition before creating it in Red Hat OpenShift Container Platform:

Save your object definition to a file.

Create the object definition file you saved in the previous step.
Persistent volume formatting
You can use unformatted Cinder volumes as PVs because Red Hat OpenShift Container Platform formats them before the first use.

Before Red Hat OpenShift Container Platform mounts the volume and passes it to a container, the system checks that it contains a file system as specified by the fsType parameter in the PV definition. If the device is not formatted with the file system, all data from the device is erased and the device is automatically formatted with the given file system.
Cinder volume security
If you use Cinder PVs in your application, configure security for their deployment configurations.

An SCC must be created that uses the appropriate fsGroup strategy.


Create a service account and add it to the SCC:

In your application's deployment configuration, provide the service account
name and securityContext: