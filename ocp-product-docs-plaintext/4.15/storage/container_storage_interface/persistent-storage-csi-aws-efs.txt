AWS Elastic File Service CSI Driver Operator

Overview
Red Hat OpenShift Container Platform is capable of provisioning persistent volumes (PVs) using the Container Storage Interface (CSI) driver for AWS Elastic File Service (EFS).

Familiarity with persistent storage and configuring CSI volumes is recommended when working with a CSI Operator and driver.

After installing the AWS EFS CSI Driver Operator, Red Hat OpenShift Container Platform installs the AWS EFS CSI Operator and the AWS EFS CSI driver by default in the openshift-cluster-csi-drivers namespace. This allows the AWS EFS CSI Driver Operator to create CSI-provisioned PVs that mount to AWS EFS assets.

The AWS EFS CSI Driver Operator, after being installed, does not create a storage class by default to use to create persistent volume claims (PVCs). However, you can manually create the AWS EFS StorageClass.
The AWS EFS CSI Driver Operator supports dynamic volume provisioning by allowing storage volumes to be created on-demand.
This eliminates the need for cluster administrators to pre-provision storage.

The AWS EFS CSI driver enables you to create and mount AWS EFS PVs.


AWS EFS only supports regional volumes, not zonal volumes.
About CSI
Storage vendors have traditionally provided storage drivers as part of Kubernetes. With the implementation of the Container Storage Interface (CSI), third-party providers can instead deliver storage plugins using a standard interface without ever having to change the core Kubernetes code.

CSI Operators give Red Hat OpenShift Container Platform users storage options, such as volume snapshots, that are not possible with in-tree volume plugins.
Setting up the AWS EFS CSI Driver Operator
Install the AWS EFS CSI Driver Operator (a Red Hat operator).

Install the AWS EFS CSI Driver Operator.

Install the AWS EFS CSI Driver.


Installing the AWS EFS CSI Driver Operator
The AWS EFS CSI Driver Operator (a Red Hat operator) is not installed in Red Hat OpenShift Container Platform by default. Use the following procedure to install and configure the AWS EFS CSI Driver Operator in your cluster.

Access to the Red Hat OpenShift Container Platform web console.


To install the AWS EFS CSI Driver Operator from the web console:

Log in to the web console.

Install the AWS EFS CSI Operator:


Install the AWS EFS CSI Driver.
Installing the AWS EFS CSI Driver
Access to the Red Hat OpenShift Container Platform web console.


Click Administration -> CustomResourceDefinitions -> ClusterCSIDriver.

On the Instances tab, click Create ClusterCSIDriver.

Use the following YAML file:

Click Create.

Wait for the following Conditions to change to a "True" status:
Creating the AWS EFS storage class
Storage classes are used to differentiate and delineate storage levels and usages. By defining a storage class, users can obtain dynamically provisioned persistent volumes.

The AWS EFS CSI Driver Operator (a Red Hat operator), after being installed, does not create a storage class by default. However, you can manually create the AWS EFS storage class.

Creating the AWS EFS storage class using the console
In the Red Hat OpenShift Container Platform console, click Storage -> StorageClasses.

On the StorageClasses page, click Create StorageClass.

On the StorageClass page, perform the following steps:

Click Create.
Creating the AWS EFS storage class using the CLI
Create a StorageClass object:
AWS EFS CSI cross account support
Cross account support allows you to have an Red Hat OpenShift Container Platform cluster in one AWS account and mount your file system in another AWS account using the AWS Elastic File System (EFS) Container Storage Interface (CSI) driver.

Both the Red Hat OpenShift Container Platform cluster and EFS file system must be in the same region.
Access to an Red Hat OpenShift Container Platform cluster with administrator rights

Two valid AWS accounts


The following procedure demonstrates how to set up:

Red Hat OpenShift Container Platform cluster in AWS account A

Mount an AWS EFS file system in account B


To use AWS EFS across accounts:

Install Red Hat OpenShift Container Platform cluster with AWS account A and install the EFS CSI Driver Operator.

Create an EFS volume in AWS account B:

Configure networking access to the AWS EFS volume on AWS account B:

Create VPC peering between the Red Hat OpenShift Container Platform cluster VPC in AWS account A and the AWS EFS VPC in AWS account B:

Create an IAM role, for example, “my-efs-acrossaccount-role” in AWS account B, which has a trust relationship with AWS account A, and add an inline AWS EFS policy with permissions to call “my-efs-acrossaccount-driver-policy”.

In AWS account A, attach an inline policy to the IAM role of the AWS EFS CSI driver's controller service account with the necessary permissions to perform Security Token Service (STS) assume role on the IAM role created earlier.

In AWS account A, attach the AWS-managed policy “AmazonElasticFileSystemClientFullAccess” to Red Hat OpenShift Container Platform cluster master role. The role name is in the form <clusterID>-master-role (for example, my-0120ef-czjrl-master-role).

Create a Kubernetes secret with awsRoleArn as the key and the role created earlier as the value:

Create a filesystem policy for the file system (AWS EFS volume) in account B, which allows AWS account A to perform a mount on it.

Create an AWS EFS volume storage class using a similar configuration to the following:
Creating and configuring access to EFS volumes in AWS
This procedure explains how to create and configure EFS volumes in AWS so that you can use them in Red Hat OpenShift Container Platform.

AWS account credentials


To create and configure access to an EFS volume in AWS:

On the AWS console, open https://console.aws.amazon.com/efs.

Click Create file system:

Wait for the volume and mount targets to finish being fully created:

On the Network tab, copy the Security Group ID (you will need this in the next step).

Go to https://console.aws.amazon.com/ec2/v2/home#SecurityGroups, and find the Security Group used by the EFS volume.

On the Inbound rules tab, click Edit inbound rules, and then add a new rule with the following settings to allow Red Hat OpenShift Container Platform nodes to access EFS volumes :

Save the rule.
Dynamic provisioning for Amazon Elastic File Storage
The AWS EFS CSI driver supports a different form of dynamic provisioning than other CSI drivers. It provisions new PVs as subdirectories of a pre-existing EFS volume. The PVs are independent of each other. However, they all share the same EFS volume. When the volume is deleted, all PVs provisioned out of it are deleted too. The EFS CSI driver creates an AWS Access Point for each such subdirectory. Due to AWS AccessPoint limits, you can only dynamically provision 1000 PVs from a single StorageClass/EFS volume.

Note that PVC.spec.resources is not enforced by EFS.

In the example below, you request 5 GiB of space. However, the created PV is limitless and can store any amount of data (like petabytes). A broken application, or even a rogue application, can cause significant expenses when it stores too much data on the volume.

Using monitoring of EFS volume sizes in AWS is strongly recommended.
You have created Amazon Elastic File Storage (Amazon EFS) volumes.

You have created the AWS EFS storage class.


To enable dynamic provisioning:

Create a PVC (or StatefulSet or Template) as usual, referring to the StorageClass created previously.


If you have problems setting up dynamic provisioning, see AWS EFS troubleshooting.

Creating and configuring access to AWS EFS volume(s)

Creating the AWS EFS storage class
Creating static PVs with Amazon Elastic File Storage
It is possible to use an Amazon Elastic File Storage (Amazon EFS) volume as a single PV without any dynamic provisioning. The whole volume is mounted to pods.

You have created Amazon EFS volumes.


Create the PV using the following YAML file:


If you have problems setting up static PVs, see AWS EFS troubleshooting.
Amazon Elastic File Storage security
The following information is important for Amazon Elastic File Storage (Amazon EFS) security.

When using access points, for example, by using dynamic provisioning as described earlier, Amazon automatically replaces GIDs on files with the GID of the access point. In addition, EFS considers the user ID, group ID, and secondary group IDs of the access point when evaluating file system permissions. EFS ignores the NFS client's IDs. For more information about access points, see https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html.

As a consequence, EFS volumes silently ignore FSGroup; Red Hat OpenShift Container Platform is not able to replace the GIDs of files on the volume with FSGroup. Any pod that can access a mounted EFS access point can access any file on it.

Unrelated to this, encryption in transit is enabled by default. For more information, see https://docs.aws.amazon.com/efs/latest/ug/encryption-in-transit.html.
Amazon Elastic File Storage troubleshooting
The following information provides guidance on how to troubleshoot issues with Amazon Elastic File Storage (Amazon EFS):

The AWS EFS Operator and CSI driver run in namespace openshift-cluster-csi-drivers.

To initiate gathering of logs of the AWS EFS Operator and CSI driver, run the following command:

To show AWS EFS Operator errors, view the ClusterCSIDriver status:

If a volume cannot be mounted to a pod (as shown in the output of the following command):
Uninstalling the AWS EFS CSI Driver Operator
All EFS PVs are inaccessible after uninstalling the AWS EFS CSI Driver Operator (a Red Hat operator).

Access to the Red Hat OpenShift Container Platform web console.


To uninstall the AWS EFS CSI Driver Operator from the web console:

Log in to the web console.

Stop all applications that use AWS EFS PVs.

Delete all AWS EFS PVs:

Uninstall the AWS EFS CSI driver:

Uninstall the AWS EFS CSI Operator:


Before you can destroy a cluster (openshift-install destroy cluster), you must delete the EFS volume in AWS. An Red Hat OpenShift Container Platform cluster cannot be destroyed when there is an EFS volume that uses the cluster's VPC. Amazon does not allow deletion of such a VPC.
Additional resources
Configuring CSI volumes