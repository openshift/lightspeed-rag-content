Configuring CSI volumes

The Container Storage Interface (CSI) allows Red Hat OpenShift Container Platform to consume storage from storage back ends that implement the CSI interface as persistent storage.

Red Hat OpenShift Container Platform 4.15 supports version 1.6.0 of the CSI specification.
CSI architecture
CSI drivers are typically shipped as container images. These containers are not aware of Red Hat OpenShift Container Platform where they run. To use CSI-compatible storage back end in Red Hat OpenShift Container Platform, the cluster administrator must deploy several components that serve as a bridge between Red Hat OpenShift Container Platform and the storage driver.

The following diagram provides a high-level overview about the components running in pods in the Red Hat OpenShift Container Platform cluster.


It is possible to run multiple CSI drivers for different storage back ends. Each driver needs its own external controllers deployment and daemon set with the driver and CSI registrar.

External CSI controllers
External CSI controllers is a deployment that deploys one or more pods with five containers:

The snapshotter container watches VolumeSnapshot and VolumeSnapshotContent objects and is responsible for the creation and deletion of VolumeSnapshotContent object.

The resizer container is a sidecar container that watches for PersistentVolumeClaim updates and triggers ControllerExpandVolume operations against a CSI endpoint if you request more storage on PersistentVolumeClaim object.

An external CSI attacher container translates attach and detach
calls from Red Hat OpenShift Container Platform to respective ControllerPublish and
ControllerUnpublish calls to the CSI driver.

An external CSI provisioner container that translates provision and
delete calls from Red Hat OpenShift Container Platform to respective CreateVolume and
DeleteVolume calls to the CSI driver.

A CSI driver container.


The CSI attacher and CSI provisioner containers communicate with the CSI driver container using UNIX Domain Sockets, ensuring that no CSI communication leaves the pod. The CSI driver is not accessible from outside of the pod.

The attach, detach, provision, and delete operations typically require the CSI driver to use credentials to the storage backend. Run the CSI controller pods on infrastructure nodes so the credentials are never leaked to user processes, even in the event of a catastrophic security breach on a compute node.
The external attacher must also run for CSI drivers that do not support third-party attach or detach operations. The external attacher will not issue any ControllerPublish or ControllerUnpublish operations to the CSI driver. However, it still must run to implement the necessary Red Hat OpenShift Container Platform attachment API.
CSI driver daemon set
The CSI driver daemon set runs a pod on every node that allows Red Hat OpenShift Container Platform to mount storage provided by the CSI driver to the node and use it in user workloads (pods) as persistent volumes (PVs). The pod with the CSI driver installed contains the following containers:

A CSI driver registrar, which registers the CSI driver into the
openshift-node service running on the node. The openshift-node process
running on the node then directly connects with the CSI driver using the
UNIX Domain Socket available on the node.

A CSI driver.


The CSI driver deployed on the node should have as few credentials to the storage back end as possible. Red Hat OpenShift Container Platform will only use the node plugin set of CSI calls such as NodePublish/NodeUnpublish and NodeStage/NodeUnstage, if these calls are implemented.
CSI drivers supported by Red Hat OpenShift Container Platform
Red Hat OpenShift Container Platform installs certain CSI drivers by default, giving users storage options that are not possible with in-tree volume plugins.

To create CSI-provisioned persistent volumes that mount to these supported storage assets, Red Hat OpenShift Container Platform installs the necessary CSI driver Operator, the CSI driver, and the required storage class by default. For more details about the default namespace of the Operator and driver, see the documentation for the specific CSI Driver Operator.

The AWS EFS and GCP Filestore CSI drivers are not installed by default, and must be installed manually. For instructions on installing the AWS EFS CSI driver, see Setting up AWS Elastic File Service CSI Driver Operator. For instructions on installing the GCP Filestore CSI driver, see Google Compute Platform Filestore CSI Driver Operator.
The following table describes the CSI drivers that are installed with Red Hat OpenShift Container Platform supported by Red Hat OpenShift Container Platform and which CSI features they support, such as volume snapshots and resize.


1.

Requires vSphere version 7.0 Update 3 or later for both vCenter Server and ESXi.

Does not support fileshare volumes.


2.

Offline volume expansion: minimum required vSphere version is 6.7 Update 3 P06

Online volume expansion: minimum required vSphere version is 7.0 Update 2.


3.

Does not support offline snapshots or resize. Volume must be attached to a running pod.
If your CSI driver is not listed in the preceding table, you must follow the installation instructions provided by your CSI storage vendor to use their supported CSI features.
Dynamic provisioning
Dynamic provisioning of persistent storage depends on the capabilities of the CSI driver and underlying storage back end. The provider of the CSI driver should document how to create a storage class in Red Hat OpenShift Container Platform and the parameters available for configuration.

The created storage class can be configured to enable dynamic provisioning.

Create a default storage class that ensures all PVCs that do not require
any special storage class are provisioned by the installed CSI driver.
Example using the CSI driver
The following example installs a default MySQL template without any changes to the template.

The CSI driver has been deployed.

A storage class has been created for dynamic provisioning.


Create the MySQL template:
Volume populators
Volume populators use the datasource field in a persistent volume claim (PVC) spec to create pre-populated volumes.

Volume population is currently enabled, and supported as a Technology Preview feature. However, Red Hat OpenShift Container Platform does not ship with any volume populators.

Volume populators is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.

For more information about the support scope of Red Hat Technology Preview features, see Technology Preview Features Support Scope.
For more information about volume populators, see Kubernetes volume populators.