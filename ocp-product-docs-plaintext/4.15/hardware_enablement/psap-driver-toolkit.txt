Driver Toolkit

Learn about the Driver Toolkit and how you can use it as a base image for driver containers for enabling special software and hardware devices on Red Hat OpenShift Container Platform deployments.
About the Driver Toolkit

The Driver Toolkit is a container image in the Red Hat OpenShift Container Platform payload used as a base image on which you can build driver containers. The Driver Toolkit image includes the kernel packages commonly required as dependencies to build or install kernel modules, as well as a few tools needed in driver containers. The version of these packages will match the kernel version running on the Red Hat Enterprise Linux CoreOS (RHCOS) nodes in the corresponding Red Hat OpenShift Container Platform release.

Driver containers are container images used for building and deploying out-of-tree kernel modules and drivers on container operating systems like RHCOS. Kernel modules and drivers are software libraries running with a high level of privilege in the operating system kernel. They extend the kernel functionalities or provide the hardware-specific code required to control new devices. Examples include hardware devices like Field Programmable Gate Arrays (FPGA) or GPUs, and software-defined storage (SDS) solutions, such as Lustre parallel file systems, which require kernel modules on client machines. Driver containers are the first layer of the software stack used to enable these technologies on Kubernetes.

The list of kernel packages in the Driver Toolkit includes the following and their dependencies:

kernel-core

kernel-devel

kernel-headers

kernel-modules

kernel-modules-extra


In addition, the Driver Toolkit also includes the corresponding real-time kernel packages:

kernel-rt-core

kernel-rt-devel

kernel-rt-modules

kernel-rt-modules-extra


The Driver Toolkit also has several tools that are commonly needed to build and install kernel modules, including:

elfutils-libelf-devel

kmod

binutilskabi-dw

kernel-abi-whitelists

dependencies for the above



Prior to the Driver Toolkit's existence, users would install kernel packages in a pod or build config on Red Hat OpenShift Container Platform using entitled builds or by installing from the kernel RPMs in the hosts machine-os-content. The Driver Toolkit simplifies the process by removing the entitlement step, and avoids the privileged operation of accessing the machine-os-content in a pod. The Driver Toolkit can also be used by partners who have access to pre-released Red Hat OpenShift Container Platform versions to prebuild driver-containers for their hardware devices for future Red Hat OpenShift Container Platform releases.

The Driver Toolkit is also used by the Kernel Module Management (KMM), which is currently available as a community Operator on OperatorHub. KMM supports out-of-tree and third-party kernel drivers and the support software for the underlying operating system. Users can create modules for KMM to build and deploy a driver container, as well as support software like a device plugin, or metrics. Modules can include a build config to build a driver container-based on the Driver Toolkit, or KMM can deploy a prebuilt driver container.
Pulling the Driver Toolkit container image
The driver-toolkit image is available from the Container images section of the Red Hat Ecosystem Catalog and in the Red Hat OpenShift Container Platform release payload. The image corresponding to the most recent minor release of Red Hat OpenShift Container Platform will be tagged with the version number in the catalog. The image URL for a specific release can be found using the oc adm CLI command.

Pulling the Driver Toolkit container image from registry.redhat.io
Instructions for pulling the driver-toolkit image from registry.redhat.io with podman or in Red Hat OpenShift Container Platform can be found on the Red Hat Ecosystem Catalog. The driver-toolkit image for the latest minor release are tagged with the minor release version on registry.redhat.io, for example: registry.redhat.io/openshift4/driver-toolkit-rhel8:v4.15.
Finding the Driver Toolkit image URL in the payload
You obtained the image https://console.redhat.com/openshift/install/pull-secret [pull secret from the Red Hat OpenShift Cluster Manager].

You installed the OpenShift CLI (oc).


Use the oc adm command to extract the image URL of the driver-toolkit corresponding to a certain release:

Obtain this image using a valid pull secret, such as the pull secret required to install Red Hat OpenShift Container Platform:
Using the Driver Toolkit
As an example, the Driver Toolkit can be used as the base image for building a very simple kernel module called simple-kmod.

The Driver Toolkit includes the necessary dependencies, openssl, mokutil, and keyutils, needed to sign a kernel module. However, in this example, the simple-kmod kernel module is not signed and therefore cannot be loaded on systems with Secure Boot enabled.
Build and run the simple-kmod driver container on a cluster
You have a running Red Hat OpenShift Container Platform cluster.

You set the Image Registry Operator state to Managed for your cluster.

You installed the OpenShift CLI (oc).

You are logged into the OpenShift CLI as a user with cluster-admin privileges.


Create a namespace. For example:

$ oc new-project simple-kmod-demo
The YAML defines an ImageStream for storing the simple-kmod driver container image, and a BuildConfig for building the container. Save this YAML as 0000-buildconfig.yaml.template.

Substitute the correct driver toolkit image for the Red Hat OpenShift Container Platform version you are running in place of “DRIVER_TOOLKIT_IMAGE” with the following commands.

Create the image stream and build config with

After the builder pod completes successfully, deploy the driver container image as a DaemonSet.

After the pods are running on the worker nodes, verify that the simple_kmod kernel module is loaded successfully on the host machines with lsmod.
Additional resources
For more information about configuring registry storage for your cluster, see Image Registry Operator in OpenShift Container Platform.