Configuring a private cluster

After you install an "Red Hat OpenShift Container Platform" version "4.15" cluster, you can set some of its core components to be private.
About private clusters
By default, "Red Hat OpenShift Container Platform" is provisioned using publicly-accessible DNS and endpoints. You can set the DNS, Ingress Controller, and API server to private after you deploy your private cluster.

If the cluster has any public subnets, load balancer services created by administrators might be publicly accessible. To ensure cluster security, verify that these services are explicitly annotated as private.

If you install "Red Hat OpenShift Container Platform" on installer-provisioned infrastructure, the installation program creates records in a pre-existing public zone and, where possible, creates a private zone for the cluster's own DNS resolution. In both the public zone and the private zone, the installation program or cluster creates DNS entries for *.apps, for the Ingress object, and api, for the API server.

The *.apps records in the public and private zone are identical, so when you delete the public zone, the private zone seamlessly provides all DNS resolution for the cluster.


Because the default Ingress object is created as public, the load balancer is internet-facing and in the public subnets.

The Ingress Operator generates a default certificate for an Ingress Controller to serve as a placeholder until you configure a custom default certificate. Do not use Operator-generated default certificates in production clusters. The Ingress Operator does not rotate its own signing certificate or the default certificates that it generates. Operator-generated default certificates are intended as placeholders for custom default certificates that you configure.


By default, the installation program creates appropriate network load balancers for the API server to use for both internal and external traffic.

On Amazon Web Services (AWS), separate public and private load balancers are created. The load balancers are identical except that an additional port is available on the internal one for use within the cluster. Although the installation program automatically creates or destroys the load balancer based on API server requirements, the cluster does not manage or maintain them. As long as you preserve the cluster's access to the API server, you can manually modify or move the load balancers. For the public load balancer, port 6443 is open and the health check is configured for HTTPS against the /readyz path.

On Google Cloud Platform, a single load balancer is created to manage both internal and external API traffic, so you do not need to modify the load balancer.

On Microsoft Azure, both public and private load balancers are created. However, because of limitations in current implementation, you just retain both load balancers in a private cluster.
Setting DNS to private
After you deploy a cluster, you can modify its DNS to use only a private zone.

Review the DNS custom resource for your cluster:

Patch the DNS custom resource to remove the public zone:

Optional: Review the DNS custom resource for your cluster and confirm that the public zone was removed:
Setting the Ingress Controller to private
After you deploy a cluster, you can modify its Ingress Controller to use only a private zone.

Modify the default Ingress Controller to use only an internal endpoint:
Restricting the API server to private
After you deploy a cluster to Amazon Web Services (AWS) or Microsoft Azure, you can reconfigure the API server to use only the private zone.

Install the OpenShift CLI (oc).

Have access to the web console as a user with admin privileges.


In the web portal or console for your cloud provider, take the following actions:

AWS clusters: Remove the external load balancers:


Configuring the Ingress Controller endpoint publishing scope to Internal


Configuring the Ingress Controller endpoint publishing scope to Internal
When a cluster administrator installs a new cluster without specifying that the cluster is private, the default Ingress Controller is created with a scope set to External. Cluster administrators can change an External scoped Ingress Controller to Internal.

You installed the oc CLI.


To change an External scoped Ingress Controller to Internal, enter the following command:

To check the status of the Ingress Controller, enter the following command:
Configuring a private storage endpoint on Azure
You can leverage the Image Registry Operator to use private endpoints on Azure, which enables seamless configuration of private storage accounts when "Red Hat OpenShift Container Platform" is deployed on private Azure clusters. This allows you to deploy the image registry without exposing public-facing storage endpoints.

You can configure the Image Registry Operator to use private storage endpoints on Azure in one of two ways:

By configuring the Image Registry Operator to discover the VNet and subnet names

With user-provided Azure Virtual Network (VNet) and subnet names


Limitations for configuring a private storage endpoint on Azure
The following limitations apply when configuring a private storage endpoint on Azure:

When configuring the Image Registry Operator to use a private storage endpoint, public network access to the storage account is disabled. Consequently, pulling images from the registry outside of "Red Hat OpenShift Container Platform" only works by setting disableRedirect: true in the registry Operator configuration. With redirect enabled, the registry redirects the client to pull images directly from the storage account, which will no longer work due to disabled public network access. For more information, see "Disabling redirect when using a private storage endpoint on Azure".

This operation cannot be undone by the Image Registry Operator.
Configuring a private storage endpoint on Azure by enabling the Image Registry Operator to discover VNet and subnet names
The following procedure shows you how to set up a private storage endpoint on Azure by configuring the Image Registry Operator to discover VNet and subnet names.

You have configured the image registry to run on Azure.

Your network has been set up using the Installer Provisioned Infrastructure installation method.


Edit the Image Registry Operator config object and set networkAccess.type to Internal:

Optional: Enter the following command to confirm that the Operator has completed provisioning. This might take a few minutes.

Optional: If the registry is exposed by a route, and you are configuring your storage account to be private, you must disable redirect if you want pulls external to the cluster to continue to work. Enter the following command to disable redirect on the Image Operator configuration:


Fetch the registry service name by running the following command:

Enter debug mode by running the following command:

Run the suggested chroot command. For example:

Enter the following command to log in to your container registry:

Enter the following command to verify that you can pull an image from the registry:
Configuring a private storage endpoint on Azure with user-provided VNet and subnet names
Use the following procedure to configure a storage account that has public network access disabled and is exposed behind a private storage endpoint on Azure.

You have configured the image registry to run on Azure.

You must know the VNet and subnet names used for your Azure environment.

If your network was configured in a separate resource group in Azure, you must also know its name.


Edit the Image Registry Operator config object and configure the private endpoint using your VNet and subnet names:

Optional: Enter the following command to confirm that the Operator has completed provisioning. This might take a few minutes.


Fetch the registry service name by running the following command:

Enter debug mode by running the following command:

Run the suggested chroot command. For example:

Enter the following command to log in to your container registry:

Enter the following command to verify that you can pull an image from the registry:
Optional: Disabling redirect when using a private storage endpoint on Azure
By default, redirect is enabled when using the image registry. Redirect allows off-loading of traffic from the registry pods into the object storage, which makes pull faster. When redirect is enabled and the storage account is private, users from outside of the cluster are unable to pull images from the registry.

In some cases, users might want to disable redirect so that users from outside of the cluster can pull images from the registry.

Use the following procedure to disable redirect.

You have configured the image registry to run on Azure.

You have configured a route.


Enter the following command to disable redirect on the image
registry configuration:


Fetch the registry service name by running the following command:

Enter the following command to log in to your container registry:

Enter the following command to verify that you can pull an image from the registry: