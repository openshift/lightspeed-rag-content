Adding failure domains to an existing Nutanix cluster

By default, the installation program installs control plane and compute machines into a single Nutanix Prism Element (cluster). After an Red Hat OpenShift Container Platform cluster is deployed, you can improve its fault tolerance by adding additional Prism Element instances to the deployment using failure domains.

A failure domain represents a single Prism Element instance to which:

New control plane and compute machines can be deployed.

Existing control plane and compute machines can be distributed.
Failure domain requirements
When planning to use failure domains, consider the following requirements:

All Nutanix Prism Element instances must be managed by the same instance of Prism Central. A deployment that is comprised of multiple Prism Central instances is not supported.

The machines that make up the Prism Element clusters must reside on the same Ethernet network for failure domains to be able to communicate with each other.

A subnet is required in each Prism Element that will be used as a failure domain in the Red Hat OpenShift Container Platform cluster. When defining these subnets, they must share the same IP address prefix (CIDR) and should contain the virtual IP addresses that the Red Hat OpenShift Container Platform cluster uses.
Adding failure domains to the Infrastructure CR
You add failure domains to an existing Nutanix cluster by modifying its Infrastructure custom resource (CR) (infrastructures.config.openshift.io).

It is recommended that you configure three failure domains to ensure high-availability.
Edit the Infrastructure CR by running the following command:

Configure the failure domains.

Save the CR to apply the changes.
Distributing control planes across failure domains
You distribute control planes across Nutanix failure domains by modifying the control plane machine set custom resource (CR).

You have configured the failure domains in the cluster's Infrastructure custom resource (CR).

The control plane machine set custom resource (CR) is in an active state.


For more information on checking the control plane machine set custom resource state, see "Additional resources".

Edit the control plane machine set CR by running the following command:

Configure the control plane machine set to use failure domains by adding a spec.template.machines_v1beta1_machine_openshift_io.failureDomains stanza.

Save your changes.


By default, the control plane machine set propagates changes to your control plane configuration automatically. If the cluster is configured to use the OnDelete update strategy, you must replace your control planes manually. For more information, see "Additional resources".

Checking the control plane machine set custom resource state

Replacing a control plane machine
Distributing compute machines across failure domains
You can distribute compute machines across Nutanix failure domains one of the following ways:

Editing existing compute machine sets allows you to distribute compute machines across Nutanix failure domains as a minimal configuration update.

Replacing existing compute machine sets ensures that the specification is immutable and all your machines are the same.


Editing compute machine sets to implement failure domains
To distribute compute machines across Nutanix failure domains by using an existing compute machine set, you update the compute machine set with your configuration and then use scaling to replace the existing compute machines.

You have configured the failure domains in the cluster's Infrastructure custom resource (CR).


Run the following command to view the cluster's Infrastructure CR.

For each failure domain (platformSpec.nutanix.failureDomains), note the cluster's UUID, name, and subnet object UUID. These values are required to add a failure domain to a compute machine set.

List the compute machine sets in your cluster by running the following command:

Edit the first compute machine set by running the following command:

Configure the compute machine set to use the first failure domain by updating the following to the spec.template.spec.providerSpec.value stanza.

Note the value of spec.replicas, because you need it when scaling the compute machine set to apply the changes.

Save your changes.

List the machines that are managed by the updated compute machine set by running the following command:

For each machine that is managed by the updated compute machine set, set the delete annotation by running the following command:

To create replacement machines with the new configuration, scale the compute machine set to twice the number of replicas by running the following command:

List the machines that are managed by the updated compute machine set by running the following command:

To remove the machines that were created with the old configuration, scale the compute machine set to the original number of replicas by running the following command:

As required, continue to modify machine sets to reference the additional failure domains that are available to the deployment.


Modifying a compute machine set
Replacing compute machine sets to implement failure domains
To distribute compute machines across Nutanix failure domains by replacing a compute machine set, you create a new compute machine set with your configuration, wait for the machines that it creates to start, and then delete the old compute machine set.

You have configured the failure domains in the cluster's Infrastructure custom resource (CR).


Run the following command to view the cluster's Infrastructure CR.

For each failure domain (platformSpec.nutanix.failureDomains), note the cluster's UUID, name, and subnet object UUID. These values are required to add a failure domain to a compute machine set.

List the compute machine sets in your cluster by running the following command:

Note the names of the existing compute machine sets.

Create a YAML file that contains the values for your new compute machine set custom resource (CR) by using one of the following methods:

Configure the new compute machine set to use the first failure domain by updating or adding the following to the spec.template.spec.providerSpec.value stanza in the <new_machine_set_name_1>.yaml file.

Save your changes.

Create a compute machine set CR by running the following command:

As required, continue to create compute machine sets to reference the additional failure domains that are available to the deployment.

List the machines that are managed by the new compute machine sets by running the following command for each new compute machine set:

When you have verified that the new machines are in the Running phase, delete the old compute machine sets by running the following command for each:


To verify that the compute machine sets without the updated configuration are deleted, list the compute machine sets in your cluster by running the following command:

To verify that the compute machines without the updated configuration are deleted, list the machines in your cluster by running the following command:

To verify that a machine created by the new compute machine set has the correct configuration, examine the relevant fields in the CR for one of the new machines by running the following command:


Creating a compute machine set on Nutanix