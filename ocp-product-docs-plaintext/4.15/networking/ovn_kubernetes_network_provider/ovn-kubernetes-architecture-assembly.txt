OVN-Kubernetes architecture

Introduction to OVN-Kubernetes architecture
The following diagram shows the OVN-Kubernetes architecture.


The key components are:

Cloud Management System (CMS) - A platform specific client for OVN that provides a CMS specific plugin for OVN integration. The plugin translates the cloud management system's concept of the logical network configuration, stored in the CMS configuration database in a  CMS-specific  format, into an intermediate representation understood by OVN.

OVN Northbound database (nbdb) container - Stores the logical network configuration passed by the CMS plugin.

OVN Southbound database (sbdb) container - Stores the physical and logical network configuration state for Open vSwitch (OVS) system on each node, including tables that bind them.

OVN north daemon (ovn-northd) - This is the intermediary client between nbdb container and sbdb container. It translates  the logical network configuration in terms of conventional network concepts, taken from the nbdb container, into  logical data path flows in the sbdb container. The container name for ovn-northd daemon is northd and it runs in the ovnkube-node pods.

ovn-controller - This is the OVN agent that interacts with OVS and hypervisors, for any information or update that is needed for sbdb container. The ovn-controller reads logical flows from the sbdb container, translates them into OpenFlow flows and sends them to the nodeâ€™s OVS daemon. The container name is ovn-controller and it runs in the ovnkube-node pods.


The OVN northd, northbound database, and southbound database run on each node in the cluster and mostly contain and process information that is local to that node.

The OVN northbound database has the logical network configuration passed down to it by the cloud management system (CMS). The OVN northbound database contains the current desired state of the network, presented as a collection of logical ports, logical switches, logical routers, and more. The ovn-northd (northd container) connects to the OVN northbound database and the OVN southbound database. It translates the logical network configuration in terms of conventional network concepts, taken from the OVN northbound database, into logical data path flows in the OVN southbound database.

The OVN southbound database has physical and logical representations of the network and binding tables that link them together. It contains the chassis information of the node and other constructs like remote transit switch ports that are required to connect to the other nodes in the cluster. The OVN southbound database also contains all the logic flows. The logic flows are shared with the ovn-controller process that runs on each node and the ovn-controller turns those into OpenFlow rules to program Open vSwitch(OVS).

The Kubernetes control plane nodes contain two ovnkube-control-plane pods on separate nodes, which perform the central IP address management (IPAM) allocation for each node in the cluster. At any given time, a single ovnkube-control-plane pod is the leader.
Listing all resources in the OVN-Kubernetes project
Finding the resources and containers that run in the OVN-Kubernetes project is important to help you understand the OVN-Kubernetes networking implementation.

Access to the cluster as a user with the cluster-admin role.

The OpenShift CLI (oc) installed.


Run the following command to get all resources, endpoints, and ConfigMaps in the OVN-Kubernetes project:

List all of the containers in the ovnkube-node pods by running the following command:

List all the containers in the ovnkube-control-plane pods by running the following command:
Listing the OVN-Kubernetes northbound database contents
Each node is controlled by the ovnkube-controller container running in the ovnkube-node pod on that node. To understand the OVN logical networking entities you need to examine the northbound database that is running as a container inside the ovnkube-node pod on that node to see what objects are in the node you wish to see.

Access to the cluster as a user with the cluster-admin role.

The OpenShift CLI (oc) installed.


To run ovn nbctl or sbctl commands in a cluster you must open a remote shell into the nbdb or sbdb containers on the relevant node
List pods by running the following command:

Optional: To list the pods with node information, run the following command:

Navigate into a pod to look at the northbound database by running the following command:

Run the following command to show all the objects in the northbound database:

Run the following command to display the options available with the command ovn-nbctl:
Command line arguments for ovn-nbctl to examine northbound database contents
The following table describes the command line arguments that can be used with ovn-nbctl to examine the contents of the northbound database.

Open a remote shell in the pod you want to view the contents of and then run the ovn-nbctl commands.
Listing the OVN-Kubernetes southbound database contents
Each node is controlled by the ovnkube-controller container running in the ovnkube-node pod on that node. To understand the OVN logical networking entities you need to examine the northbound database that is running as a container inside the ovnkube-node pod on that node to see what objects are in the node you wish to see.

Access to the cluster as a user with the cluster-admin role.

The OpenShift CLI (oc) installed.


To run ovn nbctl or sbctl commands in a cluster you must open a remote shell into the nbdb or sbdb containers on the relevant node
List the pods by running the following command:

Optional: To list the pods with node information, run the following command:

Navigate into a pod to look at the southbound database:

Run the following command to show all the objects in the southbound database:

Run the following command to display the options available with the command ovn-sbctl:
Command line arguments for ovn-sbctl to examine southbound database contents
The following table describes the command line arguments that can be used with ovn-sbctl to examine the contents of the southbound database.

Open a remote shell in the pod you wish to view the contents of and then run the ovn-sbctl commands.
OVN-Kubernetes logical architecture
OVN is a network virtualization solution. It creates logical switches and routers. These switches and routers are interconnected to create any network topologies. When you run ovnkube-trace with the log level set to 2 or 5 the OVN-Kubernetes logical components are exposed. The following diagram shows how the routers and switches are connected in Red Hat OpenShift Container Platform.


The key components involved in packet processing are:


Gateway routers
Gateway routers sometimes called L3 gateway routers, are typically used between the distributed routers and the physical network. Gateway routers including their logical patch ports are bound to a physical location (not distributed), or chassis. The patch ports on this router are known as l3gateway ports in the ovn-southbound database (ovn-sbdb).
Distributed logical routers
Distributed logical routers and the logical switches behind them, to which virtual machines and containers attach, effectively reside on each hypervisor.
Join local switch
Join local switches are used to connect the distributed router and gateway routers. It reduces the number of IP addresses needed on the distributed router.
Logical switches with patch ports
Logical switches with patch ports are used to virtualize the network stack. They connect remote logical ports through tunnels.
Logical switches with localnet ports
Logical switches with localnet ports are used to connect OVN to the physical network. They connect remote logical ports by bridging the packets to directly connected physical L2 segments using localnet ports.
Patch ports
Patch ports represent connectivity between logical switches and logical routers and between peer logical routers. A single connection has a pair of patch ports at each such point of connectivity, one on each side.
l3gateway ports
l3gateway ports are the port binding entries in the ovn-sbdb for logical patch ports used in the gateway routers. They are called l3gateway ports rather than patch ports just to portray the fact that these ports are bound to a chassis just like the gateway router itself.
localnet ports
localnet ports are present on the bridged logical switches that allows a connection to a locally accessible network from each ovn-controller instance. This helps model the direct connectivity to the physical network from the logical switches. A logical switch can only have a single localnet port attached to it.


Installing network-tools on local host
Install network-tools on your local host to make a collection of tools available for debugging Red Hat OpenShift Container Platform cluster network issues.

Clone the network-tools repository onto your workstation with the following command:

Change into the directory for the repository you just cloned:

Optional: List all available commands:
Running network-tools
Get information about the logical switches and routers by running network-tools.

You installed the OpenShift CLI (oc).

You are logged in to the cluster as a user with cluster-admin privileges.

You have installed network-tools on local host.


Open a remote shell into a pod by running the following command:

List the routers by running the following command:

List the localnet ports by running the following command:

List the l3gateway ports by running the following command:

List the patch ports by running the following command:
Additional resources
Tracing Openflow with ovnkube-trace

OVN architecture

ovn-nbctl linux manual page

ovn-sbctl linux manual page