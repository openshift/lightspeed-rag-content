Troubleshooting OVN-Kubernetes

OVN-Kubernetes has many sources of built-in health checks and logs. Follow the instructions in these sections to examine your cluster. If a support case is necessary, follow the support guide to collect additional information through a must-gather. Only use the - gather_network_logs when instructed by support.
Monitoring OVN-Kubernetes health by using readiness probes
The ovnkube-control-plane and ovnkube-node pods have containers configured with readiness probes.

Access to the OpenShift CLI (oc).

You have access to the cluster with cluster-admin privileges.

You have installed jq.


Review the details of the ovnkube-node readiness probe by running the following command:

Show all events including the probe failures, for the namespace by using the following command:

Show the events for just a specific pod:

Show the messages and statuses from the cluster network operator:

Show the ready status of each container in ovnkube-node pods by running the following script:


Monitoring application health by using health checks
Viewing OVN-Kubernetes alerts in the console
The Alerting UI provides detailed information about alerts and their governing alerting rules and silences.

You have access to the cluster as a developer or as a user with view permissions for the project that you are viewing metrics for.


In the Administrator perspective, select Observe -> Alerting. The three main pages in the Alerting UI in this perspective are the Alerts, Silences, and Alerting Rules pages.

View the rules for OVN-Kubernetes alerts by selecting Observe -> Alerting -> Alerting Rules.
Viewing OVN-Kubernetes alerts in the CLI
You can get information about alerts and their governing alerting rules and silences from the command line.

Access to the cluster as a user with the cluster-admin role.

The OpenShift CLI (oc) installed.

You have installed jq.


View active or firing alerts by running the following commands.

View alerting rules by running the following command:
Viewing the OVN-Kubernetes logs using the CLI
You can view the logs for each of the pods in the ovnkube-master and ovnkube-node pods using the OpenShift CLI (oc).

Access to the cluster as a user with the cluster-admin role.

Access to the OpenShift CLI (oc).

You have installed jq.


View the log for a specific pod:

Examine the most recent entries in all the containers in the ovnkube-node pods:

View the last 5 lines of every log in every container in an ovnkube-node pod using the following command:
Viewing the OVN-Kubernetes logs using the web console
You can view the logs for each of the pods in the ovnkube-master and ovnkube-node pods in the web console.

Access to the OpenShift CLI (oc).


In the Red Hat OpenShift Container Platform console, navigate to Workloads -> Pods or navigate to the pod through the resource you want to investigate.

Select the openshift-ovn-kubernetes project from the drop-down menu.

Click the name of the pod you want to investigate.

Click Logs. By default for the ovnkube-master the logs associated with the northd container are displayed.

Use the down-down menu to select logs for each container in turn.


Changing the OVN-Kubernetes log levels
The default log level for OVN-Kubernetes is 4. To debug OVN-Kubernetes, set the log level to 5. Follow this procedure to increase the log level of the OVN-Kubernetes to help you debug an issue.

You have access to the cluster with cluster-admin privileges.

You have access to the OpenShift Container Platform web console.


Run the following command to get detailed information for all pods in the OVN-Kubernetes project:

Create a ConfigMap file similar to the following example and use a filename such as env-overrides.yaml:

Apply the ConfigMap file by using the following command:

Restart the ovnkube pods to apply the new log level by using the following commands:

To verify that the `ConfigMap`file has been applied to all nodes for a specific pod, run the following command:

Optional: Check the ConfigMap file has been applied by running the following command:
Checking the OVN-Kubernetes pod network connectivity
The connectivity check controller, in Red Hat OpenShift Container Platform 4.10 and later, orchestrates connection verification checks in your cluster. These include Kubernetes API, OpenShift API and individual nodes. The results for the connection tests are stored in PodNetworkConnectivity objects in the openshift-network-diagnostics namespace. Connection tests are performed every minute in parallel.

Access to the OpenShift CLI (oc).

Access to the cluster as a user with the cluster-admin role.

You have installed jq.


To list the current PodNetworkConnectivityCheck objects, enter the following command:

View the most recent success for each connection object by using the following command:

View the most recent failures for each connection object by using the following command:

View the most recent outages for each connection object by using the following command:

View all the metrics by running the following command:

View the latency between the source pod and the openshift api service for the last 5 minutes:
Additional resources
Gathering data about your cluster for Red Hat Support

Implementation of connection health checks

Verifying network connectivity for an endpoint