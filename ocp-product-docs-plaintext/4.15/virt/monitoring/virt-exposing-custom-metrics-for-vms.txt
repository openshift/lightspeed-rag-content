Exposing custom metrics for virtual machines

Red Hat OpenShift Container Platform includes a preconfigured, preinstalled, and self-updating monitoring stack that provides monitoring for core platform components. This monitoring stack is based on the Prometheus monitoring system. Prometheus is a time-series database and a rule evaluation engine for metrics.

In addition to using the Red Hat OpenShift Container Platform monitoring stack, you can enable monitoring for user-defined projects by using the CLI and query custom metrics that are exposed for virtual machines through the node-exporter service.
Configuring the node exporter service
The node-exporter agent is deployed on every virtual machine in the cluster from which you want to collect metrics. Configure the node-exporter agent as a service to expose internal metrics and processes that are associated with virtual machines.

Install the Red Hat OpenShift Container Platform CLI oc.

Log in to the cluster as a user with cluster-admin privileges.

Create the cluster-monitoring-config ConfigMap object in the openshift-monitoring project.

Configure the user-workload-monitoring-config ConfigMap object in the openshift-user-workload-monitoring project by setting enableUserWorkload to true.


Create the Service YAML file. In the following example, the file is called node-exporter-service.yaml.

Create the node-exporter service:
Configuring a virtual machine with the node exporter service
Download the node-exporter file on to the virtual machine. Then, create a systemd service that runs the node-exporter service when the virtual machine boots.

The pods for the component are running in the openshift-user-workload-monitoring project.

Grant the monitoring-edit role to users who need to monitor this user-defined project.


Log on to the virtual machine.

Download the node-exporter file on to the virtual machine by using the directory path that applies to the version of node-exporter file.

Extract the executable and place it in the /usr/bin directory.

Create a node_exporter.service file in this directory path: /etc/systemd/system. This systemd service file runs the node-exporter service when the virtual machine reboots.

Enable and start the systemd service.


Verify that the node-exporter agent is reporting metrics from the virtual machine.
Creating a custom monitoring label for virtual machines
To enable queries to multiple virtual machines from a single service, add a custom label in the virtual machine's YAML file.

Install the Red Hat OpenShift Container Platform CLI oc.

Log in as a user with cluster-admin privileges.

Access to the web console for stop and restart a virtual machine.


Edit the template spec of your virtual machine configuration file. In this example, the label monitor has the value metrics.

Stop and restart the virtual machine to create a new pod with the label name given to the monitor label.


Querying the node-exporter service for metrics
Metrics are exposed for virtual machines through an HTTP service endpoint under the /metrics canonical name. When you query for metrics, Prometheus directly scrapes the metrics from the metrics endpoint exposed by the virtual machines and presents these metrics for viewing.

You have access to the cluster as a user with cluster-admin privileges or the monitoring-edit role.

You have enabled monitoring for the user-defined project by configuring the node-exporter service.


Obtain the HTTP service endpoint by specifying the namespace for the service:

To list all available metrics for the node-exporter service, query the metrics resource.
Creating a ServiceMonitor resource for the node exporter service
You can use a Prometheus client library and scrape metrics from the /metrics endpoint to access and view the metrics exposed by the node-exporter service. Use a ServiceMonitor custom resource definition (CRD) to monitor the node exporter service.

You have access to the cluster as a user with cluster-admin privileges or the monitoring-edit role.

You have enabled monitoring for the user-defined project by configuring the node-exporter service.


Create a YAML file for the ServiceMonitor resource configuration. In this example, the service monitor matches any service with the label metrics and queries the exmet port every 30 seconds.

Create the ServiceMonitor configuration for the node-exporter service.


Accessing the node exporter service outside the cluster
You can access the node-exporter service outside the cluster and view the exposed metrics.

You have access to the cluster as a user with cluster-admin privileges or the monitoring-edit role.

You have enabled monitoring for the user-defined project by configuring the node-exporter service.


Expose the node-exporter service.

Obtain the FQDN (Fully Qualified Domain Name) for the route.

Use the curl command to display metrics for the node-exporter service.
Additional resources
Configuring the monitoring stack

Enabling monitoring for user-defined projects

Managing metrics

Reviewing monitoring dashboards

Monitoring application health by using health checks

Creating and using config maps

Controlling virtual machine states