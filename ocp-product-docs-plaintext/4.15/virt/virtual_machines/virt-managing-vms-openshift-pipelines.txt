Managing virtual machines with OpenShift Pipelines

Red Hat OpenShift Pipelines is a Kubernetes-native CI/CD framework that allows developers to design and run each step of the CI/CD pipeline in its own container.

The Scheduling, Scale, and Performance (SSP) Operator integrates OpenShift Virtualization with OpenShift Pipelines. The SSP Operator includes tasks and example pipelines that allow you to:

Create and manage virtual machines (VMs), persistent volume claims (PVCs), and data volumes

Run commands in VMs

Manipulate disk images with libguestfs tools


Managing virtual machines with Red Hat OpenShift Pipelines is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.

For more information about the support scope of Red Hat Technology Preview features, see Technology Preview Features Support Scope.
Prerequisites
You have access to an Red Hat OpenShift Container Platform cluster with cluster-admin permissions.

You have installed the OpenShift CLI (oc).

You have installed OpenShift Pipelines.
Deploying the Scheduling, Scale, and Performance (SSP) resources
The SSP Operator example Tekton Tasks and Pipelines are not deployed by default when you install OpenShift Virtualization. To deploy the SSP Operator's Tekton resources, enable the deployTektonTaskResources feature gate in the HyperConverged custom resource (CR).

Open the HyperConverged CR in your default editor by running the following command:

Set the spec.featureGates.deployTektonTaskResources field to true.

Save your changes and exit the editor.
Virtual machine tasks supported by the SSP Operator
The following table shows the tasks that are included as part of the SSP Operator.


Virtual machine creation in pipelines now utilizes ClusterInstanceType and ClusterPreference instead of template-based tasks, which have been deprecated. The create-vm-from-template, copy-template, and modify-vm-template commands remain available but are not used in default pipeline tasks.
Example pipelines
The SSP Operator includes the following example Pipeline manifests. You can run the example pipelines by using the web console or CLI.

You might have to run more than one installer pipline if you need multiple versions of Windows. If you run more than one installer pipeline, each one requires unique parameters, such as the autounattend config map and base image name. For example, if you need Windows 10 and Windows 11 or Windows Server 2022 images, you have to run both the Windows efi installer pipeline and the Windows bios installer pipeline. However, if you need Windows 11 and Windows Server 2022 images, you have to run only the Windows efi installer pipeline.


Windows EFI installer pipeline
This pipeline installs Windows 11 or Windows Server 2022 into a new data volume from a Windows installation image (ISO file). A custom answer file is used to run the installation process.
Windows BIOS installer pipeline
This pipeline installs Windows 10 into a new data volume from a Windows installation image, also called an ISO file. A custom answer file is used to run the installation process.
Windows customize pipeline
This pipeline clones the data volume of a basic Windows 10, 11, or Windows Server 2022 installation, customizes it by installing Microsoft SQL Server Express or Microsoft Visual Studio Code, and then creates a new image and template.


The example pipelines use a config map file with sysprep predefined by Red Hat OpenShift Container Platform and suitable for Microsoft ISO files. For ISO files pertaining to different Windows editions, it may be necessary to create a new config map file with a system-specific sysprep definition.
Running the example pipelines using the web console
You can run the example pipelines from the Pipelines menu in the web console.

Click Pipelines -> Pipelines in the side menu.

Select a pipeline to open the Pipeline details page.

From the Actions list, select Start. The Start Pipeline dialog is displayed.

Keep the default values for the parameters and then click Start to run the pipeline. The Details tab tracks the progress of each task and displays the pipeline status.
Running the example pipelines using the CLI
Use a PipelineRun resource to run the example pipelines. A PipelineRun object is the running instance of a pipeline. It instantiates a pipeline for execution with specific inputs, outputs, and execution parameters on a cluster. It also creates a TaskRun object for each task in the pipeline.

To run the Windows 10 installer pipeline, create the following PipelineRun manifest:

Apply the PipelineRun manifest:

To run the Windows 10 customize pipeline, create the following PipelineRun manifest:

Apply the PipelineRun manifest:
Additional resources
Creating CI/CD solutions for applications using Red Hat OpenShift Pipelines

Creating a Windows VM