Configuring virtual GPUs

If you have graphics processing unit (GPU) cards, OpenShift Virtualization can automatically create virtual GPUs (vGPUs) that you can assign to virtual machines (VMs).
About using virtual GPUs with OpenShift Virtualization
Some graphics processing unit (GPU) cards support the creation of virtual GPUs (vGPUs). OpenShift Virtualization can automatically create vGPUs and other mediated devices if an administrator provides configuration details in the HyperConverged custom resource (CR). This automation is especially useful for large clusters.

Refer to your hardware vendor's documentation for functionality and support details.

Mediated device
A physical device that is divided into one or more virtual devices. A vGPU is a type of mediated device (mdev); the performance of the physical GPU is divided among the virtual devices. You can assign mediated devices to one or more virtual machines (VMs), but the number of guests must be compatible with your GPU. Some GPUs do not support multiple guests.
Preparing hosts for mediated devices
You must enable the Input-Output Memory Management Unit (IOMMU) driver before you can configure mediated devices.

Adding kernel arguments to enable the IOMMU driver
To enable the IOMMU driver in the kernel, create the MachineConfig object and add the kernel arguments.

You have cluster administrator permissions.

Your CPU hardware is Intel or AMD.

You enabled Intel Virtualization Technology for Directed I/O extensions or AMD IOMMU in the BIOS.


Create a MachineConfig object that identifies the kernel argument. The following example shows a kernel argument for an Intel CPU.

Create the new MachineConfig object:


Verify that the new MachineConfig object was added.
Configuring the NVIDIA GPU Operator
You can use the NVIDIA GPU Operator to provision worker nodes for running GPU-accelerated virtual machines (VMs) in OpenShift Virtualization.

The NVIDIA GPU Operator is supported only by NVIDIA. For more information, see Obtaining Support from NVIDIA in the Red Hat Knowledgebase.
About using the NVIDIA GPU Operator
You can use the NVIDIA GPU Operator with OpenShift Virtualization to rapidly provision worker nodes for running GPU-enabled virtual machines (VMs). The NVIDIA GPU Operator manages NVIDIA GPU resources in an Red Hat OpenShift Container Platform cluster and automates tasks that are required when preparing nodes for GPU workloads.

Before you can deploy application workloads to a GPU resource, you must install components such as the NVIDIA drivers that enable the compute unified device architecture (CUDA), Kubernetes device plugin, container runtime, and other features, such as automatic node labeling and monitoring. By automating these tasks, you can quickly scale the GPU capacity of your infrastructure. The NVIDIA GPU Operator can especially facilitate provisioning complex artificial intelligence and machine learning (AI/ML) workloads.
Options for configuring mediated devices
There are two available methods for configuring mediated devices when using the NVIDIA GPU Operator. The method that Red Hat tests uses OpenShift Virtualization features to schedule mediated devices, while the NVIDIA method only uses the GPU Operator.


Using the NVIDIA GPU Operator to configure mediated devices
This method exclusively uses the NVIDIA GPU Operator to configure mediated devices. To use this method, refer to NVIDIA GPU Operator with OpenShift Virtualization in the NVIDIA documentation.
Using OpenShift Virtualization to configure mediated devices
This method, which is tested by Red Hat, uses OpenShift Virtualization's capabilities to configure mediated devices. In this case, the NVIDIA GPU Operator is only used for installing drivers with the NVIDIA vGPU Manager. The GPU Operator does not configure mediated devices.


Configuring PCI passthrough
How vGPUs are assigned to nodes
For each physical device, OpenShift Virtualization configures the following values:

A single mdev type.

The maximum number of instances of the selected mdev type.


The cluster architecture affects how devices are created and assigned to nodes.


Large cluster with multiple cards per node
On nodes with multiple cards that can support similar vGPU types, the relevant device types are created in a round-robin manner.
For example:
One node has a single card that supports more than one requested vGPU type
OpenShift Virtualization uses the supported type that comes first on the mediatedDeviceTypes list.
Managing mediated devices
Before you can assign mediated devices to virtual machines, you must create the devices and expose them to the cluster. You can also reconfigure and remove mediated devices.

Creating and exposing mediated devices
As an administrator, you can create mediated devices and expose them to the cluster by editing the HyperConverged custom resource (CR).

You enabled the Input-Output Memory Management Unit (IOMMU) driver.

If your hardware vendor provides drivers, you installed them on the nodes where you want to create mediated devices.


Open the HyperConverged CR in your default editor by running the following command:

Create mediated devices by adding them to the spec.mediatedDevicesConfiguration stanza:

Identify the name selector and resource name values for the devices that you want to expose to the cluster. You will add these values to the HyperConverged CR in the next step.

Expose the mediated devices to the cluster by adding the mdevNameSelector and resourceName values to the
spec.permittedHostDevices.mediatedDevices stanza of the HyperConverged CR:

Save your changes and exit the editor.


Optional: Confirm that a device was added to a specific node by running the following command:
About changing and removing mediated devices
You can reconfigure or remove mediated devices in several ways:

Edit the HyperConverged CR and change the contents of the mediatedDeviceTypes stanza.

Change the node labels that match the nodeMediatedDeviceTypes node selector.

Remove the device information from the spec.mediatedDevicesConfiguration and spec.permittedHostDevices stanzas of the HyperConverged CR.
Removing mediated devices from the cluster
To remove a mediated device from the cluster, delete the information for that device from the HyperConverged custom resource (CR).

Edit the HyperConverged CR in your default editor by running the following command:

Remove the device information from the spec.mediatedDevicesConfiguration and spec.permittedHostDevices stanzas of the HyperConverged CR. Removing both entries ensures that you can later create a new mediated device type on the same node. For example:

Save your changes and exit the editor.
Using mediated devices
You can assign mediated devices to one or more virtual machines.

Assigning a vGPU to a VM by using the CLI
Assign mediated devices such as virtual GPUs (vGPUs) to virtual machines (VMs).

The mediated device is configured in the HyperConverged custom resource.

The VM is stopped.


Assign the mediated device to a virtual machine (VM) by editing the spec.domain.devices.gpus stanza of the VirtualMachine manifest:


To verify that the device is available from the virtual machine, run the following command, substituting <device_name> with the deviceName value from the VirtualMachine manifest:
Assigning a vGPU to a VM by using the web console
You can assign virtual GPUs to virtual machines by using the Red Hat OpenShift Container Platform web console.

You can add hardware devices to virtual machines created from customized templates or a YAML file. You cannot add devices to pre-supplied boot source templates for specific operating systems.
The vGPU is configured as a mediated device in your cluster.

The VM is stopped.


In the Red Hat OpenShift Container Platform web console, click Virtualization -> VirtualMachines from the side menu.

Select the VM that you want to assign the device to.

On the Details tab, click GPU devices.

Click Add GPU device.

Enter an identifying value in the Name field.

From the Device name list, select the device that you want to add to the VM.

Click Save.


To confirm that the devices were added to the VM, click the YAML tab and review the VirtualMachine configuration. Mediated devices are added to the spec.domain.devices stanza.
Additional resources
Enabling Intel VT-X and AMD-V Virtualization Hardware Extensions in BIOS