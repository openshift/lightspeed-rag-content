Investigating pod issues

Red Hat OpenShift Container Platform leverages the Kubernetes concept of a pod, which is one or more containers deployed together on one host. A pod is the smallest compute unit that can be defined, deployed, and managed on Red Hat OpenShift Container Platform 4.15.

After a pod is defined, it is assigned to run on a node until its containers exit, or until it is removed. Depending on policy and exit code, Pods are either removed after exiting or retained so that their logs can be accessed.

The first thing to check when pod issues arise is the pod's status. If an explicit pod failure has occurred, observe the pod's error state to identify specific image, container, or pod network issues. Focus diagnostic data collection according to the error state. Review pod event messages, as well as pod and container log information. Diagnose issues dynamically by accessing running Pods on the command line, or start a debug pod with root access based on a problematic pod's deployment configuration.
Understanding pod error states
Pod failures return explicit error states that can be observed in the status field in the output of oc get pods. Pod error states cover image, container, and container network related failures.

The following table provides a list of pod error states along with their descriptions.
Reviewing pod status
You can query pod status and error states. You can also query a pod's associated deployment configuration and review base image availability.

You have access to the cluster as a user with the cluster-admin role.

You have installed the OpenShift CLI (oc).

skopeo is installed.


Switch into a project:

List pods running within the namespace, as well as pod status, error states, restarts, and age:

Determine whether the namespace is managed by a deployment configuration:

Inspect the base image referenced in the preceding command's output:

If the base image reference is not correct, update the reference in the deployment configuration:

When deployment configuration changes on exit, the configuration will automatically redeploy. Watch pod status as the deployment progresses, to determine whether the issue has been resolved:

Review events within the namespace for diagnostic information relating to pod failures:
Inspecting pod and container logs
You can inspect pod and container logs for warnings and error messages related to explicit pod failures. Depending on policy and exit code, pod and container logs remain available after pods have been terminated.

You have access to the cluster as a user with the cluster-admin role.

Your API service is still functional.

You have installed the OpenShift CLI (oc).


Query logs for a specific pod:

Query logs for a specific container within a pod:

Inspect logs contained in /var/log/ within a pod.
Accessing running pods
You can review running pods dynamically by opening a shell inside a pod or by gaining network access through port forwarding.

You have access to the cluster as a user with the cluster-admin role.

Your API service is still functional.

You have installed the OpenShift CLI (oc).


Switch into the project that contains the pod you would like to access. This is necessary because the oc rsh command does not accept the -n namespace option:

Start a remote shell into a pod:

Start a remote shell into a specific container within a pod:

Create a port forwarding session to a port on a pod:
Starting debug pods with root access
You can start a debug pod with root access, based on a problematic pod's deployment or deployment configuration. Pod users typically run with non-root privileges, but running troubleshooting pods with temporary root privileges can be useful during issue investigation.

You have access to the cluster as a user with the cluster-admin role.

Your API service is still functional.

You have installed the OpenShift CLI (oc).


Start a debug pod with root access, based on a deployment.

Start a debug pod with root access, based on a deployment configuration.


You can append - <command> to the preceding oc debug commands to run individual commands within a debug pod, instead of running an interactive shell.
Copying files to and from pods and containers
You can copy files to and from a pod to test configuration changes or gather diagnostic information.

You have access to the cluster as a user with the cluster-admin role.

Your API service is still functional.

You have installed the OpenShift CLI (oc).


Copy a file to a pod:

Copy a file from a pod: