Understanding and creating service accounts

Service accounts overview
A service account is an Red Hat OpenShift Container Platform account that allows a component to directly access the API. Service accounts are API objects that exist within each project. Service accounts provide a flexible way to control API access without sharing a regular user's credentials.

When you use the Red Hat OpenShift Container Platform CLI or web console, your API token authenticates you to the API. You can associate a component with a service account so that they can access the API without using a regular user's credentials.

Each service account's user name is derived from its project and name:

system:serviceaccount:<project>:<name>
Every service account is also a member of two groups:


Each service account automatically contains two secrets:

An API token

Credentials for the OpenShift Container Registry


The generated API token and registry credentials do not expire, but you can revoke them by deleting the secret. When you delete the secret, a new one is automatically generated to take its place.
Creating service accounts
You can create a service account in a project and grant it permissions by binding it to a role.

Optional: To view the service accounts in the current project:

To create a new service account in the current project:

Optional: View the secrets for the service account:
Examples of granting roles to service accounts
You can grant roles to service accounts in the same way that you grant roles to a regular user account.

You can modify the service accounts for the current project. For example, to add
the view role to the robot service account in the top-secret project:

You can also grant access to a specific service account in a project. For
example, from the project to which the service account belongs, use
the -z flag and specify the <service_account_name>

To modify a different namespace, you can use the -n option to indicate the
project namespace it applies to, as shown in the following examples.