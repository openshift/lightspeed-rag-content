Using service accounts in applications

Service accounts overview
A service account is an Red Hat OpenShift Container Platform account that allows a component to directly access the API. Service accounts are API objects that exist within each project. Service accounts provide a flexible way to control API access without sharing a regular user's credentials.

When you use the Red Hat OpenShift Container Platform CLI or web console, your API token authenticates you to the API. You can associate a component with a service account so that they can access the API without using a regular user's credentials.

Each service account's user name is derived from its project and name:

system:serviceaccount:<project>:<name>
Every service account is also a member of two groups:


Each service account automatically contains two secrets:

An API token

Credentials for the OpenShift Container Registry


The generated API token and registry credentials do not expire, but you can revoke them by deleting the secret. When you delete the secret, a new one is automatically generated to take its place.
Default service accounts
Your Red Hat OpenShift Container Platform cluster contains default service accounts for cluster management and generates more service accounts for each project.

Default cluster service accounts
Several infrastructure controllers run using service account credentials. The following service accounts are created in the Red Hat OpenShift Container Platform infrastructure project (openshift-infra) at server start, and given the following roles cluster-wide:
Default project service accounts and roles
Three service accounts are automatically created in each project:


All service accounts in a project are given the system:image-puller role, which allows pulling images from any image stream in the project using the internal container image registry.
Automatically generated secrets
By default, Red Hat OpenShift Container Platform creates the following secrets for each service account:

A dockercfg image pull secret

A service account token secret


This service account token secret and docker configuration image pull secret are necessary to integrate the OpenShift image registry into the cluster's user authentication and authorization system.

However, if you do not enable the ImageRegistry capability or if you disable the integrated OpenShift image registry in the Cluster Image Registry Operator's configuration, these secrets are not generated for each service account.

Do not rely on these automatically generated secrets for your own use; they might be removed in a future Red Hat OpenShift Container Platform release.
Workloads are automatically injected with a projected volume to obtain a bound service account token. If your workload needs an additional service account token, add an additional projected volume in your workload manifest. Bound service account tokens are more secure than service account token secrets for the following reasons:

Bound service account tokens have a bounded lifetime.

Bound service account tokens contain audiences.

Bound service account tokens can be bound to pods or secrets and the bound tokens are invalidated when the bound object is removed.


For more information, see Configuring bound service account tokens using volume projection.

You can also manually create a service account token secret to obtain a token, if the security exposure of a non-expiring token in a readable API object is acceptable to you. For more information, see Creating a service account token secret.

For information about requesting bound service account tokens, see Configuring bound service account tokens using volume projection.

For information about creating a service account token secret, see Creating a service account token secret.
Creating service accounts
You can create a service account in a project and grant it permissions by binding it to a role.

Optional: To view the service accounts in the current project:

To create a new service account in the current project:

Optional: View the secrets for the service account: