Creating and building an application using the CLI

Before you begin
Review About the OpenShift CLI.

You must be able to access a running instance of Red Hat OpenShift Container Platform. If you do not have access, contact your cluster administrator.

You must have the OpenShift CLI (oc) downloaded and installed.
Logging in to the CLI
You can log in to the OpenShift CLI (oc) to access and manage your cluster.

You must have access to an Red Hat OpenShift Container Platform cluster.

You must have installed the OpenShift CLI (oc).


Log into Red Hat OpenShift Container Platform from the CLI using your username and password, with an OAuth token, or with a web browser:


You can now create a project or issue other commands for managing your cluster.

oc login

oc logout
Creating a new project
A project enables a community of users to organize and manage their content in isolation. Projects are Red Hat OpenShift Container Platform extensions to Kubernetes namespaces. Projects have additional features that enable user self-provisioning.

Users must receive access to projects from administrators. Cluster administrators can allow developers to create their own projects. In most cases, users automatically have access to their own projects.

Each project has its own set of objects, policies, constraints, and service accounts.

You must have access to an Red Hat OpenShift Container Platform cluster.

You must have installed the OpenShift CLI (oc).


To create a new project, enter the following command:


oc new-project
Granting view permissions
Red Hat OpenShift Container Platform automatically creates a few special service accounts in every project. The default service account takes responsibility for running the pods. Red Hat OpenShift Container Platform uses and injects this service account into every pod that launches.

The following procedure creates a RoleBinding object for the default ServiceAccount object. The service account communicates with the Red Hat OpenShift Container Platform API to learn about pods, services, and resources within the project.

You must have access to an Red Hat OpenShift Container Platform cluster.

You must have installed the OpenShift CLI (oc).

You have a deployed image.

You must have cluster-admin or project-admin privileges.


To add the view role to the default service account in the user-getting-started project, enter the following command:


Understanding authentication

RBAC overview

oc policy add-role-to-user
Deploying your first image
The simplest way to deploy an application in Red Hat OpenShift Container Platform is to run an existing container image. The following procedure deploys a front-end component of an application called national-parks-app. The web application displays an interactive map. The map displays the location of major national parks across the world.

You must have access to an Red Hat OpenShift Container Platform cluster.

Install the OpenShift CLI (oc).


To deploy an application, enter the following command:


oc new-app


Creating a route
External clients can access applications running on Red Hat OpenShift Container Platform through the routing layer and the data object behind that is a route. The default Red Hat OpenShift Container Platform router (HAProxy) uses the HTTP header of the incoming request to determine where to proxy the connection.

Optionally, you can define security, such as TLS, for the route.

You must have access to an Red Hat OpenShift Container Platform cluster.

You must have installed the OpenShift CLI (oc).

You have a deployed image.

You must have cluster-admin or project-admin privileges.


To retrieve the created application service, enter the following command:

To create a route, enter the following command:

To retrieve the created application route, enter the following command:


oc create route edge

oc get
Examining the pod
Red Hat OpenShift Container Platform leverages the Kubernetes concept of a pod, which is one or more containers deployed together on one host, and the smallest compute unit that can be defined, deployed, and managed. Pods are the rough equivalent of a machine instance, physical or virtual, to a container.

You can view the pods in your cluster and to determine the health of those pods and the cluster as a whole.

You must have access to an Red Hat OpenShift Container Platform cluster.

You must have installed the OpenShift CLI (oc).

You have a deployed image.


To list all pods with node names, enter the following command:

To list all pod details, enter the following command:


oc describe

oc get

oc label

Viewing pods

Viewing pod logs
Scaling the application
In Kubernetes, a Deployment object defines how an application deploys. In most cases, users use Pod, Service, ReplicaSets, and Deployment resources together. In most cases, Red Hat OpenShift Container Platform creates the resources for you.

When you deploy the national-parks-app image, a deployment resource is created.  In this example, only one Pod is deployed.

The following procedure scales the national-parks-image to use two instances.

You must have access to an Red Hat OpenShift Container Platform cluster.

You must have installed the OpenShift CLI (oc).

You have a deployed image.


To scale your application from one pod instance to two pod instances, enter the following command:


To ensure that your application scaled properly, enter the following command:

To scale your application back down to one pod instance, enter the following command:


oc scale
Deploying a Python application
The following procedure deploys a back-end service for the parksmap application. The Python application performs 2D geo-spatial queries against a MongoDB database to locate and return map coordinates of all national parks in the world.

The deployed back-end service is nationalparks.

You must have access to an Red Hat OpenShift Container Platform cluster.

You must have installed the OpenShift CLI (oc).

You have a deployed image.


To create a new Python application, enter the following command:

To create a route to expose your application, nationalparks, enter the following command:

To retrieve the created application route, enter the following command:


oc new-app
Connecting to a database
Deploy and connect a MongoDB database where the national-parks-app application stores location information. Once you mark the national-parks-app application as a backend for the map visualization tool, parksmap deployment uses the Red Hat OpenShift Container Platform discover mechanism to display the map automatically.

You must have access to an Red Hat OpenShift Container Platform cluster.

You must have installed the OpenShift CLI (oc).

You have a deployed image.


To connect to a database, enter the following command:


oc new-project


Creating a secret
The Secret object provides a mechanism to hold sensitive information such as passwords, Red Hat OpenShift Container Platform client configuration files, private source repository credentials, and so on. Secrets decouple sensitive content from the pods. You can mount secrets into containers using a volume plugin or the system can use secrets to perform actions on behalf of a pod. The following procedure adds the secret nationalparks-mongodb-parameters and mounts it to the nationalparks workload.

You must have access to an Red Hat OpenShift Container Platform cluster.

You must have installed the OpenShift CLI (oc).

You have a deployed image.


To create a secret, enter the following command:

To update the environment variable to attach the mongodb secret to the nationalpartks workload, enter the following command:

To show the status of the nationalparks deployment, enter the following command:

To show the status of the mongodb-nationalparks deployment, enter the following command:


oc create secret generic

oc set env

oc rollout status
Loading data and displaying the national parks map
You deployed the parksmap and nationalparks applications and then deployed the mongodb-nationalparks database. However, no data has been loaded into the database.

You must have access to an Red Hat OpenShift Container Platform cluster.

You must have installed the OpenShift CLI (oc).

You have a deployed image.


To load national parks data, enter the following command:

To verify that your data is loaded properly, enter the following command:

To add labels to the route, enter the following command:

To retrieve your routes to view your map, enter the following command:

Copy and paste the HOST/PORT path you retrieved above into your web browser. Your browser should display a map of the national parks across the world.


oc exec

oc label

oc get