Custom image builds with Buildah

With Red Hat OpenShift Container Platform 4.15, a docker socket will not be present on the host nodes. This means the mount docker socket option of a custom build is not guaranteed to provide an accessible docker socket for use within a custom build image.

If you require this capability in order to build and push images, add the Buildah tool your custom build image and use it to build and push the image within your custom build logic. The following is an example of how to run custom builds with Buildah.

Using the custom build strategy requires permissions that normal users do not have by default because it allows the user to execute arbitrary code inside a privileged container running on the cluster. This level of access can be used to compromise the cluster and therefore should be granted only to users who are trusted with administrative privileges on the cluster.
Prerequisites
Review how to grant custom build permissions.
Creating custom build artifacts
You must create the image you want to use as your custom build image.

Starting with an empty directory, create a file named Dockerfile with the following content:

In the same directory, create a file named dockerfile.sample. This file is included in the custom build image and defines the image that is produced by the custom build:

In the same directory, create a file named build.sh. This file contains the logic that is run when the custom build runs:
Build custom builder image
You can use Red Hat OpenShift Container Platform to build and push custom builder images to use in a custom strategy.

Define all the inputs that will go into creating your new custom builder image.


Define a BuildConfig object that will build your custom builder image:

From the directory in which you created your custom build image, run the build:
Use custom builder image
You can define a BuildConfig object that uses the custom strategy in conjunction with your custom builder image to execute your custom build logic.

Define all the required inputs for new custom builder image.

Build your custom builder image.


Create a file named buildconfig.yaml. This file defines the BuildConfig object that is created in your project and executed:

Create the BuildConfig:

Create a file named imagestream.yaml. This file defines the image stream to which the build will push the image:

Create the imagestream:

Run your custom build: