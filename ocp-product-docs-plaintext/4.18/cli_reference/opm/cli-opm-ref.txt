# opm CLI reference


The opm command-line interface (CLI) is a tool for creating and maintaining Operator catalogs.

```terminal
$ opm <command> [<subcommand>] [<argument>] [<flags>]
```


[WARNING]
----
The opm CLI is not forward compatible. The version of the opm CLI used to generate catalog content must be earlier than or equal to the version used to serve the content on a cluster.
----


[IMPORTANT]
----
The SQLite-based catalog format, including the related CLI commands, is a deprecated feature. Deprecated functionality is still included in Red Hat OpenShift Container Platform and continues to be supported; however, it will be removed in a future release of this product and is not recommended for new deployments.
For the most recent list of major functionality that has been deprecated or removed within Red Hat OpenShift Container Platform, refer to the Deprecated and removed features section of the Red Hat OpenShift Container Platform release notes.
----

# generate

Generate various artifacts for declarative config indexes.


```terminal
$ opm generate <subcommand> [<flags>]
```






## dockerfile

Generate a Dockerfile for a declarative config index.


[IMPORTANT]
----
This command creates a Dockerfile in the same directory as the <dcRootDir> (named <dcDirName>.Dockerfile) that is used to build the index. If a Dockerfile with the same name already exists, this command fails.
When specifying extra labels, if duplicate keys exist, only the last value of each duplicate key gets added to the generated Dockerfile.
----


```terminal
$ opm generate dockerfile <dcRootDir> [<flags>]
```





[NOTE]
----
To build with the official Red Hat image, use the registry.redhat.io/openshift4/ose-operator-registry-rhel9:v4.18 value with the -i flag.
----

# index

Generate Operator index for SQLite database format container images from pre-existing Operator bundles.


[IMPORTANT]
----
As of Red Hat OpenShift Container Platform 4.11, the default Red Hat-provided Operator catalog releases in the file-based catalog format. The default Red Hat-provided Operator catalogs for Red Hat OpenShift Container Platform 4.6 through 4.10 released in the deprecated SQLite database format.
The opm subcommands, flags, and functionality related to the SQLite database format are also deprecated and will be removed in a future release. The features are still supported and must be used for catalogs that use the deprecated SQLite database format.
Many of the opm subcommands and flags for working with the SQLite database format, such as opm index prune, do not work with the file-based catalog format.
For more information about working with file-based catalogs, see "Additional resources".
----


```terminal
$ opm index <subcommand> [<flags>]
```




## add

Add Operator bundles to an index.


```terminal
$ opm index add [<flags>]
```




## prune

Prune an index of all but specified packages.


```terminal
$ opm index prune [<flags>]
```




## prune-stranded

Prune an index of stranded bundles, which are bundles that are not associated with a particular image.


```terminal
$ opm index prune-stranded [<flags>]
```




## rm

Delete an entire Operator from an index.


```terminal
$ opm index rm [<flags>]
```




* Operator Framework packaging format
* Managing custom catalogs
* Mirroring images for a disconnected installation using the oc-mirror plugin

# init

Generate an olm.package declarative config blob.


```terminal
$ opm init <package_name> [<flags>]
```




# migrate

Migrate a SQLite database format index image or database file to a file-based catalog.


[IMPORTANT]
----
The SQLite-based catalog format, including the related CLI commands, is a deprecated feature. Deprecated functionality is still included in Red Hat OpenShift Container Platform and continues to be supported; however, it will be removed in a future release of this product and is not recommended for new deployments.
For the most recent list of major functionality that has been deprecated or removed within Red Hat OpenShift Container Platform, refer to the Deprecated and removed features section of the Red Hat OpenShift Container Platform release notes.
----


```terminal
$ opm migrate <index_ref> <output_dir> [<flags>]
```




# render

Generate a declarative config blob from the provided index images, bundle images, and SQLite database files.


```terminal
$ opm render <index_image | bundle_image | sqlite_file> [<flags>]
```




# serve

Serve declarative configs via a GRPC server.


[NOTE]
----
The declarative config directory is loaded by the serve command at startup. Changes made to the declarative config after this command starts are not reflected in the served content.
----


```terminal
$ opm serve <source_path> [<flags>]
```




# validate

Validate the declarative config JSON file(s) in a given directory.


```terminal
$ opm validate <directory> [<flags>]
```
