# Creating primary networks using a NetworkAttachmentDefinition


The following sections explain how to create and manage additional primary networks using the NetworkAttachmentDefinition (NAD) resource.

# Approaches to managing an additional network

You can manage the life cycle of an additional network created by NAD with one of the following two approaches:

* By modifying the Cluster Network Operator (CNO) configuration. With this method, the CNO automatically creates and manages the NetworkAttachmentDefinition object. In addition to managing the object lifecycle, the CNO ensures that a DHCP is available for an additional network that uses a DHCP assigned IP address.
* By applying a YAML manifest. With this method, you can manage the additional network directly by creating an NetworkAttachmentDefinition object. This approach allows for the invocation of multiple CNI plugins in order to attach additional network interfaces in a pod.

Each approach is mutually exclusive and you can only use one approach for managing an additional network at a time. For either approach, the additional network is managed by a Container Network Interface (CNI) plugin that you configure.


[NOTE]
----
When deploying Red Hat OpenShift Container Platform nodes with multiple network interfaces on Red Hat OpenStack Platform (RHOSP) with OVN SDN, DNS configuration of the secondary interface might take precedence over the DNS configuration of the primary interface. In this case, remove the DNS nameservers for the subnet ID that is attached to the secondary interface by running the following command:

```terminal
$ openstack subnet set --dns-nameserver 0.0.0.0 <subnet_id>
```

----

# Creating an additional network attachment with the Cluster Network Operator

The Cluster Network Operator (CNO) manages additional network definitions. When you specify an additional network to create, the CNO creates the NetworkAttachmentDefinition CRD automatically.


[IMPORTANT]
----
Do not edit the NetworkAttachmentDefinition CRDs that the Cluster Network Operator manages. Doing so might disrupt network traffic on your additional network.
----

* Install the OpenShift CLI (oc).
* Log in as a user with cluster-admin privileges.

1. Optional: Create the namespace for the additional networks:

```terminal
$ oc create namespace <namespace_name>
```

2. To edit the CNO configuration, enter the following command:

```terminal
$ oc edit networks.operator.openshift.io cluster
```

3. Modify the CR that you are creating by adding the configuration for the
additional network that you are creating, as in the following example CR.

```yaml
apiVersion: operator.openshift.io/v1
kind: Network
metadata:
  name: cluster
spec:
  # ...
  additionalNetworks:
  - name: tertiary-net
    namespace: namespace2
    type: Raw
    rawCNIConfig: |-
      {
        "cniVersion": "0.3.1",
        "name": "tertiary-net",
        "type": "ipvlan",
        "master": "eth1",
        "mode": "l2",
        "ipam": {
          "type": "static",
          "addresses": [
            {
              "address": "192.168.1.23/24"
            }
          ]
        }
      }
```

4. Save your changes and quit the text editor to commit your changes.

* Confirm that the CNO created the NetworkAttachmentDefinition CRD by running the following command. There might be a delay before the CNO creates the CRD.

```terminal
$ oc get network-attachment-definitions -n <namespace>
```

where:
<namespace>:: Specifies the namespace for the network attachment that you added to the CNO configuration.
Example output

```terminal
NAME                 AGE
test-network-1       14m
```


## Configuration for an additional network attachment

An additional network is configured by using the NetworkAttachmentDefinition API in the k8s.cni.cncf.io API group.

The configuration for the API is described in the following table:



# Creating an additional network attachment by applying a YAML manifest

* You have installed the OpenShift CLI (`oc`).
* You have logged in as a user with cluster-admin privileges.
* You are working in the namespace where the NAD is to be deployed.

1. Create a YAML file with your additional network configuration, such as in the following example:

```yaml
apiVersion: k8s.cni.cncf.io/v1
kind: NetworkAttachmentDefinition
metadata:
  name: next-net
spec:
  config: |-
    {
      "cniVersion": "0.3.1",
      "name": "work-network",
      "namespace": "namespace2", 1
      "type": "host-device",
      "device": "eth1",
      "ipam": {
        "type": "dhcp"
      }
    }
```

Optional: You can specify a namespace to which the NAD is applied. If you are working in the namespace where the NAD is to be deployed, this spec is not necessary.
2. To create the additional network, enter the following command:

```terminal
$ oc apply -f <file>.yaml
```

where:
<file>:: Specifies the name of the file contained the YAML manifest.