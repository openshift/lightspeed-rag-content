# Managing alerts as a Developer


In Red Hat OpenShift Container Platform, the Alerting UI enables you to manage alerts, silences, and alerting rules.

[NOTE]
----
The alerts, silences, and alerting rules that are available in the Alerting UI relate to the projects that you have access to.
----

# Accessing the Alerting UI from the Developer perspective

The Alerting UI is accessible through the {perspective} perspective of the Red Hat OpenShift Container Platform web console.

* From the Developer perspective, go to Observe and go to the Alerts tab.
* Select the project that you want to manage alerts for from the Project: list.

In this perspective, alerts, silences, and alerting rules are all managed from the Alerts tab. The results shown in the Alerts tab are specific to the selected project.


[NOTE]
----
In the Developer perspective, you can select from core Red Hat OpenShift Container Platform and user-defined projects that you have access to in the Project: <project_name> list. However, alerts, silences, and alerting rules relating to core Red Hat OpenShift Container Platform projects are not displayed if you are not logged in as a cluster administrator.
----

* Searching and filtering alerts, silences, and alerting rules

# Getting information about alerts, silences, and alerting rules from the Developer perspective

The Alerting UI provides detailed information about alerts and their governing alerting rules and silences.

* You have access to the cluster as a user with view permissions for the project that you are viewing alerts for.

To obtain information about alerts, silences, and alerting rules:

1. From the Developer perspective of the Red Hat OpenShift Container Platform web console, go to the Observe -> <project_name> -> Alerts page.
2. View details for an alert, silence, or an alerting rule:
* Alert details can be viewed by clicking a greater than symbol (>) next to an alert name and then selecting the alert from the list.
* Silence details can be viewed by clicking a silence in the Silenced by section of the Alert details page. The Silence details page includes the following information:
* Alert specification
* Start time
* End time
* Silence state
* Number and list of firing alerts
* Alerting rule details can be viewed by clicking the . menu next to an alert in the Alerts page and then clicking View Alerting Rule.


[NOTE]
----
Only alerts, silences, and alerting rules relating to the selected project are displayed in the Developer perspective.
----

* Cluster Monitoring Operator runbooks (Cluster Monitoring Operator GitHub repository)

# Managing silences

You can create a silence for an alert in the Red Hat OpenShift Container Platform web console in the Developer perspective.
After you create silences, you can view, edit, and expire them. You also do not receive notifications about a silenced alert when the alert fires.


[NOTE]
----
When you create silences, they are replicated across Alertmanager pods. However, if you do not configure persistent storage for Alertmanager, silences might be lost. This can happen, for example, if all Alertmanager pods restart at the same time.
----

* Managing silences
* Configuring persistent storage

## Silencing alerts from the Developer perspective

You can silence a specific alert or silence alerts that match a specification that you define.

* If you are a cluster administrator, you have access to the cluster as a user with the cluster-admin role.
* If you are a non-administrator user, you have access to the cluster as a user with the following user roles:
* The cluster-monitoring-view cluster role, which allows you to access Alertmanager.
* The monitoring-alertmanager-edit role, which permits you to create and silence alerts in the Administrator perspective in the web console.
* The monitoring-rules-edit cluster role, which permits you to create and silence alerts in the Developer perspective in the web console.

To silence a specific alert:

1. From the Developer perspective of the Red Hat OpenShift Container Platform web console, go to Observe and go to the Alerts tab.
2. Select the project that you want to silence an alert for from the Project: list.
3. If necessary, expand the details for the alert by clicking a greater than symbol (>) next to the alert name.
4. Click the alert message in the expanded view to open the Alert details page for the alert.
5. Click Silence alert to open the Silence alert page with a default configuration for the alert.
6. Optional: Change the default configuration details for the silence.

[NOTE]
----
You must add a comment before saving a silence.
----
7. To save the silence, click Silence.

To silence a set of alerts:

1. From the Developer perspective of the Red Hat OpenShift Container Platform web console, go to Observe and go to the Silences tab.
2. Select the project that you want to silence alerts for from the Project: list.
3. Click Create silence.
4. On the Create silence page, set the duration and label details for an alert.

[NOTE]
----
You must add a comment before saving a silence.
----
5. To create silences for alerts that match the labels that you entered, click Silence.

## Editing silences from the Developer perspective

You can edit a silence, which expires the existing silence and creates a new one with the changed configuration.

* If you are a cluster administrator, you have access to the cluster as a user with the cluster-admin role.
* If you are a non-administrator user, you have access to the cluster as a user with the following user roles:
* The cluster-monitoring-view cluster role, which allows you to access Alertmanager.
* The monitoring-rules-edit cluster role, which permits you to create and silence alerts in the Developer perspective in the web console.

1. From the Developer perspective of the Red Hat OpenShift Container Platform web console, go to Observe and go to the Silences tab.
2. Select the project that you want to edit silences for from the Project: list.
3. For the silence you want to modify, click . and select Edit silence.

Alternatively, you can click Actions and select Edit silence on the Silence details page for a silence.
4. On the Edit silence page, make changes and click Silence. Doing so expires the existing silence and creates one with the updated configuration.

## Expiring silences from the Developer perspective

You can expire a single silence or multiple silences. Expiring a silence deactivates it permanently.


[NOTE]
----
You cannot delete expired, silenced alerts.
Expired silences older than 120 hours are garbage collected.
----

* If you are a cluster administrator, you have access to the cluster as a user with the cluster-admin role.
* If you are a non-administrator user, you have access to the cluster as a user with the following user roles:
* The cluster-monitoring-view cluster role, which allows you to access Alertmanager.
* The monitoring-rules-edit cluster role, which permits you to create and silence alerts in the Developer perspective in the web console.

1. From the Developer perspective of the Red Hat OpenShift Container Platform web console, go to Observe and go to the Silences tab.
2. Select the project that you want to expire a silence for from the Project: list.
3. For the silence or silences you want to expire, select the checkbox in the corresponding row.
4. Click Expire 1 silence to expire a single selected silence or Expire <n> silences to expire multiple selected silences, where <n> is the number of silences you selected.

Alternatively, to expire a single silence you can click Actions and select Expire silence on the Silence details page for a silence.

# Managing alerting rules for user-defined projects

In Red Hat OpenShift Container Platform, you can create, view, edit, and remove alerting rules for user-defined projects. Those alerting rules will trigger alerts based on the values of the chosen metrics.

* Creating alerting rules for user-defined projects
* Managing alerting rules for user-defined projects
* Optimizing alerting for user-defined projects

## Creating alerting rules for user-defined projects

You can create alerting rules for user-defined projects. Those alerting rules will trigger alerts based on the values of the chosen metrics.


[NOTE]
----
To help users understand the impact and cause of the alert, ensure that your alerting rule contains an alert message and severity value.
----

* You have enabled monitoring for user-defined projects.
* You are logged in as a cluster administrator or as a user that has the monitoring-rules-edit cluster role for the project where you want to create an alerting rule.
* You have installed the OpenShift CLI (oc).

1. Create a YAML file for alerting rules. In this example, it is called example-app-alerting-rule.yaml.
2. Add an alerting rule configuration to the YAML file.
The following example creates a new alerting rule named example-alert. The alerting rule fires an alert when the version metric exposed by the sample service becomes 0:

```yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: example-alert
  namespace: ns1
spec:
  groups:
  - name: example
    rules:
    - alert: VersionAlert 1
      for: 1m 2
      expr: version{job="prometheus-example-app"} == 0 3
      labels:
        severity: warning 4
      annotations:
        message: This is an example alert. 5
```

The name of the alerting rule you want to create.
The duration for which the condition should be true before an alert is fired.
The PromQL query expression that defines the new rule.
The severity that alerting rule assigns to the alert.
The message associated with the alert.
3. Apply the configuration file to the cluster:

```terminal
$ oc apply -f example-app-alerting-rule.yaml
```


## Creating cross-project alerting rules for user-defined projects

You can create alerting rules that are not bound to their project of origin by configuring a project in the user-workload-monitoring-config config map. The PrometheusRule objects created in these projects are then applicable to all projects.

Therefore, you can have generic alerting rules that apply to multiple user-defined projects instead of having individual PrometheusRule objects in each user project. You can filter which projects are included or excluded from the alerting rule by using PromQL queries in the PrometheusRule object.

* If you are a cluster administrator, you have access to the cluster as a user with the cluster-admin cluster role.
* If you are a non-administrator user, you have access to the cluster as a user with the following user roles:
* The user-workload-monitoring-config-edit role in the openshift-user-workload-monitoring project to edit the user-workload-monitoring-config config map.
* The monitoring-rules-edit cluster role for the project where you want to create an alerting rule.
* A cluster administrator has enabled monitoring for user-defined projects.
* You have installed the OpenShift CLI (oc).

1. Edit the user-workload-monitoring-config config map in the openshift-user-workload-monitoring project:

```terminal
$ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config
```

2. Configure projects in which you want to create alerting rules that are not bound to a specific project:

```yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-workload-monitoring-config
  namespace: openshift-user-workload-monitoring
data:
  config.yaml: |
    namespacesWithoutLabelEnforcement: [ <namespace1>, <namespace2> ] 1
    # ...
```

Specify one or more projects in which you want to create cross-project alerting rules. Prometheus and Thanos Ruler for user-defined monitoring do not enforce the namespace label in PrometheusRule objects created in these projects, making the PrometheusRule objects applicable to all projects.
3. Create a YAML file for alerting rules. In this example, it is called example-cross-project-alerting-rule.yaml.
4. Add an alerting rule configuration to the YAML file.
The following example creates a new cross-project alerting rule called example-security. The alerting rule fires when a user project does not enforce the restricted pod security policy:
Example cross-project alerting rule

```yaml
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: example-security
  namespace: ns1 1
spec:
  groups:
    - name: pod-security-policy
      rules:
        - alert: "ProjectNotEnforcingRestrictedPolicy" 2
          for: 5m 3
          expr: kube_namespace_labels{namespace!~"(openshift|kube).*|default",label_pod_security_kubernetes_io_enforce!="restricted"} 4
          annotations:
            message: "Restricted policy not enforced. Project {{ $labels.namespace }} does not enforce the restricted pod security policy." 5
          labels:
            severity: warning 6
```

Ensure that you specify the project that you defined in the namespacesWithoutLabelEnforcement field.
The name of the alerting rule you want to create.
The duration for which the condition should be true before an alert is fired.
The PromQL query expression that defines the new rule. You can use label matchers on the namespace label to filter which projects are included or excluded from the alerting rule.
The message associated with the alert.
The severity that alerting rule assigns to the alert.

[IMPORTANT]
----
Ensure that you create a specific cross-project alerting rule in only one of the projects that you specified in the namespacesWithoutLabelEnforcement field.
If you create the same cross-project alerting rule in multiple projects, it results in repeated alerts.
----
5. Apply the configuration file to the cluster:

```terminal
$ oc apply -f example-cross-project-alerting-rule.yaml
```


* Monitoring stack architecture
* Alerting (Prometheus documentation)

## Accessing alerting rules for user-defined projects

To list alerting rules for a user-defined project, you must have been assigned the monitoring-rules-view cluster role for the project.

* You have enabled monitoring for user-defined projects.
* You are logged in as a user that has the monitoring-rules-view cluster role for your project.
* You have installed the OpenShift CLI (oc).

1. To list alerting rules in <project>:

```terminal
$ oc -n <project> get prometheusrule
```

2. To list the configuration of an alerting rule, run the following:

```terminal
$ oc -n <project> get prometheusrule <rule> -o yaml
```


## Removing alerting rules for user-defined projects

You can remove alerting rules for user-defined projects.

* You have enabled monitoring for user-defined projects.
* You are logged in as a cluster administrator or as a user that has the monitoring-rules-edit cluster role for the project where you want to create an alerting rule.
* You have installed the OpenShift CLI (oc).

* To remove rule <foo> in <namespace>, run the following:

```terminal
$ oc -n <namespace> delete prometheusrule <foo>
```


* Alertmanager (Prometheus documentation)