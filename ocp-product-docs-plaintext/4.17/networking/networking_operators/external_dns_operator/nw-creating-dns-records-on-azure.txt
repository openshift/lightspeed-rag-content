# Creating DNS records on Azure


You can create DNS records on Azure by using the External DNS Operator.

[IMPORTANT]
----
Using the External DNS Operator on a Microsoft Entra Workload ID-enabled cluster or a cluster that runs in Microsoft Azure Government (MAG) regions is not supported.
----

# Creating DNS records on an Azure DNS zone

You can create Domain Name Server (DNS) records on a public or private DNS zone for Azure by using the External DNS Operator.

* You must have administrator privileges.
* The admin user must have access to the kube-system namespace.

1. Fetch the credentials from the kube-system namespace to use the cloud provider client by running the following command:

```terminal
$ CLIENT_ID=$(oc get secrets azure-credentials  -n kube-system  --template={{.data.azure_client_id}} | base64 -d)
$ CLIENT_SECRET=$(oc get secrets azure-credentials  -n kube-system  --template={{.data.azure_client_secret}} | base64 -d)
$ RESOURCE_GROUP=$(oc get secrets azure-credentials  -n kube-system  --template={{.data.azure_resourcegroup}} | base64 -d)
$ SUBSCRIPTION_ID=$(oc get secrets azure-credentials  -n kube-system  --template={{.data.azure_subscription_id}} | base64 -d)
$ TENANT_ID=$(oc get secrets azure-credentials  -n kube-system  --template={{.data.azure_tenant_id}} | base64 -d)
```

2. Log in to Azure by running the following command:

```terminal
$ az login --service-principal -u "${CLIENT_ID}" -p "${CLIENT_SECRET}" --tenant "${TENANT_ID}"
```

3. Get a list of routes by running the following command:

```terminal
$ oc get routes --all-namespaces | grep console
```

Example output

```terminal
openshift-console          console             console-openshift-console.apps.test.azure.example.com                       console             https   reencrypt/Redirect     None
openshift-console          downloads           downloads-openshift-console.apps.test.azure.example.com                     downloads           http    edge/Redirect          None
```

4. Get a list of DNS zones.
1. For public DNS zones by running the following command:

```terminal
$ az network dns zone list --resource-group "${RESOURCE_GROUP}"
```

2. For private DNS zones by running the following command:

```terminal
$ az network private-dns zone list -g "${RESOURCE_GROUP}"
```

5. Create a YAML file, for example, external-dns-sample-azure.yaml, that defines the ExternalDNS object:
Example external-dns-sample-azure.yaml file

```yaml
apiVersion: externaldns.olm.openshift.io/v1beta1
kind: ExternalDNS
metadata:
  name: sample-azure 1
spec:
  zones:
  - "/subscriptions/1234567890/resourceGroups/test-azure-xxxxx-rg/providers/Microsoft.Network/dnszones/test.azure.example.com" 2
  provider:
    type: Azure 3
  source:
    openshiftRouteOptions: 4
      routerName: default 5
    type: OpenShiftRoute 6
```

Specifies the External DNS name.
Defines the zone ID. For a private DNS zone, change dnszones to privateDnsZones.
Defines the provider type.
You can define options for the source of DNS records.
If the source type is OpenShiftRoute, you can pass the OpenShift Ingress Controller name. External DNS selects the canonical hostname of that router as the target while creating CNAME record.
Defines the route resource as the source for the Azure DNS records.

1. Check the records created for the routes.
1. For public DNS zones by running the following command:

```terminal
$ az network dns record-set list -g "${RESOURCE_GROUP}" -z "${ZONE_NAME}" | grep console
```

2. For private DNS zones by running the following command:

```terminal
$ az network private-dns record-set list -g "${RESOURCE_GROUP}" -z "${ZONE_NAME}" | grep console
```
