# Configuring an SR-IOV Ethernet network attachment


You can configure an Ethernet network attachment for an Single Root I/O Virtualization (SR-IOV) device in the cluster.
Before you perform any tasks in the following documentation, ensure that you installed the SR-IOV Network Operator.

# Ethernet device configuration object

You can configure an Ethernet network device by defining an SriovNetwork object.

The following YAML describes an SriovNetwork object:


```yaml
apiVersion: sriovnetwork.openshift.io/v1
kind: SriovNetwork
metadata:
  name: <name> 1
  namespace: openshift-sriov-network-operator 2
spec:
  resourceName: <sriov_resource_name> 3
  networkNamespace: <target_namespace> 4
  vlan: <vlan> 5
  spoofChk: "<spoof_check>" 6
  ipam: |- 7
    {}
  linkState: <link_state> 8
  maxTxRate: <max_tx_rate> 9
  minTxRate: <min_tx_rate> 10
  vlanQoS: <vlan_qos> 11
  trust: "<trust_vf>" 12
  capabilities: <capabilities> 13
```


A name for the object. The SR-IOV Network Operator creates a NetworkAttachmentDefinition object with same name.
The namespace where the SR-IOV Network Operator is installed.
The value for the spec.resourceName parameter from the SriovNetworkNodePolicy object that defines the SR-IOV hardware for this additional network.
The target namespace for the SriovNetwork object. Only {object} in the target namespace can attach to the additional network.
Optional: A Virtual LAN (VLAN) ID for the additional network. The integer value must be from 0 to 4095. The default value is 0.
Optional: The spoof check mode of the VF. The allowed values are the strings "on" and "off".

[IMPORTANT]
----
You must enclose the value you specify in quotes or the object is rejected by the SR-IOV Network Operator.
----
A configuration object for the IPAM CNI plugin as a YAML block scalar. The plugin manages IP address assignment for the attachment definition.
Optional: The link state of virtual function (VF). Allowed value are enable, disable and auto.
Optional: A maximum transmission rate, in Mbps, for the VF.
Optional: A minimum transmission rate, in Mbps, for the VF. This value must be less than or equal to the maximum transmission rate.

[NOTE]
----
Intel NICs do not support the minTxRate parameter. For more information, see BZ#1772847.
----
Optional: An IEEE 802.1p priority level for the VF. The default value is 0.
Optional: The trust mode of the VF. The allowed values are the strings "on" and "off".

[IMPORTANT]
----
You must enclose the value that you specify in quotes, or the SR-IOV Network Operator rejects the object.
----
Optional: The capabilities to configure for this additional network. You can specify '{ "ips": true }' to enable IP address support or '{ "mac": true }' to enable MAC address support.

## Configuration of IP address assignment for an additional network

The IP address management (IPAM) Container Network Interface (CNI) plugin provides IP addresses for other CNI plugins.

You can use the following IP address assignment types:

* Static assignment.
* Dynamic assignment through a DHCP server. The DHCP server you specify must be reachable from the additional network.
* Dynamic assignment through the Whereabouts IPAM CNI plugin.

### Static IP address assignment configuration

The following table describes the configuration for static IP address assignment:



The addresses array requires objects with the following fields:








```json
{
  "ipam": {
    "type": "static",
      "addresses": [
        {
          "address": "191.168.1.7/24"
        }
      ]
  }
}
```


### Dynamic IP address (DHCP) assignment configuration

The following JSON describes the configuration for dynamic IP address address assignment with DHCP.


[IMPORTANT]
----
A pod obtains its original DHCP lease when it is created. The lease must be periodically renewed by a minimal DHCP server deployment running on the cluster.
The SR-IOV Network Operator does not create a DHCP server deployment; The Cluster Network Operator is responsible for creating the minimal DHCP server deployment.
To trigger the deployment of the DHCP server, you must create a shim network attachment by editing the Cluster Network Operator configuration, as in the following example:

```yaml
apiVersion: operator.openshift.io/v1
kind: Network
metadata:
  name: cluster
spec:
  additionalNetworks:
  - name: dhcp-shim
    namespace: default
    type: Raw
    rawCNIConfig: |-
      {
        "name": "dhcp-shim",
        "cniVersion": "0.3.1",
        "type": "bridge",
        "ipam": {
          "type": "dhcp"
        }
      }
  # ...
```

----




```json
{
  "ipam": {
    "type": "dhcp"
  }
}
```


### Dynamic IP address assignment configuration with Whereabouts

The Whereabouts CNI plugin allows the dynamic assignment of an IP address to an additional network without the use of a DHCP server.

The Whereabouts CNI plugin also supports overlapping IP address ranges and configuration of the same CIDR range multiple times within separate NetworkAttachmentDefinition CRDs. This provides greater flexibility and management capabilities in multi-tenant environments.

#### Dynamic IP address configuration objects

The following table describes the configuration objects for dynamic IP address assignment with Whereabouts:



#### Dynamic IP address assignment configuration that uses Whereabouts

The following example shows a dynamic address assignment configuration that uses Whereabouts:


```json
{
  "ipam": {
    "type": "whereabouts",
    "range": "192.0.2.192/27",
    "exclude": [
       "192.0.2.192/30",
       "192.0.2.196/32"
    ]
  }
}
```


#### Dynamic IP address assignment that uses Whereabouts with overlapping IP address ranges

The following example shows a dynamic IP address assignment that uses overlapping IP address ranges for multi-tenant networks.


```json
{
  "ipam": {
    "type": "whereabouts",
    "range": "192.0.2.192/29",
    "network_name": "example_net_common", 1
  }
}
```


Optional. If set, must match the network_name of NetworkAttachmentDefinition 2.


```json
{
  "ipam": {
    "type": "whereabouts",
    "range": "192.0.2.192/24",
    "network_name": "example_net_common", 1
  }
}
```


Optional. If set, must match the network_name of NetworkAttachmentDefinition 1.

## Creating a configuration for assignment of dual-stack IP addresses dynamically

Dual-stack IP address assignment can be configured with the ipRanges parameter for:

* IPv4 addresses
* IPv6 addresses
* multiple IP address assignment

1. Set type to whereabouts.
2. Use ipRanges to allocate IP addresses as shown in the following example:

```yaml
cniVersion: operator.openshift.io/v1
kind: Network
=metadata:
  name: cluster
spec:
  additionalNetworks:
  - name: whereabouts-shim
    namespace: default
    type: Raw
    rawCNIConfig: |-
      {
       "name": "whereabouts-dual-stack",
       "cniVersion": "0.3.1,
       "type": "bridge",
       "ipam": {
         "type": "whereabouts",
         "ipRanges": [
                  {"range": "192.168.10.0/24"},
                  {"range": "2001:db8::/64"}
              ]
       }
      }
```

3. Attach network to a pod. For more information, see "Adding a pod to an additional network".
4. Verify that all IP addresses are assigned.
5. Run the following command to ensure the IP addresses are assigned as metadata.

```yaml
$ oc exec -it mypod -- ip a
```


* Attaching a pod to an additional network

# Configuring SR-IOV additional network

You can configure an additional network that uses SR-IOV hardware by creating an {rs} object.
When you create an {rs} object, the SR-IOV Network Operator automatically creates a NetworkAttachmentDefinition object.


[NOTE]
----
Do not modify or delete an {rs} object if it is attached to any {object} in a running state.
----

* Install the OpenShift CLI (oc).
* Log in as a user with cluster-admin privileges.

1. Create a {rs} object, and then save the YAML in the <name>.yaml file, where <name> is a name for this additional network. The object specification might resemble the following example:

```yaml
apiVersion: sriovnetwork.openshift.io/v1
kind: {rs}
metadata:
  name: attach1
  namespace: openshift-sriov-network-operator
spec:
  resourceName: net1
  networkNamespace: project2
  ipam: |-
    {
      "type": "host-local",
      "subnet": "10.56.217.0/24",
      "rangeStart": "10.56.217.171",
      "rangeEnd": "10.56.217.181",
      "gateway": "10.56.217.1"
    }
```

2. To create the object, enter the following command:

```terminal
$ oc create -f <name>.yaml
```


where <name> specifies the name of the additional network.
3. Optional: To confirm that the NetworkAttachmentDefinition object that is associated with the {rs} object that you created in the previous step exists, enter the following command. Replace <namespace> with the networkNamespace you specified in the {rs} object.

```terminal
$ oc get net-attach-def -n <namespace>
```


# Next steps

* Adding a pod to an SR-IOV additional network

# Additional resources

* Configuring an SR-IOV network device