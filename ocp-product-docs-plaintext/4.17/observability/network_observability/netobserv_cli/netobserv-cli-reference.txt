# Network Observability CLI (oc netobserv) reference


The Network Observability CLI (oc netobserv) has most features and filtering options that are available for the Network Observability Operator. You can pass command line arguments to enable features or filtering options.

# Network Observability CLI usage

You can use the Network Observability CLI (oc netobserv) to pass command line arguments to capture flows data, packets data, and metrics for further analysis and enable features supported by the Network Observability Operator.

## Syntax

The basic syntax for oc netobserv commands:


```terminal
$ oc netobserv [<command>] [<feature_option>] [<command_options>] 1
```


Feature options can only be used with the oc netobserv flows command. They cannot be used with the oc netobserv packets command.

## Basic commands



## Flows capture options

Flows capture has mandatory commands as well as additional options, such as enabling extra features about packet drops, DNS latencies, Round-trip time, and filtering.


```terminal
$ oc netobserv flows [<feature_option>] [<command_options>]
```





```terminal
$ oc netobserv flows --enable_pkt_drop  --enable_rtt --action=Accept --cidr=0.0.0.0/0 --protocol=TCP --port=49051
```


## Packets capture options

You can filter packets capture data the as same as flows capture by using the filters.
Certain features, such as packets drop, DNS, RTT, and network events, are only available for flows and metrics capture.


```terminal
$ oc netobserv packets [<option>]
```





```terminal
$ oc netobserv packets --action=Accept --cidr=0.0.0.0/0 --protocol=TCP --port=49051
```


## Metrics capture options

You can enable features and use filters on metrics capture, the same as flows capture. The generated graphs fill accordingly in the dashboard.


```terminal
$ oc netobserv metrics [<option>]
```





```terminal
$ oc netobserv metrics --enable_pkt_drop --protocol=TCP
```
