# Configuring ingress cluster traffic by using a NodePort


Red Hat OpenShift Container Platform provides methods for communicating from
outside the cluster with services running in the cluster. This method uses a
NodePort.

# Using a NodePort to get traffic into the cluster

Use a NodePort-type Service resource to expose a service on a specific port
on all nodes in the cluster. The port is specified in the Service resource&#8217;s
.spec.ports[*].nodePort field.


[IMPORTANT]
----
Using a node port requires additional port resources.
----

A NodePort exposes the service on a static port on the node&#8217;s IP address.
NodePorts are in the 30000 to 32767 range by default, which means a
NodePort is unlikely to match a service&#8217;s intended port. For example, port
8080 may be exposed as port 31020 on the node.

The administrator must ensure the external IP addresses are routed to the nodes.

NodePorts and external IPs are independent and both can be used
concurrently.


[NOTE]
----
The procedures in this section require prerequisites performed by the cluster
administrator.
----

# Prerequisites

Before starting the following procedures, the administrator must:

* Set up the external port to the cluster networking environment so that requests
can reach the cluster.
* Make sure there is at least one user with cluster admin role. To add this role
to a user, run the following command:

```
$ oc adm policy add-cluster-role-to-user cluster-admin <user_name>
```

* Have an Red Hat OpenShift Container Platform cluster with at least one master and at least one node
and a system outside the cluster that has network access to the cluster. This
procedure assumes that the external system is on the same subnet as the cluster.
The additional networking required for external systems on a different subnet is
out-of-scope for this topic.

# Creating a project and service

If the project and service that you want to expose does not exist, create the project and then create the service.

If the project and service already exists, skip to the procedure on exposing the service to create a route.

* Install the OpenShift CLI (`oc`) and log in as a cluster administrator.

1. Create a new project for your service by running the oc new-project command:

```terminal
$ oc new-project <project_name>
```

2. Use the oc new-app command to create your service:

```terminal
$ oc new-app nodejs:12~https://github.com/sclorg/nodejs-ex.git
```

3. To verify that the service was created, run the following command:

```terminal
$ oc get svc -n <project_name>
```

Example output

```terminal
NAME        TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
nodejs-ex   ClusterIP   172.30.197.157   <none>        8080/TCP   70s
```


[NOTE]
----
By default, the new service does not have an external IP address.
----

# Exposing the service by creating a route

You can expose the service as a route by using the oc expose command.

* You logged into Red Hat OpenShift Container Platform.

1. Log in to the project where the service you want to expose is located:

```terminal
$ oc project <project_name>
```

2. To expose a node port for the application, modify the custom resource definition (CRD) of a service by entering the following command:

```terminal
$ oc edit svc <service_name>
```

Example output

```yaml
spec:
  ports:
  - name: 8443-tcp
    nodePort: 30327 1
    port: 8443
    protocol: TCP
    targetPort: 8443
  sessionAffinity: None
  type: NodePort 2
```

Optional: Specify the node port range for the application. By default, Red Hat OpenShift Container Platform selects an available port in the 30000-32767 range.
Define the service type.
3. Optional: To confirm the service is available with a node port exposed, enter the following command:

```terminal
$ oc get svc -n myproject
```

Example output

```terminal
NAME                TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE
nodejs-ex           ClusterIP   172.30.217.127   <none>        3306/TCP         9m44s
nodejs-ex-ingress   NodePort    172.30.107.72    <none>        3306:31345/TCP   39s
```

4. Optional: To remove the service created automatically by the oc new-app command, enter the following command:

```terminal
$ oc delete svc nodejs-ex
```


* To check that the service node port is updated with a port in the 30000-32767 range, enter the following command:

```terminal
$ oc get svc
```


In the following example output, the updated port is 30327:
Example output

```terminal
NAME    TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
httpd   NodePort   172.xx.xx.xx    <none>        8443:30327/TCP   109s
```


# Additional resources

* Configuring the node port service range
* Adding a single NodePort service to an Ingress Controller