# Updating a cluster using the CLI


You can perform minor version and patch updates on an Red Hat OpenShift Container Platform cluster by using the OpenShift CLI (oc).

# Prerequisites

* Have access to the cluster as a user with admin privileges.
See Using RBAC to define and apply permissions.
* Have a recent etcd backup in case your update fails and you must restore your cluster to a previous state.
* Have a recent Container Storage Interface (CSI) volume snapshot in case you need to restore persistent volumes due to a pod failure.
* Your RHEL7 workers are replaced with RHEL8 or RHCOS workers. Red Hat does not support in-place RHEL7 to RHEL8 updates for RHEL workers; those hosts must be replaced with a clean operating system install.
* You have updated all Operators previously installed through Operator Lifecycle Manager (OLM) to a version that is compatible with your target release. Updating the Operators ensures they have a valid update path when the default OperatorHub catalogs switch from the current minor version to the next during a cluster update. See Updating installed Operators for more information on how to check compatibility and, if necessary, update the installed Operators.
* Ensure that all machine config pools (MCPs) are running and not paused. Nodes associated with a paused MCP are skipped during the update process. You can pause the MCPs if you are performing a canary rollout update strategy.
* If your cluster uses manually maintained credentials, update the cloud provider resources for the new release. For more information, including how to determine if this is a requirement for your cluster, see Preparing to update a cluster with manually maintained credentials.
* Ensure that you address all Upgradeable=False conditions so the cluster allows an update to the next minor version. An alert displays at the top of the Cluster Settings page when you have one or more cluster Operators that cannot be updated. You can still update to the next available patch update for the minor release you are currently on.
* If you run an Operator or you have configured any application with the pod disruption budget, you might experience an interruption during the update process. If minAvailable is set to 1 in PodDisruptionBudget, the nodes are drained to apply pending machine configs which might block the eviction process. If several nodes are rebooted, all the pods might run on only one node, and the PodDisruptionBudget field can prevent the node drain.


[IMPORTANT]
----
* When an update is failing to complete, the Cluster Version Operator (CVO) reports the status of any blocking components while attempting to reconcile the update. Rolling your cluster back to a previous version is not supported. If your update is failing to complete, contact Red Hat support.
* Using the unsupportedConfigOverrides section to modify the configuration of an Operator is unsupported and might block cluster updates. You must remove this setting before you can update your cluster.
----

* Support policy for unmanaged Operators

# Pausing a MachineHealthCheck resource

During the update process, nodes in the cluster might become temporarily unavailable. In the case of worker nodes, the MachineHealthCheck resources might identify such nodes as unhealthy and reboot them. To avoid rebooting such nodes, pause all the MachineHealthCheck resources before updating the cluster.


[NOTE]
----
Some MachineHealthCheck resources might not need to be paused. If your MachineHealthCheck resource relies on unrecoverable conditions, pausing that MHC is unnecessary.
----

* Install the OpenShift CLI (oc).

1. To list all the available MachineHealthCheck resources that you want to pause, run the following command:

```terminal
$ oc get machinehealthcheck -n openshift-machine-api
```

2. To pause the machine health checks, add the cluster.x-k8s.io/paused="" annotation to the MachineHealthCheck resource. Run the following command:

```terminal
$ oc -n openshift-machine-api annotate mhc <mhc-name> cluster.x-k8s.io/paused=""
```


The annotated MachineHealthCheck resource resembles the following YAML file:

```yaml
apiVersion: machine.openshift.io/v1beta1
kind: MachineHealthCheck
metadata:
  name: example
  namespace: openshift-machine-api
  annotations:
    cluster.x-k8s.io/paused: ""
spec:
  selector:
    matchLabels:
      role: worker
  unhealthyConditions:
  - type:    "Ready"
    status:  "Unknown"
    timeout: "300s"
  - type:    "Ready"
    status:  "False"
    timeout: "300s"
  maxUnhealthy: "40%"
status:
  currentHealthy: 5
  expectedMachines: 5
```


[IMPORTANT]
----
Resume the machine health checks after updating the cluster. To resume the check, remove the pause annotation from the MachineHealthCheck resource by running the following command:

```terminal
$ oc -n openshift-machine-api annotate mhc <mhc-name> cluster.x-k8s.io/paused-
```

----

# About updating single node Red Hat OpenShift Container Platform

You can update, or upgrade, a single-node Red Hat OpenShift Container Platform cluster by using either the console or CLI.

However, note the following limitations:

* The prerequisite to pause the MachineHealthCheck resources is not required because there is no other node to perform the health check.
* Restoring a single-node Red Hat OpenShift Container Platform cluster using an etcd backup is not officially supported. However, it is good practice to perform the etcd backup in case your update fails. If your control plane is healthy, you might be able to restore your cluster to a previous state by using the backup.
* Updating a single-node Red Hat OpenShift Container Platform cluster requires downtime and can include an automatic reboot. The amount of downtime depends on the update payload, as described in the following scenarios:
* If the update payload contains an operating system update, which requires a reboot, the downtime is significant and impacts cluster management and user workloads.
* If the update contains machine configuration changes that do not require a reboot, the downtime is less, and the impact on the cluster management and user workloads is lessened. In this case, the node draining step is skipped with single-node Red Hat OpenShift Container Platform because there is no other node in the cluster to reschedule the workloads to.
* If the update payload does not contain an operating system update or machine configuration changes, a short API outage occurs and resolves quickly.


[IMPORTANT]
----
There are conditions, such as bugs in an updated package, that can cause the single node to not restart after a reboot. In this case, the update does not rollback automatically.
----

* For information on which machine configuration changes require a reboot, see the note in About the Machine Config Operator.

# Updating a cluster by using the CLI

You can use the OpenShift CLI (oc) to review and request cluster updates.

You can find information about available Red Hat OpenShift Container Platform advisories and updates
in the errata section
of the Customer Portal.

* Install the OpenShift CLI (oc) that matches the version for your updated version.
* Log in to the cluster as user with cluster-admin privileges.
* Pause all MachineHealthCheck resources.

1. View the available updates and note the version number of the update that
you want to apply:

```terminal
$ oc adm upgrade
```

Example output

```terminal
Cluster version is 4.13.10
Upstream is unset, so the cluster will use an appropriate default.
Channel: stable-4.13 (available channels: candidate-4.13, candidate-4.14, fast-4.13, stable-4.13)
Recommended updates:
  VERSION     IMAGE
  4.13.14     quay.io/openshift-release-dev/ocp-release@sha256:406fcc160c097f61080412afcfa7fd65284ac8741ac7ad5b480e304aba73674b
  4.13.13     quay.io/openshift-release-dev/ocp-release@sha256:d62495768e335c79a215ba56771ff5ae97e3cbb2bf49ed8fb3f6cefabcdc0f17
  4.13.12     quay.io/openshift-release-dev/ocp-release@sha256:73946971c03b43a0dc6f7b0946b26a177c2f3c9d37105441315b4e3359373a55
  4.13.11     quay.io/openshift-release-dev/ocp-release@sha256:e1c2377fdae1d063aaddc753b99acf25972b6997ab9a0b7e80cfef627b9ef3dd
```


[NOTE]
----
* If there are no recommended updates, updates that have known issues might still be available.
See Updating along a conditional update path for more information.
* For details and information on how to perform a Control Plane Only update, please refer to the Preparing to perform a Control Plane Only update page, listed in the Additional resources section.
----
2. Based on your organization requirements, set the appropriate update channel. For example, you can set your channel to stable-4.13 or fast-4.13. For more information about channels, refer to Understanding update channels and releases listed in the Additional resources section.

```terminal
$ oc adm upgrade channel <channel>
```


For example, to set the channel to stable-4.19:

```terminal
$ oc adm upgrade channel stable-4.19
```


[IMPORTANT]
----
For production clusters, you must subscribe to a stable-*, eus-*, or fast-* channel.
----

[NOTE]
----
When you are ready to move to the next minor version, choose the channel that corresponds to that minor version.
The sooner the update channel is declared, the more effectively the cluster can recommend update paths to your target version.
The cluster might take some time to evaluate all the possible updates that are available and offer the best update recommendations to choose from.
Update recommendations can change over time, as they are based on what update options are available at the time.
If you cannot see an update path to your target minor version, keep updating your cluster to the latest patch release for your current version until the next minor version is available in the path.
----
3. Apply an update:
* To update to the latest version:

```terminal
$ oc adm upgrade --to-latest=true 1
```

* To update to a specific version:

```terminal
$ oc adm upgrade --to=<version> 1
```

<version> is the update version that you obtained from the output of the
oc adm upgrade command.

[IMPORTANT]
----
When using oc adm upgrade --help, there is a listed option for --force. This is heavily discouraged, as using the --force option bypasses cluster-side guards, including release verification and precondition checks. Using --force does not guarantee a successful update. Bypassing guards put the cluster at risk.
----
4. Review the status of the Cluster Version Operator:

```terminal
$ oc adm upgrade
```

5. After the update completes, you can confirm that the cluster version has
updated to the new version:

```terminal
$ oc adm upgrade
```

Example output

```terminal
Cluster version is <version>

Upstream is unset, so the cluster will use an appropriate default.
Channel: stable-<version> (available channels: candidate-<version>, eus-<version>, fast-<version>, stable-<version>)

No updates available. You may force an update to a specific release image, but doing so might not be supported and might result in downtime or data loss.
```

6. If you are updating your cluster to the next minor version, such as version X.y to X.(y+1), it is recommended to confirm that your nodes are updated before deploying workloads that rely on a new feature:

```terminal
$ oc get nodes
```

Example output

```terminal
NAME                           STATUS   ROLES    AGE   VERSION
ip-10-0-168-251.ec2.internal   Ready    master   82m   v1.32.3
ip-10-0-170-223.ec2.internal   Ready    master   82m   v1.32.3
ip-10-0-179-95.ec2.internal    Ready    worker   70m   v1.32.3
ip-10-0-182-134.ec2.internal   Ready    worker   70m   v1.32.3
ip-10-0-211-16.ec2.internal    Ready    master   82m   v1.32.3
ip-10-0-250-100.ec2.internal   Ready    worker   69m   v1.32.3
```


# Finding recommended update paths with oc adm upgrade recommend (Technology Preview)

When updating your cluster, the oc adm upgrade command returns a list of the next available versions. You can use the oc adm upgrade recommend command to narrow down your suggestions and recommend a new target release before you launch your update.

The oc adm upgrade recommend command is read-only and cannot alter the state of your cluster.


[IMPORTANT]
----
{FeatureName} is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.
For more information about the support scope of Red Hat Technology Preview features, see Technology Preview Features Support Scope.
----


[NOTE]
----
Your cluster does not need to be a Technology Preview-enabled cluster in order for you to use the oc adm upgrade recommend command.
----

1. Set the OC_ENABLE_CMD_UPGRADE_RECOMMEND environment variable to true by running the following command:

```terminal
$ export OC_ENABLE_CMD_UPGRADE_RECOMMEND=true
```

2. Run one of the following commands:
* To list the recommended versions for your update, run the oc adm upgrade recommend command:

```terminal
$ oc adm upgrade recommend
```

Example output

```terminal
Upstream is unset, so the cluster will use an appropriate default.
Channel: stable-4.13 (available channels: candidate-4.12, candidate-4.13, eus-4.12, eus-4.14, fast-4.12, fast-4.13, stable-4.12, stable-4.13)

Updates to 4.13:

Version: 4.13.50
Image: quay.io/openshift-release-dev/ocp-release@sha256:6afb11e1cac46fd26476ca134072937115256b9c6360f7a1cd1812992c065f02
Reason: AdminAckRequired
Message: Kubernetes 1.26 and therefore OpenShift 4.13 remove several APIs which require admin consideration. Please see the knowledge article https://access.redhat.com/articles/6958394 for details and instructions.

Version: 4.13.49
Image: quay.io/openshift-release-dev/ocp-release@sha256:ab6f574665395d809511db9dc57764358278538eaae248c6d199208b3c30ab7d
Reason: AdminAckRequired
Message: Kubernetes 1.26 and therefore OpenShift 4.13 remove several APIs which require admin consideration. Please see the knowledge article https://access.redhat.com/articles/6958394 for details and instructions.

Updates to 4.12:
VERSION     ISSUES
4.12.64     no known issues
4.12.63     no known issues
And 43 older 4.12 updates you can see with '--show-outdated-releases' or '--version VERSION'.
```

* To determine whether a specific version is recommended for your update, run the oc adm upgrade recommend --version command:

```terminal
$ oc adm upgrade recommend --version 4.12.51
```

Example output

```terminal
Upstream is unset, so the cluster will use an appropriate default.
Channel: stable-4.13 (available channels: candidate-4.12, candidate-4.13, eus-4.12, eus-4.14, fast-4.12, fast-4.13, stable-4.12, stable-4.13)

Update to 4.12.51 Recommended=False:
Image: quay.io/openshift-release-dev/ocp-release@sha256:158ced797e49f6caf7862acccef58484be63b642fdd2f66e6416295fa7958ab0
Release URL: https://access.redhat.com/errata/RHSA-2024:1052
Reason: MultipleReasons
Message: An unintended reversion to the default kubelet nodeStatusReportFrequency can cause significant load on the control plane. https://issues.redhat.com/browse/MCO-1094

After rebooting into kernel-4.18.0-372.88.1.el8_6 or later, kernel nodes experience high load average and io_wait times. The nodes might fail to start or stop pods and probes may fail. Workload and host processes may become unresponsive and workload may be disrupted. https://issues.redhat.com/browse/COS-2705
```


# Gathering cluster update status using oc adm upgrade status (Technology Preview)

When updating your cluster, the oc adm upgrade command returns returns limited information about the status of your update. You can use the oc adm upgrade status command to decouple status information from the oc adm upgrade command and return specific information regarding a cluster update, including the status of the control plane and worker node updates.

The oc adm upgrade status command is read-only and does not alter any state in your cluster.


[IMPORTANT]
----
{FeatureName} is a Technology Preview feature only. Technology Preview features are not supported with Red Hat production service level agreements (SLAs) and might not be functionally complete. Red Hat does not recommend using them in production. These features provide early access to upcoming product features, enabling customers to test functionality and provide feedback during the development process.
For more information about the support scope of Red Hat Technology Preview features, see Technology Preview Features Support Scope.
----

The oc adm upgrade status command can be used for clusters from version 4.12 up to the latest supported release.


[NOTE]
----
Your cluster does not need to be a Technology Preview-enabled cluster in order for you to use the oc adm upgrade status command.
----

1. Set the OC_ENABLE_CMD_UPGRADE_STATUS environment variable to true by running the following command:

```terminal
$ export OC_ENABLE_CMD_UPGRADE_STATUS=true
```

2. Run the oc adm upgrade status command:

```terminal
$ oc adm upgrade status
```

Example output for an update progressing successfully

```terminal
= Control Plane =
Assessment:      Progressing
Target Version:  4.17.1 (from 4.17.0)
Updating:        machine-config
Completion:      97% (32 operators updated, 1 updating, 0 waiting)
Duration:        54m (Est. Time Remaining: <10m)
Operator Status: 32 Healthy, 1 Unavailable

Control Plane Nodes
NAME                                        ASSESSMENT    PHASE      VERSION   EST    MESSAGE
ip-10-0-53-40.us-east-2.compute.internal    Progressing   Draining   4.17.0    +10m
ip-10-0-30-217.us-east-2.compute.internal   Outdated      Pending    4.17.0    ?
ip-10-0-92-180.us-east-2.compute.internal   Outdated      Pending    4.17.0    ?

= Worker Upgrade =

WORKER POOL   ASSESSMENT    COMPLETION   STATUS
worker        Progressing   0% (0/2)     1 Available, 1 Progressing, 1 Draining
infra         Progressing   50% (1/2)    1 Available, 1 Progressing, 1 Draining

Worker Pool Nodes: Worker
NAME                                       ASSESSMENT    PHASE      VERSION   EST    MESSAGE
ip-10-0-4-159.us-east-2.compute.internal   Progressing   Draining   4.17.0    +10m
ip-10-0-99-40.us-east-2.compute.internal   Outdated      Pending    4.17.0    ?

Worker Pool Nodes: infra
NAME                                             ASSESSMENT    PHASE      VERSION   EST    MESSAGE
ip-10-0-4-159-infra.us-east-2.compute.internal   Progressing   Draining   4.17.0    +10m
ip-10-0-20-162.us-east-2.compute.internal        Completed     Updated    4.17.1    -

= Update Health =
SINCE   LEVEL   IMPACT   MESSAGE
54m4s   Info    None     Update is proceeding well
```


* Performing a Control Plane Only update
* Updating along a conditional update path
* Understanding update channels and releases

# Updating along a conditional update path

You can update along a recommended conditional update path using the web console or the OpenShift CLI (oc).
When a conditional update is not recommended for your cluster, you can update along a conditional update path using the OpenShift CLI (oc) 4.10 or later.

1. To view the description of the update when it is not recommended because a risk might apply, run the following command:

```terminal
$ oc adm upgrade --include-not-recommended
```

2. If the cluster administrator evaluates the potential known risks and decides it is acceptable for the current cluster, then the administrator can waive the safety guards and proceed the update by running the following command:

```terminal
$ oc adm upgrade --allow-not-recommended --to <version> 1
```

<version> is the update version that you obtained from the output of the previous command, which is supported but also has known issues or risks.

* Understanding update channels and releases

# Changing the update server by using the CLI

Changing the update server is optional. If you have an OpenShift Update Service (OSUS) installed and configured locally, you must set the URL for the server as the upstream to use the local server during updates. The default value for upstream is https://api.openshift.com/api/upgrades_info/v1/graph.

* Change the upstream parameter value in the cluster version:

```terminal
$ oc patch clusterversion/version --patch '{"spec":{"upstream":"<update-server-url>"}}' --type=merge
```


The <update-server-url> variable specifies the URL for the update server.
Example output

```terminal
clusterversion.config.openshift.io/version patched
```
